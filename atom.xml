<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>QuZheng</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://qzdotnet.github.io/"/>
  <updated>2017-10-23T06:29:56.196Z</updated>
  <id>http://qzdotnet.github.io/</id>
  
  <author>
    <name>QuZheng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搭建  Nginx 静态网站</title>
    <link href="http://qzdotnet.github.io/2017/10/23/%E6%90%AD%E5%BB%BA-Nginx-%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/"/>
    <id>http://qzdotnet.github.io/2017/10/23/搭建-Nginx-静态网站/</id>
    <published>2017-10-23T06:12:16.000Z</published>
    <updated>2017-10-23T06:29:56.196Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h2><p>搭建静态网站，首先需要部署环境。下面的步骤，江告诉大家如何在服务器上通过 Nginx 部署 HTTP 静态服务。</p><p>在 CentOS 上，可直接使用 <code>yum</code> 来安装 Nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install nginx -y</div></pre></td></tr></table></figure><a id="more"></a><p>安装完成后，使用 <code>nginx</code> 命令启动 Nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx</div></pre></td></tr></table></figure><p> 此时，访问 <a href="http://127.0.0.1" target="_blank" rel="external">http://127.0.0.1</a> 可以看到 Nginx 的测试页面</p><h2 id="配置静态服务器访问路径"><a href="#配置静态服务器访问路径" class="headerlink" title="配置静态服务器访问路径"></a>配置静态服务器访问路径</h2><p>外网用户访问服务器的 Web 服务由 Nginx 提供， Nginx 需要配置静态资源的路径才能通过 url 正确访问到服务器上的静态资源。</p><p>打开 Nginx 默认配置文件 /etc/nginx/nginx.conf，修改 Nginx 配置，将默认的 <code>root /usr/share/nginx/html;</code> 修改为: <code>root /data/www;</code>，如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">user nginx;</div><div class="line">worker_processes auto;</div><div class="line">error_log /var/log/nginx/error.log;</div><div class="line">pid /run/nginx.pid;</div><div class="line"></div><div class="line">include /usr/share/nginx/modules/*.conf;</div><div class="line"></div><div class="line">events &#123;</div><div class="line">    worker_connections 1024;</div><div class="line">&#125;</div><div class="line"></div><div class="line">http &#123;</div><div class="line">    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</div><div class="line">                      '$status $body_bytes_sent "$http_referer" '</div><div class="line">                      '"$http_user_agent" "$http_x_forwarded_for"';</div><div class="line"></div><div class="line">    access_log  /var/log/nginx/access.log  main;</div><div class="line"></div><div class="line">    sendfile            on;</div><div class="line">    tcp_nopush          on;</div><div class="line">    tcp_nodelay         on;</div><div class="line">    keepalive_timeout   65;</div><div class="line">    types_hash_max_size 2048;</div><div class="line"></div><div class="line">    include             /etc/nginx/mime.types;</div><div class="line">    default_type        application/octet-stream;</div><div class="line"></div><div class="line">    include /etc/nginx/conf.d/*.conf;</div><div class="line"></div><div class="line">    server &#123;</div><div class="line">        listen       80 default_server;</div><div class="line">        listen       [::]:80 default_server;</div><div class="line">        server_name  _;</div><div class="line">        root         /data/www;</div><div class="line"></div><div class="line">        include /etc/nginx/default.d/*.conf;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        error_page 404 /404.html;</div><div class="line">            location = /40x.html &#123;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        error_page 500 502 503 504 /50x.html;</div><div class="line">            location = /50x.html &#123;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>配置文件将 <a href="">/data/www/static</a> 作为所有静态资源请求的根路径，如访问: <code>http://127.0.0.1/index.js</code>，将会去 <a href="">/data/www/static/</a> 目录下去查找 <code>index.js</code>。现在我们需要重启 Nginx 让新的配置生效：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx -s reload</div></pre></td></tr></table></figure><p>创建第一个静态文件</p><p>在  /data/www 目录下创建我们第一个静态文件 index.html</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">touch /data/www/index.html</div></pre></td></tr></table></figure><p>内容如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>第一个静态文件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">Hello world！</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><p>现在访问 <a href="http://127.0.0.1/index.html" target="_blank" rel="external">http://127.0.0.1/index.html</a> 应该可以看到页面输出 Hello world!</p><p>到此，一个基于 Nginx 的静态服务器就搭建完成了，现在所有放在 <a href="">/data/www</a> 目录下的的静态资源都可以直接通过域名访问。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装-Nginx&quot;&gt;&lt;a href=&quot;#安装-Nginx&quot; class=&quot;headerlink&quot; title=&quot;安装 Nginx&quot;&gt;&lt;/a&gt;安装 Nginx&lt;/h2&gt;&lt;p&gt;搭建静态网站，首先需要部署环境。下面的步骤，江告诉大家如何在服务器上通过 Nginx 部署 HTTP 静态服务。&lt;/p&gt;
&lt;p&gt;在 CentOS 上，可直接使用 &lt;code&gt;yum&lt;/code&gt; 来安装 Nginx&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yum install nginx -y&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
      <category term="Nginx" scheme="http://qzdotnet.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Linux 系统常用命令</title>
    <link href="http://qzdotnet.github.io/2017/10/20/Linux-%E7%B3%BB%E7%BB%9F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://qzdotnet.github.io/2017/10/20/Linux-系统常用命令/</id>
    <published>2017-10-20T00:39:22.000Z</published>
    <updated>2017-10-20T12:50:32.168Z</updated>
    
    <content type="html"><![CDATA[<h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p>命令格式： 命令 [-选项] [参数]<br>例： ls -la /etc<br>说明</p><ul><li>个别命令使用不遵循此格式</li><li>当有多个选项时，可以写在一起</li><li>简化选项与完整选项 -a  等于  –all<a id="more"></a></li></ul><h2 id="文件处理命令"><a href="#文件处理命令" class="headerlink" title="文件处理命令"></a>文件处理命令</h2><h3 id="目录处理命令"><a href="#目录处理命令" class="headerlink" title="目录处理命令"></a>目录处理命令</h3><h4 id="ls-查看目录"><a href="#ls-查看目录" class="headerlink" title="ls 查看目录"></a><strong>ls</strong> 查看目录</h4><p>英文原意：list<br>命令所在路径：/bin/ls<br>执行权限： 所有用户<br>功能描述：显示目录文件<br>语法： ls [-ald] [文件或目录]</p><ul><li>-a 显示所有的文件，包括隐藏文件，隐藏文件以.开头</li><li>-l 详细信息显示</li><li>-d 查看目录属性</li><li>-h 人性化选项，可以显示</li><li>-i 查询文件的 i 节点，可以理解为文件的ID或者索引号码<br>文件属性主要包含7个方面的内容：[权限][索引[ 所有者][用户组][\文件大小][最后修改时间][名称],权限描述Linux 将文件的访问属性分为三类，所有者(u)、所属组(g)、其他人(o)。<br>-rw-r–r–</li><li>第一个字符 -  代表文件类型 （- 二进制文件 d 目录 l 软连接文件）</li><li>rw- r– r–<ul><li>rw- 代表 u 所有者的权限</li><li>r– 代表 g 用户组的权限</li><li>r– 代表 o 其他用户的权限<br>r 代表具有读权限 w 代表具有写权限 x代表具有执行的权限（命令和脚本有意义）</li></ul></li></ul><h4 id="mkdir-目录创建命令"><a href="#mkdir-目录创建命令" class="headerlink" title="mkdir 目录创建命令"></a>mkdir 目录创建命令</h4><p>英文原意： <em>m</em>a<em>k</em>e <em>dir</em>ectories<br>所在路径：/bin/mkdir<br>执行权限：所有用户<br>语法 ： mkdir [-p] [目录名称]</p><ul><li>-p 递归创建</li><li>-m 或 –mode 建立目录同时设置目录权限<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mkdir -p /tmp/china/quzheng</div><div class="line"><span class="meta">#</span><span class="bash"> 可以使用 mkdir 一次创建多个文件</span></div><div class="line">mkdir /tmp/china/quzheng / /tmp/china/quzheng2 </div><div class="line"><span class="meta">#</span><span class="bash"> 创建目录，所有者有读、写和执行权限，其他人无权访问</span></div><div class="line">mkdir -p-m 700 /tmp/quzheng</div></pre></td></tr></table></figure></li></ul><h4 id="cd-移动目录"><a href="#cd-移动目录" class="headerlink" title="cd 移动目录"></a>cd 移动目录</h4><p>英文原意： <em>c</em>hange <em>d</em>irectory<br>执行权限：所有用户<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">进入用户主目录；</span></div><div class="line">cd </div><div class="line"><span class="meta">#</span><span class="bash">进入用户主目录；</span></div><div class="line">cd ~  </div><div class="line"><span class="meta">#</span><span class="bash">返回进入此目录之前所在的目录； </span></div><div class="line">cd - </div><div class="line"><span class="meta">#</span><span class="bash">返回上级目录（若当前目录为“/“，则执行完后还在“/<span class="string">"；"</span>..<span class="string">"为上级目录的意思）；</span></span></div><div class="line">cd ..  </div><div class="line"><span class="meta">#</span><span class="bash">返回上两级目录；</span></div><div class="line">cd ../..  </div><div class="line"><span class="meta">#</span><span class="bash"> 把上个命令的参数作为<span class="built_in">cd</span>参数使用。</span></div><div class="line">cd !$</div></pre></td></tr></table></figure></p><h4 id="pwd-显示当前目录"><a href="#pwd-显示当前目录" class="headerlink" title="pwd 显示当前目录"></a>pwd 显示当前目录</h4><p>英文原意： <em>p</em>rint <em>w</em>orking <em>d</em>irectory<br>命令所在路径：/bin/<br>执行权限：所有用户<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pwd</div></pre></td></tr></table></figure></p><h4 id="rmdir-删除空目录"><a href="#rmdir-删除空目录" class="headerlink" title="rmdir 删除空目录"></a>rmdir 删除空目录</h4><p>英文原意： <em>r</em>e<em>m</em>ove empty <em>dir</em>ectory<br>命令所在路径：/bin/<br>执行权限：所有用户<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rmdir /tmp/quzheng</div></pre></td></tr></table></figure></p><h4 id="cp-复制文件或目录"><a href="#cp-复制文件或目录" class="headerlink" title="cp 复制文件或目录"></a>cp 复制文件或目录</h4><p>英文原意： <em>c</em>o<em>p</em>y<br>命令所在路径：/bin/<br>语法：cp -rp [原文件或目录] [目标目录]</p><ul><li>-r 复制目录</li><li>-p 保留文件属性<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">复制目录</span></div><div class="line">cp -r /tmp/quzheng /bin/</div><div class="line"><span class="meta">#</span><span class="bash">复制文件</span></div><div class="line">cp /etc/grub.conf /tmp</div><div class="line"><span class="meta">#</span><span class="bash">同时复制多个文件</span></div><div class="line">cp /root/install.log /root/install.log.syslog /tmp</div><div class="line"><span class="meta">#</span><span class="bash">复制同时修改名称</span></div><div class="line">cp /tmp/quzheng</div></pre></td></tr></table></figure></li></ul><h4 id="mv-剪切文件改名"><a href="#mv-剪切文件改名" class="headerlink" title="mv 剪切文件改名"></a>mv 剪切文件改名</h4><p>英文原意： <em>m</em>o<em>v</em>e<br>命令所在路径：/bin/<br>语法： mv [源文件或目录] [目标目录]<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mv /tmp/quzheng /root</div><div class="line"><span class="meta">#</span><span class="bash"> 剪切改名</span></div><div class="line">mv /tmp/quzheng /root/quzheng2</div><div class="line"><span class="meta">#</span><span class="bash"> 当前目录改名</span></div><div class="line">mv /tmp/quzheng /tmp/quzheng3</div></pre></td></tr></table></figure></p><h4 id="rm-删除文件和目录"><a href="#rm-删除文件和目录" class="headerlink" title="rm 删除文件和目录"></a>rm 删除文件和目录</h4><p>英文原意： <em>r</em>e<em>m</em>ove<br>命令所在路径：/bin/<br>语法： rm -rf  [文件或目录]</p><ul><li>-r 删除目录</li><li>-f 强制删除<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> 删除文件</span></div><div class="line">rm /tmp/confg.conf</div><div class="line"><span class="meta">#</span><span class="bash"> 删除目录</span></div><div class="line">rm -rf /tmp/quzheng2</div></pre></td></tr></table></figure></li></ul><h3 id="文件处理命令-1"><a href="#文件处理命令-1" class="headerlink" title="文件处理命令"></a>文件处理命令</h3><h4 id="touch-创建文件命令"><a href="#touch-创建文件命令" class="headerlink" title="touch 创建文件命令"></a>touch 创建文件命令</h4><p>命令所在路径：/bin/</p><p>语法： touch [文件名]</p><p>功能：有两个功能：一是用于把已存在文件的时间标签更新为系统当前的时间（默认方式），它们的数据将原封不动地保留下来；二是用来创建新的空文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">在当前目录下面创建一个quzheng的文件名</span></div><div class="line">touch quzheng</div></pre></td></tr></table></figure><blockquote><p>如果想创建文件需要有空格的时候，必须使用双引号将文件引起来，在 Linux 里面除了代表根分区的 / 其他的符号都可以作为文件名</p></blockquote><h4 id="cat-查看文件内容"><a href="#cat-查看文件内容" class="headerlink" title="cat 查看文件内容"></a>cat 查看文件内容</h4><p>命令所在路径：/bin/</p><p>语法：cat [文件名][-nbs]</p><ul><li>-n或-number：有1开始对所有输出的行数编号</li><li>-b或–number-nonblank：和-n相似，只不过对于空白行不编号；</li><li>-s或–squeeze-blank：当遇到有连续两行以上的空白行，就代换为一行的空白行；</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat quzheng</div></pre></td></tr></table></figure><h4 id="tac-倒序显示文件内容"><a href="#tac-倒序显示文件内容" class="headerlink" title="tac 倒序显示文件内容"></a>tac 倒序显示文件内容</h4><p>命令所在路径：/bin/</p><p>语法：cat [文件名][-nbs]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tac quzheng</div></pre></td></tr></table></figure><h3 id="链接命令"><a href="#链接命令" class="headerlink" title="链接命令"></a>链接命令</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;命令格式&quot;&gt;&lt;a href=&quot;#命令格式&quot; class=&quot;headerlink&quot; title=&quot;命令格式&quot;&gt;&lt;/a&gt;命令格式&lt;/h2&gt;&lt;p&gt;命令格式： 命令 [-选项] [参数]&lt;br&gt;例： ls -la /etc&lt;br&gt;说明&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;个别命令使用不遵循此格式&lt;/li&gt;
&lt;li&gt;当有多个选项时，可以写在一起&lt;/li&gt;
&lt;li&gt;简化选项与完整选项 -a  等于  –all
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统注意事项</title>
    <link href="http://qzdotnet.github.io/2017/10/20/Linux-%E7%B3%BB%E7%BB%9F%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>http://qzdotnet.github.io/2017/10/20/Linux-系统注意事项/</id>
    <published>2017-10-20T00:39:04.000Z</published>
    <updated>2017-10-20T00:46:17.651Z</updated>
    
    <content type="html"><![CDATA[<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h3 id="Linux-严格区分大小写"><a href="#Linux-严格区分大小写" class="headerlink" title="Linux 严格区分大小写"></a>Linux 严格区分大小写</h3><p>Linux 系统严格区分大小写，文件名称 、目录名称、Shell 命令的参数 都是严格区分大小写的。Linux 的 Shell 命令都是小写的。</p><a id="more"></a><h3 id="Linux-系统中所有的内容都是已文件的形式保存的，包括硬件保存硬件的文件夹-dev"><a href="#Linux-系统中所有的内容都是已文件的形式保存的，包括硬件保存硬件的文件夹-dev" class="headerlink" title="Linux 系统中所有的内容都是已文件的形式保存的，包括硬件保存硬件的文件夹/dev/"></a>Linux 系统中所有的内容都是已文件的形式保存的，包括硬件保存硬件的文件夹/dev/</h3><ul><li>硬盘文件是 /dev/sd[a-p]</li><li>光盘文件是 /dev/sr0 等</li></ul><h3 id="Linux-不靠扩展名区分文件类型"><a href="#Linux-不靠扩展名区分文件类型" class="headerlink" title="Linux 不靠扩展名区分文件类型"></a>Linux 不靠扩展名区分文件类型</h3><p>Linux 系统本身不依靠扩展名来区分文件，但是最好还是讲需要的文件进行扩展名命名。</p><ul><li>压缩包：“*.gz”、”*.bz2”、”*.tar.bz2”、”*.tgz”</li><li>二进制软件包：”*.rpm”</li><li>网页文件：”*.html”、”*.php”</li><li>脚本文件：”*.sh”</li><li>配置文件：”*.conf”</li></ul><h3 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h3><p>Linux 所有的存储设备都必须挂载之后用户才能使用，包括硬盘、U盘和光盘</p><h3 id="Windows程序"><a href="#Windows程序" class="headerlink" title="Windows程序"></a>Windows程序</h3><p>Windows 的程序不能直接在 Linux 中的安装和运行, 但是可以在 Linux 系统上安装 Windows 模拟器进行安装使用。但是模拟器不是所有的程序都能运行，也不稳定。</p><h2 id="服务器的管理和维护建议"><a href="#服务器的管理和维护建议" class="headerlink" title="服务器的管理和维护建议"></a>服务器的管理和维护建议</h2><h3 id="Linux-各目录的作用"><a href="#Linux-各目录的作用" class="headerlink" title="Linux 各目录的作用"></a>Linux 各目录的作用</h3><table><thead><tr><th>目录名</th><th>目录作用</th></tr></thead><tbody><tr><td>/bin/</td><td>存放系统命令的目录，普通用户和超级用户都可以执行。不过放在/bin下的命令在单用户模式下也可以执行</td></tr><tr><td>/sbin/</td><td>保存和系统环境设置相关的命令，只有超级用户可以使用这些命令进行系统环境设置，但是有些命令可以允许普通用户查看</td></tr><tr><td>/usr/bin/</td><td>存放系统命令的目录，普通用户和超级用户都可以执行，这些命令和系统启动无关。在单用户模式下不能执行。</td></tr><tr><td>/usr/sbin/</td><td>存放根文件系统不必要的系统命令，例如多数的服务器程序。只有超级用户可以使用。大家其实可以注意到 Linux 的系统，在所有 sbin 目录中保存的命令只有超级用户可以使用， bin 目录中保存的命令所有用户都可以使用。</td></tr><tr><td>/boot/</td><td>系统启动目录，保存系统启动相关的目录，如内核文件和启动引导程序(grup)</td></tr><tr><td>/dev/</td><td>设备文件保存位置。这个目录用来存放所有硬件设备文件</td></tr><tr><td>/etc/</td><td>配置文件保存位置。系统内所有采用默认安装方式(rpm 安装) 的服务的配置文件全部都保存在这个目录中，如用户账户和密码，服务的启动脚本，常用服务的配置文件等。</td></tr><tr><td>/home/</td><td>普通用户的加目录。建立每个用户时，每个用户要有一个默认登录位置，这个位置就是这个用户的家（宿主）目录，所有的普通用户的家目录就是在 /home 下建立一个和用户名相同的目录。如用户 user1 的家目录就是 /home/user1 ，只有管理员的目录是一级目录 /root/</td></tr><tr><td>/lib/</td><td>系统调用的函数库保存位置。</td></tr><tr><td>/lost+found/</td><td>当系统意外崩溃或机器意外关机，而产生一些文件碎片放在这里。当系统启动的过程中 fsck 工具会检查这里，并修复已经损坏的文件系统。这个目录只在每个分区中出现，例如/lost+found 就是根分区的备份恢复目录， /boot/lost+found 就是 /boot 分区的备份恢复目录。</td></tr><tr><td>/media/</td><td>挂载目录。系统建议是用来挂载媒体设备的。例如软盘和光盘</td></tr><tr><td>/mnt/</td><td>ls挂载目录，早期 Linux 中只有这一个挂载目录，并没有细分。现在这个目录系统建议挂载额外设备，如U盘，移动硬盘和其他操作系统的分区。</td></tr><tr><td>/misc/</td><td>挂载目录。系统建议用来挂载 NFS 服务的共享目录。只要是一个已经建立的空目录就可以作为挂载点。那么系统虽然准备了桑格挂载目录，但是到底在哪个目录中挂载什么设备可以又管理员自己决定。</td></tr><tr><td>/opt/</td><td>第三方安装软件保存位置。这个目录就是防止和安装其他软件的位置，手工安装的源码包软件都可以安装到这个目录中。还有一个常用的软件安装目录 /usr/local/</td></tr><tr><td>/proc/</td><td>虚拟文件系统，该目录中的数据不保存在硬盘当中，而是保存在内存当中。主要保存系统的内核，进程，外部设备状态和网络状态灯。如 /proc/cpuinfo 是保存 CPU 信息的，proc/devices 是保存设备驱动的列表， /proc/filesystems 是保存文件系统列表的，/proc/net 是保存网络协议信息的。</td></tr><tr><td>/sys/</td><td>虚拟文件系统。和/proc目录相似，都是保存在内存当中的，主要保存内核相关信息。</td></tr><tr><td>/root/</td><td>超级用户的家目录/src</td></tr><tr><td>/srv/</td><td>服务数据目录。一些系统服务启动之后，可以在这个目录中保存所需要的数据。</td></tr><tr><td>/tmp/</td><td>临时目录。系统存放临时目录的，该目录下所有的用户都可以访问和写入。建议在此目录中不要保存重要数据，最好每次开机都把该目录清空</td></tr><tr><td>/usr/</td><td>系统软件资源目录。usr 不是 user 的缩写，而是 Unix Software Resource 的缩写，所以不是存放用户数据，而是存放系统软件资源的目录。系统中安装软件大多书保存在这里。</td></tr><tr><td>/var</td><td>动态数据目录，主要保存缓存、日志以及软件运行所产生的文件。</td></tr></tbody></table><h3 id="服务器的注意事项"><a href="#服务器的注意事项" class="headerlink" title="服务器的注意事项"></a>服务器的注意事项</h3><ul><li>远程服务器不允许关机，只能重启</li><li>重启时应该关闭服务</li><li>不要再服务器访问高峰运行高负载命令</li><li>远程配置防火墙时，不要把自己踢出服务器</li><li>制定合理的密码规范并定期更新</li><li>合理分配权限</li><li>定期备份重要数据和日志，备份的原则不要把鸡蛋放在同一个篮子里</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h2&gt;&lt;h3 id=&quot;Linux-严格区分大小写&quot;&gt;&lt;a href=&quot;#Linux-严格区分大小写&quot; class=&quot;headerlink&quot; title=&quot;Linux 严格区分大小写&quot;&gt;&lt;/a&gt;Linux 严格区分大小写&lt;/h3&gt;&lt;p&gt;Linux 系统严格区分大小写，文件名称 、目录名称、Shell 命令的参数 都是严格区分大小写的。Linux 的 Shell 命令都是小写的。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>搭建 Docker 环境</title>
    <link href="http://qzdotnet.github.io/2017/10/19/%E6%90%AD%E5%BB%BA-Docker-%E7%8E%AF%E5%A2%83/"/>
    <id>http://qzdotnet.github.io/2017/10/19/搭建-Docker-环境/</id>
    <published>2017-10-19T02:37:53.000Z</published>
    <updated>2017-10-20T00:38:16.743Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装配置Docker"><a href="#安装配置Docker" class="headerlink" title="安装配置Docker"></a>安装配置Docker</h2><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><p>Docker 软件包已经包括在默认的 CentOS-Extras 软件源里。因此想要安装 docker，只需要运行下面的 yum 命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install docker-io -y</div></pre></td></tr></table></figure><p>使用 yum 命令安装完成后可以查看版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker -v</div></pre></td></tr></table></figure><p>设置开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig docker on</div></pre></td></tr></table></figure><h3 id="配置-Docker"><a href="#配置-Docker" class="headerlink" title="配置 Docker"></a>配置 Docker</h3><p>因为国内访问 Docker Hub 较慢，可以使用腾讯云提供的国内镜像源，加速访问 Docker Hub</p><p>依次执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo "OPTIONS='--registry-mirror=https://mirror.ccs.tencentyun.com'" &gt;&gt; /etc/sysconfig/docker</div></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl daemon-reload</div></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service docker restart</div></pre></td></tr></table></figure><h2 id="Docker-简单操作"><a href="#Docker-简单操作" class="headerlink" title="Docker 简单操作"></a>Docker 简单操作</h2><h3 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h3><p>下载一个官方的 CentOS 镜像到本地</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker pull centos</div></pre></td></tr></table></figure><p> 下载好的镜像就会出现在镜像列表里</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker images</div></pre></td></tr></table></figure><h3 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h3><p>知识我们可以在刚才下载的 CentOS 镜像生成的容器内操作了。</p><p>生成一个 centos 进项为模板的内容并使用 bashshell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run -it centos /bin/bash</div></pre></td></tr></table></figure><p>这个时候可以看到命令行的前端已经变成了 [root@(一串 hash Id)] 的形式, 这说明我们已经成功进入了 CentOS 容器。</p><p>在容器内执行任意命令, 不会影响到宿主机, 如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir -p /data/simple_docker</div></pre></td></tr></table></figure><p> 可以看到 /data 目录下已经创建成功了 simple_docker  文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls /data</div></pre></td></tr></table></figure><p>退出容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">exit</div></pre></td></tr></table></figure><p>查看宿主机的 /data 目录, 并没有 simple_docker 文件夹, 说明容器内的操作不会影响到宿主机</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls /data</div></pre></td></tr></table></figure><h3 id="保存容器"><a href="#保存容器" class="headerlink" title="保存容器"></a>保存容器</h3><p>查看所有容器信息，能狗获取容器的 id</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker ps =a</div></pre></td></tr></table></figure><p>然后执行如下命令，保存镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker commit -m="备注" 你的CONTAINER_ID 你的IMAGE</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装配置Docker&quot;&gt;&lt;a href=&quot;#安装配置Docker&quot; class=&quot;headerlink&quot; title=&quot;安装配置Docker&quot;&gt;&lt;/a&gt;安装配置Docker&lt;/h2&gt;&lt;h3 id=&quot;安装Docker&quot;&gt;&lt;a href=&quot;#安装Docker&quot; cla
      
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
      <category term="Docker" scheme="http://qzdotnet.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Linux 操作系统安装</title>
    <link href="http://qzdotnet.github.io/2017/10/17/Linux-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/"/>
    <id>http://qzdotnet.github.io/2017/10/17/Linux-操作系统安装/</id>
    <published>2017-10-17T12:31:37.000Z</published>
    <updated>2017-10-20T00:30:32.245Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> 本文主要介绍基于 VMware Workstations Pro  安装 CentOS 7 系统的介绍，并简单介绍 Linux 文件格式和远程连接</p></blockquote><h2 id="VMware-虚拟机的安装与使用"><a href="#VMware-虚拟机的安装与使用" class="headerlink" title="VMware 虚拟机的安装与使用"></a>VMware 虚拟机的安装与使用</h2><h3 id="下载VMware"><a href="#下载VMware" class="headerlink" title="下载VMware"></a>下载VMware</h3><p>下载<a href="https://my.vmware.com/en/web/vmware/info/slug/desktop_end_user_computing/vmware_workstation_pro/14_0?wd=&amp;eqid=b304d84f000280ff0000000259e5a313" target="_blank" rel="external">传送门</a></p><p>下载完毕后就可以对软件进行安装了，安装过程比较简单就不介绍了。</p><a id="more"></a><h3 id="虚拟机快照"><a href="#虚拟机快照" class="headerlink" title="虚拟机快照"></a>虚拟机快照</h3><p>VMware 可以给虚拟机创建快照，恢复快照将系统恢复到快照时的状态</p><h3 id="虚拟机克隆"><a href="#虚拟机克隆" class="headerlink" title="虚拟机克隆"></a>虚拟机克隆</h3><p>如果需要多个操作系统，可以使用克隆命令。</p><p>克隆有两种：链接克隆和完全克隆。</p><p>链接克隆创建被克隆机器的镜像。如果原始机删除克隆机无法使用。但是占用资源较少。</p><p><a href="https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/" target="_blank" rel="external">VMware文档</a></p><h2 id="CentOS安装"><a href="#CentOS安装" class="headerlink" title="CentOS安装"></a>CentOS安装</h2><h3 id="下载CentOS"><a href="#下载CentOS" class="headerlink" title="下载CentOS"></a>下载CentOS</h3><p>从CentOs的官方网站下载<a href="http://isoredirect.centos.org/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-1708.iso" target="_blank" rel="external">CentOS</a></p><h3 id="使用VMware将ISO挂在到虚拟光驱"><a href="#使用VMware将ISO挂在到虚拟光驱" class="headerlink" title="使用VMware将ISO挂在到虚拟光驱"></a>使用VMware将ISO挂在到虚拟光驱</h3><p>打开VMware Workstation 的虚拟机设置对话框，选择CD/DVD,使用 ISO 映像文件(M): 点击浏览按钮，选中刚才下载的 ISO 文件</p><h3 id="打开电源开始安装"><a href="#打开电源开始安装" class="headerlink" title="打开电源开始安装"></a>打开电源开始安装</h3><p>安装过程比较简单，注意选择安装内容的时候不要使用最小安装，使用基本安装。</p><h3 id="设置密码，安装系统密码原则"><a href="#设置密码，安装系统密码原则" class="headerlink" title="设置密码，安装系统密码原则"></a>设置密码，安装系统密码原则</h3><p>复杂性</p><ul><li>八位字符以上，大小写字符、数字、符号</li><li>不能是英文单词</li><li>不能是和用户相关的内容</li></ul><p>易记忆性</p><p>时效性</p><h3 id="设置网络"><a href="#设置网络" class="headerlink" title="设置网络"></a>设置网络</h3><p>默认安装完毕后，登录系统是不能上网的，CentOS默认不启动网卡，需要手动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">　　cd /etc/sysconfig/network-scripts/</div><div class="line">　　ls 查看一下ifcfg-eno后面对应的数字是什么，以ens33为例</div><div class="line"><span class="meta">　　#</span>切换到root用户下，</div><div class="line">　　vi ifcfg-ens33</div><div class="line"><span class="meta">　　#</span>编辑该文件</div><div class="line">　　IPADDR=192.168.x.xx（添加ip地址）</div><div class="line">NETWORK=255.255.255.0（添加默认网关）</div><div class="line">GETWAY=192.168.x.x（添加网关地址）</div><div class="line">UUID=04c1f501-d0af-41c4-b1b0-fc0f56c5edc7</div><div class="line">ONBOOT=yes  （由not改成yes）</div><div class="line"><span class="meta">　　#</span>即开启自动启用网络连接</div><div class="line">　　:wq 保存退出</div></pre></td></tr></table></figure><h2 id="系统分区"><a href="#系统分区" class="headerlink" title="系统分区"></a>系统分区</h2><h3 id="分区类型"><a href="#分区类型" class="headerlink" title="分区类型"></a>分区类型</h3><ul><li>主分区：最多只能有4个</li><li>扩展分区：扩展分区只能有一个，主分区加扩展分区最多有4个，用途就是存放逻辑分区定义，扩展分区不能存放数据。</li><li>逻辑分区：存放文件</li></ul><h3 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h3><p>格式化（高级格式化）又称逻辑格式化，它是指根据用户选定的文件系统（如FAT16、FAT32、NTFS、EXT2、EXT3、EXT4等），在磁盘的特定区域存放特定的数据，在分区中划出一片用于存放文件分配表、目录表等用于文件管理的磁盘空间</p><h3 id="硬件设备文件名"><a href="#硬件设备文件名" class="headerlink" title="硬件设备文件名"></a>硬件设备文件名</h3><table><thead><tr><th>硬件</th><th>设备文件名</th></tr></thead><tbody><tr><td>IDE硬盘</td><td>/dev/hd[a-d]</td></tr><tr><td>SCSI/SATA/USB硬盘</td><td>/dev/sd[a-p]</td></tr><tr><td>光驱</td><td>/dev/cdrom或者/dev/sr0</td></tr><tr><td>软驱</td><td>dev/fd[0-1]</td></tr><tr><td>打印机(25针)</td><td>/dev/lp[0-2]</td></tr><tr><td>打印机（ＵＳＢ）</td><td>dev/usb/lp[0-15]</td></tr><tr><td>鼠标</td><td>/dev/mouse</td></tr></tbody></table><h3 id="分区设备文件名"><a href="#分区设备文件名" class="headerlink" title="分区设备文件名"></a>分区设备文件名</h3><p>IDE:133MB/s</p><p>SCSI:200MB/s</p><p>SATA:500MB/s</p><p>设备文件名</p><p>/dev/had1(IDE)</p><p>/dev/dev/sda1(SCSI\STAT)</p><h3 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h3><p>给每一个分区分配挂载点，分区的设备必须挂载了以后才能使用。</p><p>/ (根分区)</p><p>swap 分区 （交换分区，内存2倍，不超过2GB）</p><p>推荐分区</p><p>/boot  (启动分区，200MB)</p><h3 id="文件系统结构"><a href="#文件系统结构" class="headerlink" title="文件系统结构"></a>文件系统结构</h3><ul><li>/分区<ul><li>​/boot</li><li>/etc<ul><li>passwd</li><li>shadow</li><li>group</li></ul></li><li>/home</li></ul></li></ul><p>Linux 系统每一个文件夹都可以制定一个硬盘分区</p><h2 id="远程登录管理"><a href="#远程登录管理" class="headerlink" title="远程登录管理"></a>远程登录管理</h2><h3 id="管理工具"><a href="#管理工具" class="headerlink" title="管理工具"></a>管理工具</h3><p>SecureCRT  Linux的常用远程管理工具</p><p>Winscp 文件拷贝工具</p><p>VNC 图形界面远程管理Linux</p><h3 id="SecureCRT-远程登录"><a href="#SecureCRT-远程登录" class="headerlink" title="SecureCRT  远程登录"></a>SecureCRT  远程登录</h3><p>打开 SecureCRT 点击快速连接 输入主机名和用户名点击链接，在弹出的密码窗口中输入用户密码</p><p><img src="http://ovs80if20.bkt.clouddn.com/linuxyc2.png" alt=""></p><h3 id="乱码问题解决"><a href="#乱码问题解决" class="headerlink" title="乱码问题解决"></a>乱码问题解决</h3><p>由于我们安装的 Linux 是中文语言的，所以远程的时候可能会出现乱码的情况</p><p>使用查看分区的命令来测试是否能显示中文</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df</div></pre></td></tr></table></figure><p>如果显示乱码就需要对 SecureCRT  进行配置 <code>选项</code> -&gt; <code>会话选项</code> ，调整外观中的字符编码和字体。</p><p>字体需要设置成支持中文的字体，字符编码需要设置成 GB2312，字符编码需要设置成 UFT-8</p><p><img src="http://ovs80if20.bkt.clouddn.com/linuxyc.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt; 本文主要介绍基于 VMware Workstations Pro  安装 CentOS 7 系统的介绍，并简单介绍 Linux 文件格式和远程连接&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;VMware-虚拟机的安装与使用&quot;&gt;&lt;a href=&quot;#VMware-虚拟机的安装与使用&quot; class=&quot;headerlink&quot; title=&quot;VMware 虚拟机的安装与使用&quot;&gt;&lt;/a&gt;VMware 虚拟机的安装与使用&lt;/h2&gt;&lt;h3 id=&quot;下载VMware&quot;&gt;&lt;a href=&quot;#下载VMware&quot; class=&quot;headerlink&quot; title=&quot;下载VMware&quot;&gt;&lt;/a&gt;下载VMware&lt;/h3&gt;&lt;p&gt;下载&lt;a href=&quot;https://my.vmware.com/en/web/vmware/info/slug/desktop_end_user_computing/vmware_workstation_pro/14_0?wd=&amp;amp;eqid=b304d84f000280ff0000000259e5a313&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;传送门&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载完毕后就可以对软件进行安装了，安装过程比较简单就不介绍了。&lt;/p&gt;
    
    </summary>
    
      <category term="-Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="-Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 系统简介</title>
    <link href="http://qzdotnet.github.io/2017/10/17/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%80%E4%BB%8B/"/>
    <id>http://qzdotnet.github.io/2017/10/17/Linux-系统简介/</id>
    <published>2017-10-17T12:20:03.000Z</published>
    <updated>2017-10-20T00:37:50.403Z</updated>
    
    <content type="html"><![CDATA[<h2 id="UNIX-和-LINUX的发展历史"><a href="#UNIX-和-LINUX的发展历史" class="headerlink" title="UNIX 和 LINUX的发展历史"></a>UNIX 和 LINUX的发展历史</h2><h3 id="UNIX-发展历史"><a href="#UNIX-发展历史" class="headerlink" title="UNIX 发展历史"></a>UNIX 发展历史</h3><ol><li><p>1965 MIT、GE、AT&amp;T联合开发 Multics 工程计划，其目标是开发一种交互式的具有多道程序处理能力的分时操作系统，但因 Multics 追求的目标过于庞大复杂，项目进度远远落后与计划，最后贝尔实验室退出。</p></li><li><p>1969年，美国贝尔实验室的肯·汤普森在DEC PDP-7机器上开发出了UNIX系统。</p></li><li><p>1971年，肯·汤普森的同事丹尼斯·里奇发明了C语言，1973年，UNIX系统的绝大部分源代码用C语言重写，这为提高UNIX系统的可移植性打下基础。</p><a id="more"></a></li></ol><h3 id="UNIX-发型版本"><a href="#UNIX-发型版本" class="headerlink" title="UNIX 发型版本"></a>UNIX 发型版本</h3><table><thead><tr><th>操作系统</th><th>公司</th><th>硬件平台</th></tr></thead><tbody><tr><td>AIX</td><td>IBM</td><td>PowerPC</td></tr><tr><td>HP-UX</td><td>HP</td><td>PA-RISC</td></tr><tr><td>Solaris</td><td>Sun</td><td>SPARC</td></tr><tr><td>Linux</td><td>Red Hat Linux、Ubuntu Linux……</td><td>IA(Intel、ADM、Cyrix、RISE)</td></tr><tr><td>BSD</td><td>伯克利大学</td></tr></tbody></table><h3 id="LINUX-发展史"><a href="#LINUX-发展史" class="headerlink" title="LINUX 发展史"></a>LINUX 发展史</h3><p>Linux系统诞生与1991年，由芬兰大学生李纳斯(Linus Torvalds)和后来陆续加入的众多爱好者共同开发完成。</p><p>Linux是开源软件，源代码开放的UNIX。</p><h3 id="LINUX-内核版本"><a href="#LINUX-内核版本" class="headerlink" title="LINUX 内核版本"></a>LINUX 内核版本</h3><p>Linux 内核官网： <a href="http://www.kernel.org" target="_blank" rel="external">www.kernel.org</a></p><p>内核版本说明：[主版本].[此版本].[末版本] 2.6.18</p><p>kernel源代码标记：mainline 、longterm、stable、linux-next、snapsho</p><ul><li>mainline：指由Linus Torvalds亲自制作的内核发布版，是官方当前最新版本的kernel source。在Torvalds对所有其他程序员所做出的重大变化进行整合，并且对先前版本的bug进行几轮修复之后，大约每十周正式发布一个新版本。mainline事实上代表着一个linux kernel分支，这个分支有另一个名称，叫做vanilla。</li><li>longterm：Long Term Support的缩写，长期维护的意思</li><li>stable ： 稳定版</li><li>linux-next、snapshot ：linux-next和snapshot，都是代码提交周期结束之前生成的快照 用于给Linux代码贡献者们做测试。</li></ul><h3 id="LINUX-发行版"><a href="#LINUX-发行版" class="headerlink" title="LINUX 发行版"></a>LINUX 发行版</h3><p>Linux 主要的发行版主要有两个系列 redhat 系列和 debian 系列,这两个操作系统使用的命令都差不多，但是安装软件的命令不太一样。</p><ul><li>redhat<ul><li>readhat</li><li>CentOS</li><li>SuSE</li><li>fedora</li><li>红旗Linux</li><li>turbolinux</li><li>gentoo linux</li><li>Mandriva</li></ul></li><li>debian<ul><li>debian</li><li>ubuntu</li><li>KNOPPIX</li></ul></li></ul><h2 id="开源软件简介"><a href="#开源软件简介" class="headerlink" title="开源软件简介"></a>开源软件简介</h2><p>###Linux上的开软软件列表</p><p>Linux上的服务器开源软件比WINODWS丰富，Windows服务器的个人软件更加丰富。</p><ul><li><p>Apache</p></li><li><p>Nginx</p></li><li><p>MySQL</p></li><li><p>php</p></li><li><p>samba</p></li><li><p>mongoDB</p></li><li><p>python</p></li><li><p>Ruby</p></li><li><p>Sphinx</p></li></ul><h3 id="开源软件"><a href="#开源软件" class="headerlink" title="开源软件"></a>开源软件</h3><p>开源软件是指在软件发行的时候，附上软件的源代码，并授权允许用户更改/自由再散布/衍生著作，开源并不抵制商业收费。 主要的特点</p><ul><li>使用的自由：绝大多数的开源软件免费</li><li>研究的自由：可以获得软件源代码</li><li>散布及改良的自由：可以自由传播、改良甚至销售</li></ul><h3 id="自由软件"><a href="#自由软件" class="headerlink" title="自由软件"></a>自由软件</h3><p>自由软件是一项思想运动，强调用户拥有如何使用软件的自由</p><ol><li>可以自由地运行；</li><li>可以自由地拷贝；</li><li>可以自由地修改；</li><li>可以自由地再发行。</li></ol><p>这里指的自由，并不是价格免费，这和价格无关而是使用软件对所有的用户来说是自由的。（英语中FREE有自由和免费的意思，比如自由的话语权，免费的夜宵）。</p><h3 id="免费软件"><a href="#免费软件" class="headerlink" title="免费软件"></a>免费软件</h3><p>免费软件就是免费提供给用户使用的软件，但是其免费的时候，通常都会有其他的限制，比如其源码不一定会公开，而且使用者也并没有使用、复制、研究、修改和再散布的权利。</p><h3 id="支撑互联网的开源技术"><a href="#支撑互联网的开源技术" class="headerlink" title="支撑互联网的开源技术"></a>支撑互联网的开源技术</h3><p>LAMP :  Linux 、Apache、MySQL、PHP</p><p>LNMP :  Linux、Nginx、MySQL、PHP</p><h2 id="Linux-应用领域"><a href="#Linux-应用领域" class="headerlink" title="Linux 应用领域"></a>Linux 应用领域</h2><h3 id="基于Linux的企业服务器和网站服务器"><a href="#基于Linux的企业服务器和网站服务器" class="headerlink" title="基于Linux的企业服务器和网站服务器"></a>基于Linux的企业服务器和网站服务器</h3><p>通过扫描网站：<a href="http://www.netcraft.com" target="_blank" rel="external">netcraft.com</a>，可以扫描网站使用的服务器类型。国内大型的网站都使用Linux</p><p>全球前500的计算服务器基本上也都使用的Linux服务器：<a href="http://www.top500.org" target="_blank" rel="external">www.top500.org</a></p><h3 id="嵌入式应用"><a href="#嵌入式应用" class="headerlink" title="嵌入式应用"></a>嵌入式应用</h3><ol><li>手机 、平板电脑（Android）</li><li>智能电视（Android）</li><li>小米盒子、乐视盒子（Android）</li><li>航空系统、银行系统、卡拉OK点歌系统</li><li>智能汽车</li></ol><h2 id="Linux-学习方法"><a href="#Linux-学习方法" class="headerlink" title="Linux 学习方法"></a>Linux 学习方法</h2><h3 id="为什么使用命令行"><a href="#为什么使用命令行" class="headerlink" title="为什么使用命令行"></a>为什么使用命令行</h3><p>WINDOWS主要是图形界面，Linux早期都是用于服务器操作系统的。所以基本上都是使用命令控制的，图形界面是占用资源的。</p><h3 id="解决问题的智慧"><a href="#解决问题的智慧" class="headerlink" title="解决问题的智慧"></a>解决问题的智慧</h3><ol><li><p>帮助</p></li><li><p>文档</p></li><li><p>示例</p></li><li><p>查找</p></li></ol><h3 id="英文提示的困惑"><a href="#英文提示的困惑" class="headerlink" title="英文提示的困惑"></a>英文提示的困惑</h3><p>Command not found</p><p>No Such file or directory</p><h3 id="Linux-学习方法-1"><a href="#Linux-学习方法-1" class="headerlink" title="Linux 学习方法"></a>Linux 学习方法</h3><ol><li>计划</li><li>专注</li><li>坚持</li><li>练习</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;UNIX-和-LINUX的发展历史&quot;&gt;&lt;a href=&quot;#UNIX-和-LINUX的发展历史&quot; class=&quot;headerlink&quot; title=&quot;UNIX 和 LINUX的发展历史&quot;&gt;&lt;/a&gt;UNIX 和 LINUX的发展历史&lt;/h2&gt;&lt;h3 id=&quot;UNIX-发展历史&quot;&gt;&lt;a href=&quot;#UNIX-发展历史&quot; class=&quot;headerlink&quot; title=&quot;UNIX 发展历史&quot;&gt;&lt;/a&gt;UNIX 发展历史&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;1965 MIT、GE、AT&amp;amp;T联合开发 Multics 工程计划，其目标是开发一种交互式的具有多道程序处理能力的分时操作系统，但因 Multics 追求的目标过于庞大复杂，项目进度远远落后与计划，最后贝尔实验室退出。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1969年，美国贝尔实验室的肯·汤普森在DEC PDP-7机器上开发出了UNIX系统。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1971年，肯·汤普森的同事丹尼斯·里奇发明了C语言，1973年，UNIX系统的绝大部分源代码用C语言重写，这为提高UNIX系统的可移植性打下基础。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>基于 CentOS 搭建个人网盘</title>
    <link href="http://qzdotnet.github.io/2017/10/17/%E5%9F%BA%E4%BA%8E-CentOS-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/"/>
    <id>http://qzdotnet.github.io/2017/10/17/基于-CentOS-搭建个人网盘/</id>
    <published>2017-10-17T01:36:26.000Z</published>
    <updated>2017-10-20T00:34:15.871Z</updated>
    
    <content type="html"><![CDATA[<p>转载自：<a href="https://cloud.tencent.com/developer/labs/lab/10093" target="_blank" rel="external">腾讯云实验室</a></p><h2 id="准备域名"><a href="#准备域名" class="headerlink" title="准备域名"></a>准备域名</h2><h3 id="域名注册"><a href="#域名注册" class="headerlink" title="域名注册"></a>域名注册</h3><p>如果您还没有域名，可以<a href="">在腾讯云上选购</a>，过程可以参考下面的视频。</p><ul><li><a href="">视频 - 在腾讯云上购买域名</a></li></ul><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p>域名购买完成后, 需要将域名解析到实验云主机上，实验云主机的 IP 为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">119.29.148.246</div></pre></td></tr></table></figure><p>在腾讯云购买的域名，可以<a href="">到控制台添加解析记录</a>，过程可参考下面的视频：</p><ul><li><p><a href="">视频 - 如何在腾讯云上解析域名</a></p><p>域名设置解析后需要过一段时间才会生效，通过 <code>ping</code> 命令检查域名是否生效 ，如：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ping www.yourdomain.com</div></pre></td></tr></table></figure><p>如果 ping 命令返回的信息中含有你设置的解析的 IP 地址，说明解析成功。</p><a id="more"></a><h2 id="安装-Seafile"><a href="#安装-Seafile" class="headerlink" title="安装 Seafile"></a>安装 Seafile</h2><h3 id="安装依赖环境"><a href="#安装依赖环境" class="headerlink" title="安装依赖环境"></a>安装依赖环境</h3><p>使用 <code>yum</code> 安装 Python 及 MySQL :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install python python-setuptools python-imaging python-ldap python-memcached MySQL-python mariadb mariadb-server</div></pre></td></tr></table></figure><p>启动 MariaDB 服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo systemctl start mariadb.service</div><div class="line">sudo systemctl enable mariadb.service</div></pre></td></tr></table></figure><p>配置 MySQL:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/mysql_secure_installation</div></pre></td></tr></table></figure><p>配置过程输入参数如截图所示，其中 <code>New password</code> 和 <code>Re-enter new password</code> 字段都设置为 <code>Zk7Ggm9g</code>，其他字段一路回车使用默认值：</p><h3 id="安装-Seafile-1"><a href="#安装-Seafile-1" class="headerlink" title="安装 Seafile"></a>安装 Seafile</h3><p>下载 Seafile 安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://mc.qcloudimg.com/static/archive/3d8addbe52be88df4f6139ec7e35b453/seafile-server_5.1.4_x86-64.tar.gz</div></pre></td></tr></table></figure><p>解压 Seafile 安装包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zxvf seafile-server_5.1.4_x86-64.tar.gz</div></pre></td></tr></table></figure><p>安装 Seafile 安装包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo mkdir -p /opt/seafile/installed</div><div class="line">sudo mv seafile-server_5.1.4_x86-64.tar.gz /opt/seafile/installed</div><div class="line">sudo mv seafile-server-5.1.4/ /opt/seafile</div><div class="line">cd /opt/seafile/seafile-server-5.1.4</div><div class="line">sudo ./setup-seafile-mysql.sh</div></pre></td></tr></table></figure><p>执行过程输入参数如截图所示，<code>[server name]</code>字段输入 <code>Seafile</code>，<code>[ This server&#39;s ip or domain ]</code> 字段输入教程第一步申请的域名，<code>[ 1 or 2 ]</code> 字段选择 <code>1</code>，mysql 的 <code>[ root password ]</code> 字段输入 <code>Zk7Ggm9g</code>，其他字段一路回车使用默认值：</p><p><img src="http://ovs80if20.bkt.clouddn.com/ftp1.png" alt="截图"></p><h2 id="启动-Seafile-及修改防火墙规则"><a href="#启动-Seafile-及修改防火墙规则" class="headerlink" title="启动 Seafile 及修改防火墙规则"></a>启动 Seafile 及修改防火墙规则</h2><h3 id="启动-seafile"><a href="#启动-seafile" class="headerlink" title="启动 seafile"></a>启动 seafile</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo ./seafile.sh start</div><div class="line">sudo ./seahub.sh start</div></pre></td></tr></table></figure><p>执行过程输入参数如截图所示，其中 <code>[ admin email ]</code> 设置为您登录网盘的帐号，如 <code>admin@qcloudlab.wang</code>，<code>[ admin password ]</code>和 <code>[ admin password again ]</code> 设置为登录网盘的密码，如 <code>admin_Zk7Ggm9g</code>：</p><p><img src="http://ovs80if20.bkt.clouddn.com/ftp2.png" alt="截图"></p><h3 id="修改防火墙规则"><a href="#修改防火墙规则" class="headerlink" title="修改防火墙规则"></a>修改防火墙规则</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo firewall-cmd --zone=public --permanent --add-port=8082/tcp</div><div class="line">sudo firewall-cmd --zone=public --permanent --add-port=8000/tcp</div><div class="line">sudo firewall-cmd --reload</div></pre></td></tr></table></figure><h2 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h2><p>恭喜，您的 Seafile 已经部署完成，您现在拥有专属的网盘了，登录的帐号密码为您启动 Seafile 步骤中设置的邮箱和密码。</p><ul><li>可以通过 Ip 访问网盘：<a href="">http://119.29.148.246:8000</a></li><li>可以通过域名访问网盘：如 <a href="http://www.yourdomain.com:8000/" target="_blank" rel="external">http://www.yourdomain.com:8000</a> ，其中 <code>www.yourdomain.com</code> 替换为您注册的域名</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转载自：&lt;a href=&quot;https://cloud.tencent.com/developer/labs/lab/10093&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;腾讯云实验室&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;准备域名&quot;&gt;&lt;a href=&quot;#准备域名&quot; class=&quot;headerlink&quot; title=&quot;准备域名&quot;&gt;&lt;/a&gt;准备域名&lt;/h2&gt;&lt;h3 id=&quot;域名注册&quot;&gt;&lt;a href=&quot;#域名注册&quot; class=&quot;headerlink&quot; title=&quot;域名注册&quot;&gt;&lt;/a&gt;域名注册&lt;/h3&gt;&lt;p&gt;如果您还没有域名，可以&lt;a href=&quot;&quot;&gt;在腾讯云上选购&lt;/a&gt;，过程可以参考下面的视频。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;&quot;&gt;视频 - 在腾讯云上购买域名&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;域名解析&quot;&gt;&lt;a href=&quot;#域名解析&quot; class=&quot;headerlink&quot; title=&quot;域名解析&quot;&gt;&lt;/a&gt;域名解析&lt;/h3&gt;&lt;p&gt;域名购买完成后, 需要将域名解析到实验云主机上，实验云主机的 IP 为：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;119.29.148.246&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在腾讯云购买的域名，可以&lt;a href=&quot;&quot;&gt;到控制台添加解析记录&lt;/a&gt;，过程可参考下面的视频：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;&quot;&gt;视频 - 如何在腾讯云上解析域名&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;域名设置解析后需要过一段时间才会生效，通过 &lt;code&gt;ping&lt;/code&gt; 命令检查域名是否生效 ，如：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ping www.yourdomain.com&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果 ping 命令返回的信息中含有你设置的解析的 IP 地址，说明解析成功。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
      <category term="Seafile" scheme="http://qzdotnet.github.io/tags/Seafile/"/>
    
  </entry>
  
  <entry>
    <title>基于 CentOS 搭建 FTP 文件服务</title>
    <link href="http://qzdotnet.github.io/2017/10/17/%E5%9F%BA%E4%BA%8E-CentOS-%E6%90%AD%E5%BB%BA-FTP-%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1/"/>
    <id>http://qzdotnet.github.io/2017/10/17/基于-CentOS-搭建-FTP-文件服务/</id>
    <published>2017-10-17T01:30:58.000Z</published>
    <updated>2017-10-19T06:27:22.075Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装并启动-FTP-服务"><a href="#安装并启动-FTP-服务" class="headerlink" title="安装并启动 FTP 服务"></a>安装并启动 FTP 服务</h2><h3 id="安装-VSFTPD"><a href="#安装-VSFTPD" class="headerlink" title="安装 VSFTPD"></a>安装 VSFTPD</h3><p>使用 <code>yum</code> 安装 vsftpd ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install vsftpd -y</div></pre></td></tr></table></figure><h3 id="启动-VSFTPD"><a href="#启动-VSFTPD" class="headerlink" title="启动 VSFTPD"></a>启动 VSFTPD</h3><p>安装完成后，启动 FTP 服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service vsftpd start</div></pre></td></tr></table></figure><p>启动后，可以看到系统已经监听了 21 端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -nltp | grep 21</div></pre></td></tr></table></figure><h2 id="配置-FTP-权限"><a href="#配置-FTP-权限" class="headerlink" title="配置 FTP 权限"></a>配置 FTP 权限</h2><p>目前 FTP 服务器允许匿名登录，也无法区分用户访问，我们需要配置 FTP 的访问权限</p><h3 id="了解-VSFTP-配置"><a href="#了解-VSFTP-配置" class="headerlink" title="了解 VSFTP 配置"></a>了解 VSFTP 配置</h3><p>vsftpd 的配置目录为 <a href="">/etc/vsftpd</a>，包含下列的配置文件：</p><ul><li><a href="">vsftpd.conf</a> 为主要配置文件</li><li><a href="">ftpusers</a> 配置禁止访问 FTP 服务器的用户列表</li><li><a href="">user_list</a> 配置用户访问控制</li></ul><h3 id="阻止匿名访问和切换根目录"><a href="#阻止匿名访问和切换根目录" class="headerlink" title="阻止匿名访问和切换根目录"></a>阻止匿名访问和切换根目录</h3><p>匿名访问和切换根目录都会给服务器带来安全风险我们把这两个功能关闭。</p><p>编辑 /etc/vsftpd/vsftpd.conf ，找到下面两处配置 并修改：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span> 禁用匿名用户</div><div class="line">anonymous_enable=NO</div><div class="line"></div><div class="line"><span class="meta">#</span> 禁止切换根目录</div><div class="line">chroot_local_user=YES</div></pre></td></tr></table></figure><p>编辑完成后，按 <code>Ctrl + S</code> 保存配置，重新启动 FTP 服务，如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service vsftpd restart</div></pre></td></tr></table></figure><h3 id="创建-FTP-用户"><a href="#创建-FTP-用户" class="headerlink" title="创建 FTP 用户"></a>创建 FTP 用户</h3><p>创建一个用户 <code>ftpuser</code> :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">useradd ftpuser</div></pre></td></tr></table></figure><p>为用户 ftpuser 设置密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo "TestFtp1" | passwd ftpuser --stdin</div></pre></td></tr></table></figure><h3 id="限制该用户仅能通过-FTP-访问"><a href="#限制该用户仅能通过-FTP-访问" class="headerlink" title="限制该用户仅能通过 FTP 访问"></a>限制该用户仅能通过 FTP 访问</h3><p>限制用户 <code>ftpuser</code> 只能通过 FTP 访问服务器，而不能直接登录服务器：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">usermod -s /sbin/nologin ftpuser</div></pre></td></tr></table></figure><h3 id="为用户分配主目录"><a href="#为用户分配主目录" class="headerlink" title="为用户分配主目录"></a>为用户分配主目录</h3><p>为用户 <code>ftpuser</code> 创建主目录并约定： </p><p><code>/data/ftp</code> 为主目录，该目录不可上传文件</p><p><code>/data/ftp/pub</code> 文件只能上传到该目录下 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir -p /data/ftp/pub</div></pre></td></tr></table></figure><p>创建登录欢迎文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo "Welcome to use FTP service." &gt; data/ftp/welcome.txt</div></pre></td></tr></table></figure><p>设置文件访问权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod a-w /data/ftp &amp;&amp; chmod 777 -R /data/ftp/pub</div></pre></td></tr></table></figure><p>设置用户的主目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">usermod -d /data/ftp ftpuser</div></pre></td></tr></table></figure><h2 id="准备域名和证书"><a href="#准备域名和证书" class="headerlink" title="准备域名和证书"></a>准备域名和证书</h2><h3 id="域名注册"><a href="#域名注册" class="headerlink" title="域名注册"></a>域名注册</h3><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><h2 id="访问-FTP-服务"><a href="#访问-FTP-服务" class="headerlink" title="访问 FTP 服务"></a>访问 FTP 服务</h2><p>根据个人的工作环境，选择一种方式来访问已经搭建的 FTP 服务</p><h3 id="通过-Windows-资源管理器访问"><a href="#通过-Windows-资源管理器访问" class="headerlink" title="通过 Windows 资源管理器访问"></a>通过 Windows 资源管理器访问</h3><p>Windows 用户可以复制下面的内容 到资源管理器的地址栏访问：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ftp://ftpuser:Password@&lt;您的FTPIP 地址&gt;</div></pre></td></tr></table></figure><h3 id="通过-FTP-客户端工具访问"><a href="#通过-FTP-客户端工具访问" class="headerlink" title="通过 FTP 客户端工具访问"></a>通过 FTP 客户端工具访问</h3><p>FTP 客户端工具众多，下面推荐两个常用的：</p><ul><li><em>WinSCP</em> - Windows 下的 FTP 和 SFTP 连接客户端</li><li><em>FileZilla</em> - 跨平台的 FTP 客户端，支持 Windows 和 Mac</li></ul><p>下载和安装 FTP 客户端后，使用下面的凭据进行连接即可：</p><p>[主机]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FTP服务器IP地址</div></pre></td></tr></table></figure><p>[用户名]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ftpuser</div></pre></td></tr></table></figure><p>[密码]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Password</div></pre></td></tr></table></figure><p>如果能够正常连接，那么大功告成，您可以开始使用属于您自己的 FTP 服务器了！</p><p>接下来，请上传任意一张图片到您的 FTP 服务器上的pub目录下，然后，就可以在 <a href="">/data/ftp/pub</a> 中看到了。</p><p>注意: <code>请不要直接上传文件到根目录下</code>，您应该选择上传到 <code>pub</code> 目录下</p><blockquote><p>如果您申请了域名，可以将链接中的 Ip 地址替换为对应的域名访问 FTP 服务</p><p>如果您申请了域名，可以将Ip 地址替换为对应的域名作为访问凭据</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装并启动-FTP-服务&quot;&gt;&lt;a href=&quot;#安装并启动-FTP-服务&quot; class=&quot;headerlink&quot; title=&quot;安装并启动 FTP 服务&quot;&gt;&lt;/a&gt;安装并启动 FTP 服务&lt;/h2&gt;&lt;h3 id=&quot;安装-VSFTPD&quot;&gt;&lt;a href=&quot;#安装-V
      
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="FTP" scheme="http://qzdotnet.github.io/tags/FTP/"/>
    
      <category term="CentOS" scheme="http://qzdotnet.github.io/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>基于 CentOS 搭建 WorkPress 个人博客</title>
    <link href="http://qzdotnet.github.io/2017/10/12/%E5%9F%BA%E4%BA%8E-CentOS-%E6%90%AD%E5%BB%BA-WorkPress-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://qzdotnet.github.io/2017/10/12/基于-CentOS-搭建-WorkPress-个人博客/</id>
    <published>2017-10-12T12:11:20.000Z</published>
    <updated>2017-10-20T00:33:55.956Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备-LNMP-环境"><a href="#准备-LNMP-环境" class="headerlink" title="准备 LNMP 环境"></a>准备 LNMP 环境</h2><h3 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h3><p>使用 <code>yum</code> 安装 Nginx :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install nginx -y</div></pre></td></tr></table></figure><p>修改 /etc/nginx/conf.d/default.conf ，去除对 IPv6地址的监听，可参考下面的示例：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen       80 default_server;</div><div class="line">    # listen       [::]:80 default_server;</div><div class="line">    server_name  _;</div><div class="line">    root         /usr/share/nginx/html;</div><div class="line"></div><div class="line">    # Load configuration files for the default server block.</div><div class="line">    include /etc/nginx/default.d/*.conf;</div><div class="line"></div><div class="line">    location / &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    error_page 404 /404.html;</div><div class="line">        location = /40x.html &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    error_page 500 502 503 504 /50x.html;</div><div class="line">        location = /50x.html &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>修改完成后，启动 Nginx :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx</div></pre></td></tr></table></figure><p>此时，可访问外网 HTTP (<a href="http://127.0.0.1" target="_blank" rel="external">http://127.0.0.1</a>) 来确认是否已经安装成功</p><p>将 Nginx 加入开机自动启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig nginx on</div></pre></td></tr></table></figure><h3 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h3><p>使用 <code>yum</code> 安装 MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install mysql-server -y</div></pre></td></tr></table></figure><p>启动 MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysqld restart</div></pre></td></tr></table></figure><p>设置 MySQL 账户的密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/mysqladmin -u root password &apos;MyPas$word4Word_Press&apos;</div></pre></td></tr></table></figure><p>将 MySQL 加入开机自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig mysqld on</div></pre></td></tr></table></figure><h3 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h3><p>使用 <code>yum</code> 安装 PHP</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install php-fpm php-mysql -y</div></pre></td></tr></table></figure><p>安装之后，启动 PHP-FPM 进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service php-fpm start</div></pre></td></tr></table></figure><p>把 PHP-FPM 加入开机自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig php-fpm on</div></pre></td></tr></table></figure><h2 id="安装并配置-WordPress"><a href="#安装并配置-WordPress" class="headerlink" title="安装并配置 WordPress"></a>安装并配置 WordPress</h2><h3 id="安装-WordPress"><a href="#安装-WordPress" class="headerlink" title="安装 WordPress"></a>安装 WordPress</h3><p>配置好 LNMP 环境以后我们，继续使用 <code>yum</code> 来安装 WordPress:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install wordpress-y</div></pre></td></tr></table></figure><p>安装完成后，就可以在 /usr/share/wordpress 看到 WordPress 的源代码了</p><h3 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h3><p>进入 MySQL :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -uroot --password='MyPas$word4Word_Press'</div></pre></td></tr></table></figure><p>为 WordPress 创建一个数据库:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CREATE DATABASE WORDPRESS;</div></pre></td></tr></table></figure><p>MySQL 部分设置完了，我们退出 MySQL 环境：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">exit</div></pre></td></tr></table></figure><p>把上述的 DB 配置<a href="">同步到 WordPress 的配置</a>文件中，可参考下面的配置：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * The base configuration for WordPress</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * The wp-config.php creation script uses this file during the</span></div><div class="line"><span class="comment"> * installation. You don't have to use the web site, you can</span></div><div class="line"><span class="comment"> * copy this file to "wp-config.php" and fill in the values.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * This file contains the following configurations:</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * * MySQL settings</span></div><div class="line"><span class="comment"> * * Secret keys</span></div><div class="line"><span class="comment"> * * Database table prefix</span></div><div class="line"><span class="comment"> * * ABSPATH</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * <span class="doctag">@link</span> https://codex.wordpress.org/Editing_wp-config.php</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * <span class="doctag">@package</span> WordPress</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="comment">// ** MySQL settings - You can get this info from your web host ** //</span></div><div class="line"><span class="comment">/** The name of the database for WordPress */</span></div><div class="line">define(<span class="string">'DB_NAME'</span>, <span class="string">'wordpress'</span>);</div><div class="line"></div><div class="line"><span class="comment">/** MySQL database username */</span></div><div class="line">define(<span class="string">'DB_USER'</span>, <span class="string">'root'</span>);</div><div class="line"></div><div class="line"><span class="comment">/** MySQL database password */</span></div><div class="line">define(<span class="string">'DB_PASSWORD'</span>, <span class="string">'MyPas$word4Word_Press'</span>);</div><div class="line"></div><div class="line"><span class="comment">/** MySQL hostname */</span></div><div class="line">define(<span class="string">'DB_HOST'</span>, <span class="string">'localhost'</span>);</div><div class="line"></div><div class="line"><span class="comment">/** Database Charset to use in creating database tables. */</span></div><div class="line">define(<span class="string">'DB_CHARSET'</span>, <span class="string">'utf8'</span>);</div><div class="line"></div><div class="line"><span class="comment">/** The Database Collate type. Don't change this if in doubt. */</span></div><div class="line">define(<span class="string">'DB_COLLATE'</span>, <span class="string">''</span>);</div><div class="line"></div><div class="line"><span class="comment">/**#@+</span></div><div class="line"><span class="comment"> * Authentication Unique Keys and Salts.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * Change these to different unique phrases!</span></div><div class="line"><span class="comment"> * You can generate these using the &#123;<span class="doctag">@link</span> https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service&#125;</span></div><div class="line"><span class="comment"> * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * <span class="doctag">@since</span> 2.6.0</span></div><div class="line"><span class="comment"> */</span></div><div class="line">define(<span class="string">'AUTH_KEY'</span>,         <span class="string">'put your unique phrase here'</span>);</div><div class="line">define(<span class="string">'SECURE_AUTH_KEY'</span>,  <span class="string">'put your unique phrase here'</span>);</div><div class="line">define(<span class="string">'LOGGED_IN_KEY'</span>,    <span class="string">'put your unique phrase here'</span>);</div><div class="line">define(<span class="string">'NONCE_KEY'</span>,        <span class="string">'put your unique phrase here'</span>);</div><div class="line">define(<span class="string">'AUTH_SALT'</span>,        <span class="string">'put your unique phrase here'</span>);</div><div class="line">define(<span class="string">'SECURE_AUTH_SALT'</span>, <span class="string">'put your unique phrase here'</span>);</div><div class="line">define(<span class="string">'LOGGED_IN_SALT'</span>,   <span class="string">'put your unique phrase here'</span>);</div><div class="line">define(<span class="string">'NONCE_SALT'</span>,       <span class="string">'put your unique phrase here'</span>);</div><div class="line"></div><div class="line"><span class="comment">/**#@-*/</span></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * WordPress Database Table prefix.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * You can have multiple installations in one database if you give each</span></div><div class="line"><span class="comment"> * a unique prefix. Only numbers, letters, and underscores please!</span></div><div class="line"><span class="comment"> */</span></div><div class="line">$table_prefix  = <span class="string">'wp_'</span>;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * See http://make.wordpress.org/core/2013/10/25/the-definitive-guide-to-disabling-auto-updates-in-wordpress-3-7</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="comment">/* Disable all file change, as RPM base installation are read-only */</span></div><div class="line">define(<span class="string">'DISALLOW_FILE_MODS'</span>, <span class="keyword">true</span>);</div><div class="line"></div><div class="line"><span class="comment">/* Disable automatic updater, in case you want to allow</span></div><div class="line"><span class="comment">   above FILE_MODS for plugins, themes, ... */</span></div><div class="line">define(<span class="string">'AUTOMATIC_UPDATER_DISABLED'</span>, <span class="keyword">true</span>);</div><div class="line"></div><div class="line"><span class="comment">/* Core update is always disabled, WP_AUTO_UPDATE_CORE value is ignore */</span></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * For developers: WordPress debugging mode.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * Change this to true to enable the display of notices during development.</span></div><div class="line"><span class="comment"> * It is strongly recommended that plugin and theme developers use WP_DEBUG</span></div><div class="line"><span class="comment"> * in their development environments.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * For information on other constants that can be used for debugging,</span></div><div class="line"><span class="comment"> * visit the Codex.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * <span class="doctag">@link</span> https://codex.wordpress.org/Debugging_in_WordPress</span></div><div class="line"><span class="comment"> */</span></div><div class="line">define(<span class="string">'WP_DEBUG'</span>, <span class="keyword">false</span>);</div><div class="line"></div><div class="line"><span class="comment">/* That's all, stop editing! Happy blogging. */</span></div><div class="line"></div><div class="line"><span class="comment">/** Absolute path to the WordPress directory. */</span></div><div class="line"><span class="keyword">if</span> ( !defined(<span class="string">'ABSPATH'</span>) )</div><div class="line">    define(<span class="string">'ABSPATH'</span>, <span class="string">'/usr/share/wordpress'</span>);</div><div class="line"></div><div class="line"><span class="comment">/** Sets up WordPress vars and included files. */</span></div><div class="line"><span class="keyword">require_once</span>(ABSPATH . <span class="string">'wp-settings.php'</span>);</div></pre></td></tr></table></figure><h3 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h3><p>WordPress 已经安装完毕，我们配置 Nginx  把请求转发给 PHP-FPM 来处理：</p><p>首先，重命名默认的配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /etc/nginx/conf.d/</div><div class="line">mv default.conf defaut.conf.bak</div></pre></td></tr></table></figure><p>在 <code>/etc/nginx/conf.d</code> <a href="">创建 wordpress.conf 配置</a>，参考下面的内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen 80;</div><div class="line">    root /usr/share/wordpress;</div><div class="line">    location / &#123;</div><div class="line">        index index.php index.html index.htm;</div><div class="line">        try_files $uri $uri/ /index.php index.php;</div><div class="line">    &#125;</div><div class="line">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</div><div class="line">    location ~ .php$ &#123;</div><div class="line">        fastcgi_pass   127.0.0.1:9000;</div><div class="line">        fastcgi_index  index.php;</div><div class="line">        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</div><div class="line">        include        fastcgi_params;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>配置后，通知 Nginx 进程重新加载：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx -s reload</div></pre></td></tr></table></figure><h2 id="准备域名和解析"><a href="#准备域名和解析" class="headerlink" title="准备域名和解析"></a>准备域名和解析</h2><h3 id="域名注册"><a href="#域名注册" class="headerlink" title="域名注册"></a>域名注册</h3><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><h3 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;准备-LNMP-环境&quot;&gt;&lt;a href=&quot;#准备-LNMP-环境&quot; class=&quot;headerlink&quot; title=&quot;准备 LNMP 环境&quot;&gt;&lt;/a&gt;准备 LNMP 环境&lt;/h2&gt;&lt;h3 id=&quot;安装-Nginx&quot;&gt;&lt;a href=&quot;#安装-Nginx&quot; class=&quot;headerlink&quot; title=&quot;安装 Nginx&quot;&gt;&lt;/a&gt;安装 Nginx&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;yum&lt;/code&gt; 安装 Nginx :&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yum install nginx -y&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改 /etc/nginx/conf.d/default.conf ，去除对 IPv6地址的监听，可参考下面的示例：&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
      <category term="WorkPress" scheme="http://qzdotnet.github.io/tags/WorkPress/"/>
    
  </entry>
  
  <entry>
    <title>基于 CentOS 搭建 Discuz 论坛</title>
    <link href="http://qzdotnet.github.io/2017/10/12/%E5%9F%BA%E4%BA%8E-CentOS-%E6%90%AD%E5%BB%BA-Discuz-%E8%AE%BA%E5%9D%9B/"/>
    <id>http://qzdotnet.github.io/2017/10/12/基于-CentOS-搭建-Discuz-论坛/</id>
    <published>2017-10-12T01:00:18.000Z</published>
    <updated>2017-10-20T00:33:21.316Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备-LAMP-环境"><a href="#准备-LAMP-环境" class="headerlink" title="准备 LAMP 环境"></a>准备 LAMP 环境</h2><p>LAMP 是 Linux、Apache、MySQL 和 PHP 的缩写，是 Discuz 论坛系统以来的基础运行环境。我们先来搭建LAMP 环境</p><h3 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h3><p>使用 <code>yum</code>  安装 MySQL:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install mysql-server -y</div></pre></td></tr></table></figure><a id="more"></a><p>安装完成后，启用 MySQL 服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysqld restart</div></pre></td></tr></table></figure><p>可以设置自己的 MySQL 账户名和密码，参考下面的内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/mysqladmin -u root password 'Password'</div></pre></td></tr></table></figure><p>将 MySQL 设置为开机自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig mysqld on</div></pre></td></tr></table></figure><h3 id="安装-Apache-组件"><a href="#安装-Apache-组件" class="headerlink" title="安装 Apache 组件"></a>安装 Apache 组件</h3><p>使用 <code>yum</code> 安装 Apache 组件:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install httpd -y</div></pre></td></tr></table></figure><p>安装之后，启动 httpd 进程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service httpd start</div></pre></td></tr></table></figure><p>把 httpd 也设置成开机自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig httpd on</div></pre></td></tr></table></figure><h3 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h3><p>使用 <code>yum</code> 安装 PHP:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install php php-fpm php-mysql -y</div></pre></td></tr></table></figure><p>安装之后，启动 PHP-FPM 进程 ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service php-fpm start</div></pre></td></tr></table></figure><p>启动之后，可以使用下面的命令查看 PHP-FPM 进程监听哪个端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -nlpt | grep php-fpm</div></pre></td></tr></table></figure><p>把 PHP-FPM 也设置成开机自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig php-fpm on</div></pre></td></tr></table></figure><h2 id="安装并配置Discuz"><a href="#安装并配置Discuz" class="headerlink" title="安装并配置Discuz"></a>安装并配置Discuz</h2><h3 id="安装-Discuz"><a href="#安装-Discuz" class="headerlink" title="安装 Discuz"></a>安装 Discuz</h3><p>CentOS 6 没有 Discuz 的 <code>yum</code> 源，所以我们需要下载一个 Discuz 压缩包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget http://download.comsenz.com/DiscuzX/3.2/Discuz_X3.2_SC_UTF8.zip</div></pre></td></tr></table></figure><p>下载完成后，解压这个安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uzip Discuz_X3.2_SC_UTF8.zip</div></pre></td></tr></table></figure><p>解压完后，就能再 <em>upload</em> 文件夹里看到 Discuz 的源代码了</p><h3 id="配置-Discuz"><a href="#配置-Discuz" class="headerlink" title="配置 Discuz"></a>配置 Discuz</h3><p>由于 PHP 默认访问 <code>/var/www/html/</code> 文件夹，所以我们需要把 <code>upload</code> 文件夹里的文件豆腐知道 <code>/var/www/html/</code> 文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mv -r upload/* /var/www/html/</div></pre></td></tr></table></figure><p>给 <code>/var/www/html/</code> 目录及子目录赋予权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod -R 777 /var/www/html</div></pre></td></tr></table></figure><p>重启 Apache</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service httpd restart</div></pre></td></tr></table></figure><h2 id="准备域名和证书"><a href="#准备域名和证书" class="headerlink" title="准备域名和证书"></a>准备域名和证书</h2><h3 id="域名注册"><a href="#域名注册" class="headerlink" title="域名注册"></a>域名注册</h3><p>如果你还没有域名，可以从阿里云注册域名。</p><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p>购买完成后，需要进行域名机械。域名设置解析后需要过一段时间才会生效，通过 <code>ping</code> 命令检查域名是否生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ping www.yourdomain.com</div></pre></td></tr></table></figure><p>如果 <code>ping</code> 命令返回的信息中包含你设置的 IP 地址，说明解析成功了。恭喜，您的 Discuz 论坛已经部署完成，您可以通过浏览器访问论坛查看效果。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;准备-LAMP-环境&quot;&gt;&lt;a href=&quot;#准备-LAMP-环境&quot; class=&quot;headerlink&quot; title=&quot;准备 LAMP 环境&quot;&gt;&lt;/a&gt;准备 LAMP 环境&lt;/h2&gt;&lt;p&gt;LAMP 是 Linux、Apache、MySQL 和 PHP 的缩写，是 Discuz 论坛系统以来的基础运行环境。我们先来搭建LAMP 环境&lt;/p&gt;
&lt;h3 id=&quot;安装-MySQL&quot;&gt;&lt;a href=&quot;#安装-MySQL&quot; class=&quot;headerlink&quot; title=&quot;安装 MySQL&quot;&gt;&lt;/a&gt;安装 MySQL&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;yum&lt;/code&gt;  安装 MySQL:&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yum install mysql-server -y&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
      <category term="Discuz" scheme="http://qzdotnet.github.io/tags/Discuz/"/>
    
  </entry>
  
  <entry>
    <title>Linux 基础入门</title>
    <link href="http://qzdotnet.github.io/2017/10/09/Linux-%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/"/>
    <id>http://qzdotnet.github.io/2017/10/09/Linux-基础入门/</id>
    <published>2017-10-09T11:58:15.000Z</published>
    <updated>2017-10-20T00:31:00.656Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h2><h3 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h3><p>使用 mkdir 命令创建目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir <span class="variable">$HOME</span>/testFolder</div></pre></td></tr></table></figure><a id="more"></a><h3 id="切换目录"><a href="#切换目录" class="headerlink" title="切换目录"></a>切换目录</h3><p>使用 cd 命令切换目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd <span class="variable">$HOME</span>/testFolder</div></pre></td></tr></table></figure><p>使用 cd../ 命令切换到上一级目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd ../</div></pre></td></tr></table></figure><h3 id="移动目录"><a href="#移动目录" class="headerlink" title="移动目录"></a>移动目录</h3><p>使用 mv 命令移动目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mv <span class="variable">$HOME</span>/testFolder /var/tmp</div></pre></td></tr></table></figure><h3 id="删除目录"><a href="#删除目录" class="headerlink" title="删除目录"></a>删除目录</h3><p>使用 rm -rf 命令删除目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rm -rf /var/tmp/testFolder</div></pre></td></tr></table></figure><h3 id="查看目录下的文件"><a href="#查看目录下的文件" class="headerlink" title="查看目录下的文件"></a>查看目录下的文件</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls /etc</div></pre></td></tr></table></figure><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><h3 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h3><p>使用 touch 命令创建文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">touch ~/testFile</div></pre></td></tr></table></figure><h3 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h3><p>使用 cp 命令复制文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp ~/testFile ~/testNewFile</div></pre></td></tr></table></figure><h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><p>使用 rm 命令删除文件，输入 <code>y</code>后回车确认删除</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rm ~/testFile</div></pre></td></tr></table></figure><h3 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h3><p>使用 cat 命令查看 .bash_history 文件内容, bash_history 文件保存执行命令的历史记录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat ~/.bash_history</div></pre></td></tr></table></figure><h2 id="过滤，管道与重定向"><a href="#过滤，管道与重定向" class="headerlink" title="过滤，管道与重定向"></a>过滤，管道与重定向</h2><h3 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h3><p>过滤出 /etc/passwd 文件中包含 <code>root</code> 的记录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grep <span class="string">'root'</span> /etc/passwd</div></pre></td></tr></table></figure><p>递归过滤出 /var/log/ 目录中包含 <code>lindex</code>的记录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grep -r <span class="string">'linux'</span> /var/log/</div></pre></td></tr></table></figure><h3 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h3><p>简单来说，linux中的管道的作用是将上一个命令的输出作为下一个命令的输入，像 pipe 一样将各个命令串联起来执行，管道的操作符是 |</p><p>比如，我们可以将 cat 和 grep 两个命令用管道组合在一起</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /etc/passwd | grep <span class="string">'root'</span></div></pre></td></tr></table></figure><p>过滤出/etc目录中名字包含<code>ssh</code>的目录（不包括子目录)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls /etc | grep <span class="string">'ssh'</span></div></pre></td></tr></table></figure><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><p>可以使用 &gt; 或者 &lt; 将命令的输出重定向到一个文件中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo &apos;Hello World&apos; &gt; ~/test.txt</div></pre></td></tr></table></figure><h2 id="常用的运维明令"><a href="#常用的运维明令" class="headerlink" title="常用的运维明令"></a>常用的运维明令</h2><h3 id="ping-命令"><a href="#ping-命令" class="headerlink" title="ping 命令"></a>ping 命令</h3><p>对 cloud.tencent.com 发送 4 个 ping 包，检查与其是否联通</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ping -c 4 cloud.tencent.com</div></pre></td></tr></table></figure><h3 id="netstat-命令"><a href="#netstat-命令" class="headerlink" title="netstat 命令"></a>netstat 命令</h3><p>netstat 命令用户显示各种网络相关信息，如网络连接、路由表、接口状态等等</p><p>列出所有处于监听状态的 tcp 端口</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat <span class="nomarkup">-lt</span></div></pre></td></tr></table></figure><p>查看所有的端口信息，包括 PID 和进程名称</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -tulpn</div></pre></td></tr></table></figure><h3 id="ps-命令"><a href="#ps-命令" class="headerlink" title="ps 命令"></a>ps 命令</h3><p>过滤得到当前系统中的 ssh 进程信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ps -aux | grep <span class="string">'ssh'</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目录操作&quot;&gt;&lt;a href=&quot;#目录操作&quot; class=&quot;headerlink&quot; title=&quot;目录操作&quot;&gt;&lt;/a&gt;目录操作&lt;/h2&gt;&lt;h3 id=&quot;创建目录&quot;&gt;&lt;a href=&quot;#创建目录&quot; class=&quot;headerlink&quot; title=&quot;创建目录&quot;&gt;&lt;/a&gt;创建目录&lt;/h3&gt;&lt;p&gt;使用 mkdir 命令创建目录&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mkdir &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/testFolder&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>搭建 GIT 服务器教程</title>
    <link href="http://qzdotnet.github.io/2017/10/09/%E6%90%AD%E5%BB%BA-GIT-%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://qzdotnet.github.io/2017/10/09/搭建-GIT-服务器教程/</id>
    <published>2017-10-09T05:58:37.000Z</published>
    <updated>2017-10-20T00:32:47.552Z</updated>
    
    <content type="html"><![CDATA[<p>转载自<a href="https://cloud.tencent.com/developer/labs/lab/10045" target="_blank" rel="external">腾讯云 开发者实验室</a></p><a id="more"></a><h2 id="01-下载安装git"><a href="#01-下载安装git" class="headerlink" title="01 下载安装git"></a>01 下载安装git</h2><p>Git 是一款免费、开源的分布式版本控制系统，用户敏捷高效的进行版本管理。本次安装使用的服务器是CentOS7.0 x64的服务器操作系统</p><h3 id="安装依赖库和编译工具"><a href="#安装依赖库和编译工具" class="headerlink" title="安装依赖库和编译工具"></a>安装依赖库和编译工具</h3><p>为了后续安装正常进行，需要先安装一些相关依赖库和编译工具</p><p><strong>安装依赖库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</div></pre></td></tr></table></figure><p><strong>安装编译工具</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install gcc perl_ExtUtils-MakeMaker</div></pre></td></tr></table></figure><h3 id="下载git"><a href="#下载git" class="headerlink" title="下载git"></a>下载git</h3><p>选择一个目录，用来存放下载下来的安装包，这里讲安装包放在/user/local/src目录里</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /usr/local/src</div></pre></td></tr></table></figure><p>到官网找一个新版稳定的源码包下载到/usr/local/src文件夹里</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://www.kernel.org/pub/software/scm/git/git-2.10.0.tar.gz</div></pre></td></tr></table></figure><h3 id="解压和编译"><a href="#解压和编译" class="headerlink" title="解压和编译"></a>解压和编译</h3><p>解压下载的源码包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zvxf git-2.10.0.tar.gz</div></pre></td></tr></table></figure><p>解压后进入git-2.10.0文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd git-2.10.0</div></pre></td></tr></table></figure><p> 执行编译</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make all prefix=/usr/local/git</div></pre></td></tr></table></figure><p>执行完成后，安装到/usr/local/git目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make install prefix=/usr/local/git</div></pre></td></tr></table></figure><h2 id="02-配置环境变量"><a href="#02-配置环境变量" class="headerlink" title="02 配置环境变量"></a>02 配置环境变量</h2><h3 id="将git目录加入PATH"><a href="#将git目录加入PATH" class="headerlink" title="将git目录加入PATH"></a>将git目录加入PATH</h3><p>将原来的PATH指向目录修改为现在的目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo 'export PATH=$PATH:/usr/local/git/bin' &gt;&gt; /etc/bashrc</div></pre></td></tr></table></figure><p>生效环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /etc/bashrc</div></pre></td></tr></table></figure><p>此时我们能查看 git 版本号，说明我们已经安装成功了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git --version</div></pre></td></tr></table></figure><h2 id="03-创建git账号密码"><a href="#03-创建git账号密码" class="headerlink" title="03 创建git账号密码"></a>03 创建git账号密码</h2><p>为我们刚刚搭建好的 git 创建一个账号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">useradd -m gituser</div></pre></td></tr></table></figure><p>然后为这个账号设置密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">passwd gituser</div></pre></td></tr></table></figure><blockquote><p>控制台输入创建密码后，输入自定义的密码，并二次确认。</p></blockquote><h2 id="04-初始化-git-仓库并配置用户权限"><a href="#04-初始化-git-仓库并配置用户权限" class="headerlink" title="04 初始化 git 仓库并配置用户权限"></a>04 初始化 git 仓库并配置用户权限</h2><h3 id="创建-git-仓库并初始化"><a href="#创建-git-仓库并初始化" class="headerlink" title="创建 git 仓库并初始化"></a>创建 git 仓库并初始化</h3><p>我们创建 <em>data/repositories</em> 目录用户存放git仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir -p /data/repositories</div></pre></td></tr></table></figure><p> 创建好后，初始化这个仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /data/repositories/ &amp;&amp; git init --bare test.git</div></pre></td></tr></table></figure><h3 id="配置用户权限"><a href="#配置用户权限" class="headerlink" title="配置用户权限"></a>配置用户权限</h3><p>给 git 仓库目录设置用户和用户组并设置权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chown -R gituser:gituser /data/repositories</div></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod 755 /data/repositories</div></pre></td></tr></table></figure><p>[查找 git-shell 所在目录]，编辑<em>/etc/passwd</em> 文件，将最后一行关于<code>gituser</code>的登录shell配置改为git-shell的目录如下</p><p><strong>示例代码： /etc/passwd </strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gituser:x:500:500::/home/gituser:/usr/local/git/bin/git-shell</div></pre></td></tr></table></figure><blockquote><p>如果按照刚才的步骤执行，这个位置应该 /usr/local/git/bin/git-shell,否则请通 <code>wich git-shell</code> 命令查看位置</p><p>安全目的，限制 git 账号的 ssh 链接只能是登录 git-shell</p></blockquote><h2 id="使用搭建好的-Git-服务器"><a href="#使用搭建好的-Git-服务器" class="headerlink" title="使用搭建好的 Git 服务器"></a>使用搭建好的 Git 服务器</h2><p>克隆 test repo 到本地</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd ~&amp;&amp; git clone gituser@&lt;ip地址&gt;:/data/repositories/test.git</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转载自&lt;a href=&quot;https://cloud.tencent.com/developer/labs/lab/10045&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;腾讯云 开发者实验室&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
      <category term="git" scheme="http://qzdotnet.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>微软WebCast视频下载辅助工具</title>
    <link href="http://qzdotnet.github.io/2017/09/27/%E5%BE%AE%E8%BD%AFWebCast%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E8%BE%85%E5%8A%A9%E5%B7%A5%E5%85%B7/"/>
    <id>http://qzdotnet.github.io/2017/09/27/微软WebCast视频下载辅助工具/</id>
    <published>2017-09-27T08:26:59.000Z</published>
    <updated>2017-09-27T11:14:23.156Z</updated>
    
    <content type="html"><![CDATA[<h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><p>最近公司开始让我们小组搞内部培训。培训内容主要是C#语言，ADO.NET、Winfrom等内容。我们小组共6个人，平时的主要工作是维护实施公司一套10年前开发的VB产品。只有两个人有.NET基础，其余4人完全小白。为了能够达到理想的培训效果，开始从网上找相关的教学视频。我大学的时候学习微软技术都是从<a href="https://msdn.microsoft.com/zh-cn/dd796167" target="_blank" rel="external">WEBCAST</a>下载视频，所以我就本能的想到了<a href="https://msdn.microsoft.com/zh-cn/dd796167" target="_blank" rel="external">WEBCAST</a>。不过不知道为什么<a href="https://msdn.microsoft.com/zh-cn/dd796167" target="_blank" rel="external">WEBCAST</a>上的下载链接全部失效了。。。</p><p>微软官方的失效了，其他网站应该有吧，毕竟这个<a href="https://msdn.microsoft.com/zh-cn/dd796167" target="_blank" rel="external">WEBCAST</a>还是挺出名的，于是我就各种搜索。知道了微软<a href="https://msdn.microsoft.com/zh-cn/dd796167" target="_blank" rel="external">WEBCAST</a>现在已经停办了，新的全球化教学网站叫<a href="https://mva.microsoft.com/" target="_blank" rel="external">微软虚拟学院</a>。浏览了一下基本上我们想学的知识都没有，都是最前沿的技术。对于我们小组目前来说也用不到，而且大部分都是老外英文教学，中文字幕。对于我们这种听不懂英文的人，看了想睡觉。更令人失望的是，从网上搜不到<a href="https://msdn.microsoft.com/zh-cn/dd796167" target="_blank" rel="external">WEBCAST</a>的视频。只有51TCO上有部分视频，但是搞笑的是，部分视频下载竟然要收费。靠有没有点互联网精神。</p><a id="more"></a><h2 id="契机"><a href="#契机" class="headerlink" title="契机"></a>契机</h2><p>偶然发现<a href="http://blog.csdn.net/zanfeng/article/details/52863687" target="_blank" rel="external">足球中国</a>文章下面的下载链接是可以下载到<a href="https://msdn.microsoft.com/zh-cn/dd796167" target="_blank" rel="external">WEBCAST</a>的视频。还发现了一个神奇的网站<a href="http://msdnwebcast.azurewebsites.net/" target="_blank" rel="external">msdnwebcast.azurewebsites.net</a>，这个网站上有所有的<a href="https://msdn.microsoft.com/zh-cn/dd796167" target="_blank" rel="external">WEBCAST</a>的课程链接，不过都是失效的链接打开都是404。</p><p>链接虽然是无效的，但是发现和<a href="http://blog.csdn.net/zanfeng/article/details/52863687" target="_blank" rel="external">足球中国</a>提供的下载链接很像。</p><ul><li>无效链接:<a href="http://www.microsoft.com/china/msdn/webcast/download.aspx?id=1243938&amp;type=video&amp;source=msdnwebcast.net" target="_blank" rel="external">http://www.microsoft.com/china/msdn/webcast/download.aspx?id=1243938&amp;type=video&amp;source=msdnwebcast.net</a></li><li>足球中国有效链接 :<a href="http://download.microsoft.com/download/4/D/0/4D047617-CA60-428B-B2C5-EB7D977E9BC6/WebCast20100901_Video.zip" target="_blank" rel="external">http://download.microsoft.com/download/4/D/0/4D047617-CA60-428B-B2C5-EB7D977E9BC6/WebCast20100901_Video.zip</a></li></ul><p>格式好像也差不多嘛，如果把链接中的<code>www</code>改成<code>download</code>是不是就可以了。试了一下果真可以，看来就是微软的链接出了错，文件都没丢。</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>知道了怎么下载，我就开始手动下载之路。但是下载起来太费劲了，来回的点链接，改链接。头疼不想搞了。由于下载过程太繁琐，我就想写个程序来实现自动下载。之前WEBCAST有一个工具<a href="http://ireaper.codeplex.com/" target="_blank" rel="external">ireaper</a>,我本来想下载下来改改源代码。下载后感觉太复杂有一种看不懂的感觉，于是自己写了一个。</p><p>创建项目编码，思路比较简单。</p><ol><li>分析msdnwebcast.azurewebsites.net相关页面的html。</li><li>找到下载链接</li><li>下载。</li></ol><p>使用的技术也比较简单，请求HTML用之前从网上下载的HttpHelper类库，从来没用过，正好试试。下载用webclient。</p><p><img src="http://ovs80if20.bkt.clouddn.com/webcast1.png" alt="界面"></p><p>说干就干，大概3个小时，基本的代码写完了，当然非常简陋。但是能成功下载文件了。但是呢下载的速度非常慢，想实现下载过过程监控也比较麻烦。于是就改变思路将下载链接都获取到，然后使用迅雷下载。简单调试后实现了目标。将需要下载的视频都下载下来。</p><p><img src="http://ovs80if20.bkt.clouddn.com/webcast2.png" alt="最终效果"></p><h2 id="GITHUB"><a href="#GITHUB" class="headerlink" title="GITHUB"></a>GITHUB</h2><p>虽然在GITHUB上注册账号已经好几年了，也开始用Github写博客。但是从来没上传过项目，所以就想把这个非常简陋的项目上传，虽然大家也不可能从代码上学到什么东西。但是感觉应该也有和我有一样需要的人。敢于尝试总是好的。</p><p><a href="https://github.com/qzdotnet/DownLoadWebCastVideo" target="_blank" rel="external">GitHub传送门</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>为了下载视频，耗费了一下午的时间。但是第一次上传将自己的代码上传到GitHub上，还是很兴奋的。今后一定努力提高多上传优质的代码。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;事件&quot;&gt;&lt;a href=&quot;#事件&quot; class=&quot;headerlink&quot; title=&quot;事件&quot;&gt;&lt;/a&gt;事件&lt;/h2&gt;&lt;p&gt;最近公司开始让我们小组搞内部培训。培训内容主要是C#语言，ADO.NET、Winfrom等内容。我们小组共6个人，平时的主要工作是维护实施公司一套10年前开发的VB产品。只有两个人有.NET基础，其余4人完全小白。为了能够达到理想的培训效果，开始从网上找相关的教学视频。我大学的时候学习微软技术都是从&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/dd796167&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WEBCAST&lt;/a&gt;下载视频，所以我就本能的想到了&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/dd796167&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WEBCAST&lt;/a&gt;。不过不知道为什么&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/dd796167&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WEBCAST&lt;/a&gt;上的下载链接全部失效了。。。&lt;/p&gt;
&lt;p&gt;微软官方的失效了，其他网站应该有吧，毕竟这个&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/dd796167&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WEBCAST&lt;/a&gt;还是挺出名的，于是我就各种搜索。知道了微软&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/dd796167&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WEBCAST&lt;/a&gt;现在已经停办了，新的全球化教学网站叫&lt;a href=&quot;https://mva.microsoft.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;微软虚拟学院&lt;/a&gt;。浏览了一下基本上我们想学的知识都没有，都是最前沿的技术。对于我们小组目前来说也用不到，而且大部分都是老外英文教学，中文字幕。对于我们这种听不懂英文的人，看了想睡觉。更令人失望的是，从网上搜不到&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/dd796167&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WEBCAST&lt;/a&gt;的视频。只有51TCO上有部分视频，但是搞笑的是，部分视频下载竟然要收费。靠有没有点互联网精神。&lt;/p&gt;
    
    </summary>
    
      <category term="杂记" scheme="http://qzdotnet.github.io/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="webcast" scheme="http://qzdotnet.github.io/tags/webcast/"/>
    
      <category term="下载" scheme="http://qzdotnet.github.io/tags/%E4%B8%8B%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>C#针式打印机自定义纸张连续打印爬坑过程</title>
    <link href="http://qzdotnet.github.io/2017/09/21/C-%E9%92%88%E5%BC%8F%E6%89%93%E5%8D%B0%E6%9C%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BA%B8%E5%BC%A0l%E6%89%93%E5%8D%B0%E7%88%AC%E5%9D%91%E8%BF%87%E7%A8%8B/"/>
    <id>http://qzdotnet.github.io/2017/09/21/C-针式打印机自定义纸张l打印爬坑过程/</id>
    <published>2017-09-21T01:52:56.000Z</published>
    <updated>2017-09-29T00:16:35.746Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近接到一个项目，主要功能是对业务单据的流程管理。但是要实现针式打印机对业务单据的连续打印。客户提供的单据格式如下，要求针式打印机一次可连续打印50-100张单据。</p><a id="more"></a><p><img src="http://ovs80if20.bkt.clouddn.com/T1.png" alt="客户提供的单据格式"></p><p>接到需求以后，迅速开搞，单据的流程管理开发非常顺利。但针式打印机连续打印单据的开发过程异常艰辛。本文主要讲述开发选型的过程、遇到的问题、以及填坑过程。</p><h2 id="选型"><a href="#选型" class="headerlink" title="选型"></a>选型</h2><p>之前开发过的票据打印程序使用的是<code>GoldPrinter（金质打印）</code>。不过客户提供的单据格式和传统的发票类票据格式不太一样。思来想去决定使用报表工具。之前使用过<code>ActivexReport</code>，但是感觉太庞大了。发现.NET自带了报表工具RDLC,决定尝试一下。</p><h2 id="RDLC-是一个坑"><a href="#RDLC-是一个坑" class="headerlink" title="RDLC 是一个坑"></a>RDLC 是一个坑</h2><p>根据用户提供的纸张格式，结合网上的教程，2个小时就开发出了RDLC的报表。开发完毕后感觉自信感爆棚,我就想问”还有谁？”。</p><p><img src="http://ovs80if20.bkt.clouddn.com/T2.png" alt="RDLC报表"></p><p>设置纸张大小设置横向打印。</p><p><img src="http://ovs80if20.bkt.clouddn.com/T3.png" alt="纸张设置"></p><p>使用针式打印机测试打印。发现一个比较奇怪的问题。只有将纸张竖向放入针式打印机才能正常打印。横向放入只打印一半。这个时候，我还不理解为什么。从网上胡乱搜索资料。搜索到一些RLDC不能自定义纸张，RDLC不能横向打印机等文章。当时也不是很理解。捣鼓了一天一直不行就放弃了，改用<code>ActivexReport</code>。</p><h2 id="ActivexReport-开发"><a href="#ActivexReport-开发" class="headerlink" title="ActivexReport 开发"></a>ActivexReport 开发</h2><p>ActivexReport的开发过程也比较简单，开发报表差不都也是用了2个小时的时间。开发初期还是使用的和RDLC报表参数的设置。</p><p>使用打印机测试打印，问题照旧。还是竖着能打印，横着打印一半。此时挫败感非常强烈，但是生活还得继续啊。开始分析思考问题。</p><ul><li>是不是打印机设置有问题？、</li><li>RDLC网上说的问题到底什么意思。</li><li>感觉好像也没什么问题啊，使用的A4纸打印机。横向打印和竖向打印的放纸也都是一样的。是不是应该调整报表？</li></ul><p>带着上面的问题，楼主开始搜索。后来找到一篇文章说针式打印机实现连续打印需要自定义纸张，具体过程如下。</p><p>[1] 打印机添加自定义纸张设置成纵向，调整纸张的宽度和高度。</p><p><img src="http://ovs80if20.bkt.clouddn.com/T4.png" alt="打印机设置"></p><p>[2] 调整报表的纸张于面前打印机设置的纸张一样的规格。</p><p>测试打印成功了，完美。</p><h2 id="连续打印调试"><a href="#连续打印调试" class="headerlink" title="连续打印调试"></a>连续打印调试</h2><p>连续打印的测试过程还是比较轻松的。用了两个晚上搞定的。第一夜将纸张的高度设置成了14.0，打印了20张以后。打印错位就比较严重了。隐隐感觉是纸张设置的有点大了。</p><p>于是开始各种找资料，使用的打印机型号EPSON LQ-635K，从爱普生的官网下载了<code>LQ-630K635K730K735K新机使用指南</code>。在文档中发现常用的纸张规格有21.4*13.97。瞬间感觉有救了，晚上回家重新设置了报表纸张格式和打印机的自定义纸张格式。测试打印了30页，没有出现偏移。爱普生的打印机还是非常靠谱的。说明书更靠谱。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过这个项目了解到了微软的RDLC报表，也学会了如何使用。最终也明白了RDLC目前存在的问题，设置自定义纸张大小如果宽度大于高度，报表会将纸张自动改成横向的。所以想实现针式打印机连续打印是不太可能的。也了解了针式打印机的安装使用，以及自定义纸张的意义。耗费了楼主2个白天3个夜晚，但总归问题都解决了。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><p><a href="https://wenku.baidu.com/view/bcb62e1611a6f524ccbff121dd36a32d7375c73a.html?qq-pf-to=pcqq.c2c" target="_blank" rel="external">针式打印机打印241×140mm连续纸时如何调整设置技巧</a></p></li><li><p><a href="http://www.ku234.com/2012/1019/140.html" target="_blank" rel="external">针式打印机进纸安装教程</a></p></li><li><p><a href="https://zhidao.baidu.com/question/398541741.html?qq-pf-to=pcqq.c2c" target="_blank" rel="external">爱普生LQ-630K打印机的打印方向是竖的怎么改成横向的 </a></p></li><li><p><a href="http://www.cnblogs.com/peterzb/archive/2009/07/08/1519489.html" target="_blank" rel="external">C# WinForm开发系列 - RDLC</a></p><p>​</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近接到一个项目，主要功能是对业务单据的流程管理。但是要实现针式打印机对业务单据的连续打印。客户提供的单据格式如下，要求针式打印机一次可连续打印50-100张单据。&lt;/p&gt;
    
    </summary>
    
      <category term="杂记" scheme="http://qzdotnet.github.io/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="C# 针式打印机" scheme="http://qzdotnet.github.io/tags/C-%E9%92%88%E5%BC%8F%E6%89%93%E5%8D%B0%E6%9C%BA/"/>
    
      <category term="ActivexReport" scheme="http://qzdotnet.github.io/tags/ActivexReport/"/>
    
      <category term="Rdlc 自定义纸张打印" scheme="http://qzdotnet.github.io/tags/Rdlc-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BA%B8%E5%BC%A0%E6%89%93%E5%8D%B0/"/>
    
  </entry>
  
  <entry>
    <title>设计模式系列之观察者模式</title>
    <link href="http://qzdotnet.github.io/2017/09/20/Design-Patterns-OBSERVER/"/>
    <id>http://qzdotnet.github.io/2017/09/20/Design-Patterns-OBSERVER/</id>
    <published>2017-09-20T11:21:05.000Z</published>
    <updated>2017-09-30T06:09:07.005Z</updated>
    
    <content type="html"><![CDATA[<h2 id="模式说明"><a href="#模式说明" class="headerlink" title="模式说明"></a>模式说明</h2><p> 观察者模式是作者接触的比较早的设计模式，也是作者比较早理解的设计模式。该模式属与行为模式。该模式也叫依赖（Dependents）,发布-订阅（publish-Subscribe）</p><h3 id="意图"><a href="#意图" class="headerlink" title="意图"></a>意图</h3><blockquote class="blockquote-center"><p>定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。</p><p><em>GOF,设计模式：可复用面向对象软件的基础</em></p></blockquote><a id="more"></a><h3 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h3><p>依赖（Dependents）,发布-订阅（publish-Subscribe）</p><h3 id="适用性"><a href="#适用性" class="headerlink" title="适用性"></a>适用性</h3><ul><li>当一个抽象模型有两个方面，其中一个方面依赖于另一方面。将这二者封装在独立的对象中以使它们可以各自独立地改变和复用。【这条博主也不是很理解。】</li><li>当对一个对象的改变需要同时改变其他对象，而不知道具体有多少对象有待改变。</li><li>当一个对象必须通知其他对象。而它又不能假定其他对象是谁。换言之，你不希望这些对象是紧密耦合的。</li></ul><h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><p><img src="http://ovs80if20.bkt.clouddn.com/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F.png" alt="观察者模式UML图"></p><h3 id="参与者"><a href="#参与者" class="headerlink" title="参与者"></a>参与者</h3><ul><li><p>Subject(目标)</p><ul><li>目标知道它的观察者，可以有人以多个个观察者观察同一个目标。</li><li>提供注册和删除观察者对象的接口</li></ul></li><li><p>Observer(观察者)</p><ul><li>为那些在目标发生改变时需要获取通知的对象定义一个接口。</li></ul></li><li><p>ConcreteSubject(具体的目标)</p><ul><li>将有关状态存入各ConcreteObserver对象</li><li>当它的状态发生改变，向他的各个观察者发出通知。</li></ul></li><li><p>ConcreteObserver</p><ul><li>维护一个指向ConcreteSubject对象的引用。</li><li>存储有关状态，这些状态应与目标对象的状态保持一致。</li><li>实现Observer的更新接口以使自身的状态与目标的状态保持一致。</li></ul></li></ul><h2 id="模式实战"><a href="#模式实战" class="headerlink" title="模式实战"></a>模式实战</h2><p>小张开了一家饭店。饭店的菜单会经常发生变化，菜单变化的时候，小张要通知采购部的相关人员。对菜品进行采购。当然最好通知经常来吃饭的客户。</p><p>这个场景非常符合我们观察者模式，当菜单变化的时候要通知客户和采购部门。观察者的数量不确定，类型也不确定。将来可能也会有其他类型的观察者。</p><p>我们先定义主题接口和具体的饭店菜单主题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">public interface ISubject</div><div class="line">   &#123;</div><div class="line">       void Attach(IObserver observer);</div><div class="line">       void Detach(IObserver observer);</div><div class="line">       void Notify();</div><div class="line">   &#125;</div><div class="line"></div><div class="line"></div><div class="line">public class Restaurant : ISubject</div><div class="line">   &#123;</div><div class="line">       public List&lt;IObserver&gt; observers = new List&lt;IObserver&gt;();</div><div class="line"></div><div class="line">       public string Name &#123; get; set; &#125;</div><div class="line">       public string Menus &#123; get; set; &#125;</div><div class="line">       public void Attach(IObserver observer)</div><div class="line">       &#123;</div><div class="line">           observers.Add(observer);</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       public void Detach(IObserver observer)</div><div class="line">       &#123;</div><div class="line">           observers.Remove(observer);</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       public void Notify()</div><div class="line">       &#123;</div><div class="line">           foreach (var observer in this.observers)</div><div class="line">           &#123;</div><div class="line">               observer.Update(Menus);</div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure><p>然后我们定义具体观察者接口和相关的观察者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">   public interface IObserver</div><div class="line">   &#123;</div><div class="line">       void Update(string Menu);</div><div class="line"></div><div class="line">   &#125;</div><div class="line"></div><div class="line">public class Customer : IObserver</div><div class="line">   &#123;</div><div class="line">       public Customer(string name, TextBox txtlog)</div><div class="line">       &#123;</div><div class="line">           this.Name = name;</div><div class="line">           this.Log = txtlog;</div><div class="line">       &#125;</div><div class="line">       public string Name &#123; get; set; &#125;</div><div class="line"></div><div class="line">       public TextBox Log &#123; get; set; &#125;</div><div class="line">       public void Update(string Menu)</div><div class="line">       &#123;</div><div class="line">           //throw new NotImplementedException();</div><div class="line">           Log.AppendText(string.Format(&quot;&#123;0&#125;:我得到消息菜价变化了&#123;1&#125;&quot;, this.Name,System.Environment.NewLine));</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       public override string ToString()</div><div class="line">       &#123;</div><div class="line">           return Name;</div><div class="line">       &#125;</div><div class="line">   &#125;</div><div class="line">   </div><div class="line">   public class Buyer : IObserver</div><div class="line">   &#123;</div><div class="line">       public Buyer(string name, TextBox txtlog)</div><div class="line">       &#123;</div><div class="line">           this.Name = name;</div><div class="line">           this.Log = txtlog;</div><div class="line">       &#125;</div><div class="line">       public string Name &#123; get; set; &#125;</div><div class="line">       public TextBox Log &#123; get; set; &#125;</div><div class="line">       public void Update(string Menu)</div><div class="line">       &#123;</div><div class="line">           //throw new NotImplementedException();</div><div class="line">           Log.AppendText(string.Format(&quot;&#123;0&#125;:我得到了消息菜单变化了。马上采购去&#123;1&#125;&quot;, this.Name, System.Environment.NewLine));</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       public override string ToString()</div><div class="line">       &#123;</div><div class="line">           return Name;</div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure><p>创建WINFROM项目为实现客户端代码。当我们改变菜单，点击确定按钮时。所有的观察者都得到了更新。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line">public partial class MainFrom : Form</div><div class="line">   &#123;</div><div class="line">       public MainFrom()</div><div class="line">       &#123;</div><div class="line">           InitializeComponent();</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       public ISubject Subject;</div><div class="line"></div><div class="line">       private void MainFrom_Load(object sender, EventArgs e)</div><div class="line">       &#123;</div><div class="line">           Restaurant restaurantSubject = new Restaurant();</div><div class="line">           restaurantSubject.Menus = @&quot;糖醋排骨 50</div><div class="line">                                       油焖大虾 20</div><div class="line">                                       糖醋里脊 10</div><div class="line">                                       土豆丝   15&quot;;</div><div class="line">           this.txtMenu.Text = restaurantSubject.Menus;</div><div class="line">           Subject = restaurantSubject;</div><div class="line">           Customer customer = new Customer(&quot;客户小张&quot;, this.txtLog);</div><div class="line">           Customer customer2 = new Customer(&quot;客户小李&quot;, this.txtLog);</div><div class="line">           Buyer buyer = new Buyer(&quot;采购小王&quot;, this.txtLog);</div><div class="line">           lbxObserver.Items.Add(customer);</div><div class="line">           lbxObserver.Items.Add(customer2);</div><div class="line">           lbxObserver.Items.Add(buyer);</div><div class="line">           Subject.Attach(customer);</div><div class="line">           Subject.Attach(customer2);</div><div class="line">           Subject.Attach(buyer);</div><div class="line"></div><div class="line">       &#125;</div><div class="line"></div><div class="line">      </div><div class="line"></div><div class="line"></div><div class="line">       private void btnChangeMenus_Click(object sender, EventArgs e)</div><div class="line">       &#123;</div><div class="line">           ((Restaurant)Subject).Menus = this.txtMenu.Text;</div><div class="line">           Subject.Notify();</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       private void btnAddObserver_Click(object sender, EventArgs e)</div><div class="line">       &#123;</div><div class="line">           if (this.cbxObserverType.Text == &quot;客户&quot;)</div><div class="line">           &#123;</div><div class="line">               IObserver observer = new Customer(&quot;客户&quot; + this.txtName.Text, this.txtLog);</div><div class="line">               lbxObserver.Items.Add(observer);</div><div class="line">               Subject.Attach(observer);</div><div class="line">           &#125;</div><div class="line">           else if (this.cbxObserverType.Text == &quot;采购&quot;)</div><div class="line">           &#123;</div><div class="line">               IObserver observer = new Buyer(&quot;采购&quot; + this.txtName.Text, this.txtLog);</div><div class="line">               lbxObserver.Items.Add(observer);</div><div class="line">               Subject.Attach(observer);</div><div class="line"></div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       private void btnDelObserver_Click(object sender, EventArgs e)</div><div class="line">       &#123;</div><div class="line">          IObserver item = lbxObserver.SelectedItem as IObserver;</div><div class="line"></div><div class="line">           lbxObserver.Items.Remove(item);</div><div class="line">           Subject.Detach(item);</div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure><p>程序的界面如下</p><p><img src="http://ovs80if20.bkt.clouddn.com/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F2.png" alt="程序界面"></p><p>基本的功能都实现了，动态的添加、删除观察者。菜单改变，改变后用户观察者得到的消息展示。如果先查看代码<a href="https://github.com/qzdotnet/DesignPatternsDemo" target="_blank" rel="external">传送门</a>,做之前想要做的多少多好，每次一开始写，就写的很差劲了。多练吧。</p><h2 id="效果及实现要点"><a href="#效果及实现要点" class="headerlink" title="效果及实现要点"></a>效果及实现要点</h2><h3 id="推拉模式"><a href="#推拉模式" class="headerlink" title="推拉模式"></a>推拉模式</h3><p>推模型:目标想所有的观察者发送改变的详细信息。不管观察者是否需要。</p><p>缺点：目标知道观察者需要的信息。所以目标难以复用。</p><p>拉模型:目标不主动推送改变的数据，由观察者得到更新通知后，显示访问目标对象。</p><p>缺点：效率较差，因为目标更改了那些内容需要观察者自己去获取。</p><h3 id="NET-EVEN与观察者模式接口"><a href="#NET-EVEN与观察者模式接口" class="headerlink" title=".NET EVEN与观察者模式接口"></a>.NET EVEN与观察者模式接口</h3><ul><li>在C#语言中从语言层面已经实现了观察者模式，那就是事件和委托。而且事件和委托比观察者的模型更灵活。</li><li><a href="https://msdn.microsoft.com/zh-cn/library/dd990377(v=vs.110" target="_blank" rel="external">System.IObservable<t></t></a>.aspx) 和 <a href="https://msdn.microsoft.com/zh-cn/library/dd783449(v=vs.110" target="_blank" rel="external">System.IObserver<t></t></a>.aspx) 接口 ，.NET4.0自带了对观察者实现的泛型接口。提供的接口与传统的观察者模不同，但是目的是一样的。<a href="https://msdn.microsoft.com/zh-cn/library/ee850490(v=vs.110" target="_blank" rel="external">传送门</a>.aspx)</li></ul><h3 id="显示的制定感兴趣的改变"><a href="#显示的制定感兴趣的改变" class="headerlink" title="显示的制定感兴趣的改变"></a>显示的制定感兴趣的改变</h3><p>当只对主题的特定数据和事件感兴趣的时候，可以注册对主题感兴趣的方面（aspects），主题在执行更新操作的时候将这一方面的改变发送给订阅者。接口如下，目前我对方面的认识还不够，但是我认为这个是非常有意义的。当我们只对菜单的某一个菜感兴趣时或者我们只对周五菜单改变刚兴趣这种接口就比较有威力了。书中的定义如下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">void Subject::Attach(Observer*,Aspect&amp; interest);</div><div class="line"></div><div class="line">void Observer:Update(Subject*,Aspect&amp; interest);</div></pre></td></tr></table></figure><p>###</p><h2 id="模式总结"><a href="#模式总结" class="headerlink" title="模式总结"></a>模式总结</h2><p>通过Observer模式，把一对多对象之间的通知依赖关系的变得更为松散，大大地提高了程序的可维护性和可扩展性，也很好的符合了开放-封闭原则。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>MSDN WebCast 《C#面向对象设计模式纵横谈(19)：Observer 观察者模式(行为型模式)》</p><p>Erich Gamma等，《设计模式：可复用面向对象软件的基础》</p><p>()</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;模式说明&quot;&gt;&lt;a href=&quot;#模式说明&quot; class=&quot;headerlink&quot; title=&quot;模式说明&quot;&gt;&lt;/a&gt;模式说明&lt;/h2&gt;&lt;p&gt; 观察者模式是作者接触的比较早的设计模式，也是作者比较早理解的设计模式。该模式属与行为模式。该模式也叫依赖（Dependents）,发布-订阅（publish-Subscribe）&lt;/p&gt;
&lt;h3 id=&quot;意图&quot;&gt;&lt;a href=&quot;#意图&quot; class=&quot;headerlink&quot; title=&quot;意图&quot;&gt;&lt;/a&gt;意图&lt;/h3&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;GOF,设计模式：可复用面向对象软件的基础&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="设计模式" scheme="http://qzdotnet.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="设计模式" scheme="http://qzdotnet.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term=".Net模式" scheme="http://qzdotnet.github.io/tags/Net%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Hexo优化与写作技巧</title>
    <link href="http://qzdotnet.github.io/2017/09/06/Hexo%E4%BC%98%E5%8C%96%E4%B8%8E%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/"/>
    <id>http://qzdotnet.github.io/2017/09/06/Hexo优化与写作技巧/</id>
    <published>2017-09-06T10:56:34.000Z</published>
    <updated>2017-09-07T02:33:16.727Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前二篇文章已经介绍了作者Hexo+Next搭建优化博客的全过程。本篇作为该系列的最后一篇，主要介绍Hexo的一些写作方面的设置和主题的美化。该篇结束后，作者也将停止对博客的折腾开始进行相关技术的学习整理阶段。今天和老同事聊天，他问我下一步想学什么？？？这个问题把我给难住 了好像什么都想学设计模式、ES6、ASP.NET MVC……现在也没什么方向。希望明天早上一觉醒来能有答应吧，不废话了进入正题。</p><a id="more"></a><h2 id="文章写作技巧"><a href="#文章写作技巧" class="headerlink" title="文章写作技巧"></a>文章写作技巧</h2><h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h3><p>使用<code>Hexo n [文章名]</code>创建一篇新的文章时，Hexo会自动使用scaffold文件下的布局文件为模版创建一个新的MD文件。默认的布局文件都包含Front-matter的内容。</p><p>Front-matter 可以设置文章的全局参数，在文章的最上方以<code>---</code>开头结尾。一般需要自己设置的参数是<code>tags</code>,<code>categories</code>。tags 用来设置文章的标签，categories用来设置文章的分类。Hexo目前不支持多级分类，文章分类只能有一级。设置方法如下。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attr">categories:</span></div><div class="line"><span class="bullet">-</span> <span class="string">博客搭建</span></div><div class="line"><span class="attr">tags:</span></div><div class="line"><span class="bullet">-</span> <span class="string">Hexo</span></div><div class="line"><span class="bullet">-</span> <span class="string">Next</span></div></pre></td></tr></table></figure><h3 id="首页添加阅读全文"><a href="#首页添加阅读全文" class="headerlink" title="首页添加阅读全文"></a>首页添加阅读全文</h3><p>写前两篇文章的时候，首页的文章列表显示了每一篇文章的详细内容。我刚开始以为就是这样后来通过<a href="http:\\www.baidu.com" target="_blank" rel="external">BAIDU</a>才知道原来可以通过设置文章参数或者加标记的方式解决该问题。</p><h4 id="方法一-添加more标记"><a href="#方法一-添加more标记" class="headerlink" title="方法一 添加more标记"></a>方法一 添加more标记</h4><p>在文章中合适的位置添加</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--more--&gt;</span></div></pre></td></tr></table></figure><p>重新生成后首页的文章列表就会将该标记之前的内容作为描述信息，描述信息后面会显示阅读全文按钮。</p><h4 id="方法二-设置Front-matter参数"><a href="#方法二-设置Front-matter参数" class="headerlink" title="方法二 设置Front-matter参数"></a>方法二 设置Front-matter参数</h4><p>在Front-matter中添加<code>description</code>参数</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attr">title:</span> <span class="string">Hexo优化与写作技巧</span></div><div class="line"><span class="attr">date:</span> <span class="number">2017</span><span class="bullet">-09</span><span class="bullet">-06</span> <span class="number">18</span><span class="string">:56:34</span></div><div class="line"><span class="attr">tags:</span> <span class="string">[Hexo,Next]</span></div><div class="line"><span class="attr">categories:</span> <span class="string">博客搭建</span></div><div class="line"><span class="attr">description:</span> <span class="string">Hexo优化与写作技巧Hexo优化与写作技巧Hexo优化与写作技巧Hexo优化与写作技巧</span></div></pre></td></tr></table></figure><p>推荐使用第一种方法。比较灵活，可以自己控制 。</p><h3 id="七牛床图"><a href="#七牛床图" class="headerlink" title="七牛床图"></a>七牛床图</h3><p>虽然作者审美不太好，也不喜欢找图片。但感觉总会需要用到图片的时候，使用的git的空间好像有300M的限制，所以还是用外链的图片比较好。找了一些文章基本上都是用的<a href="https://www.qiniu.com/" target="_blank" rel="external">七牛</a>存储的，所以作者也使用了<a href="https://www.qiniu.com/" target="_blank" rel="external">七牛</a>。设置的过程也比较简单可以参考这两篇文章</p><p><a href="http://blog.shiqichan.com/use-qiniu-store-image-for-hexo/" target="_blank" rel="external">使用七牛为Hexo存储图片</a></p><p><a href="http://www.jianshu.com/p/ec2c8acf63cd" target="_blank" rel="external">Hexo文章图片存储选七牛</a></p><p><img src="http://ovs80if20.bkt.clouddn.com/timg.jpg" alt="图片" title="好看吧"></p><h2 id="Hext常用标签插件"><a href="#Hext常用标签插件" class="headerlink" title="Hext常用标签插件"></a>Hext常用标签插件</h2><p>Hext通过标签可以插入特定的内容以下是我感觉比较有用的。详细的请参考<a href="https://hexo.io/zh-cn/docs/tag-plugins.html" target="_blank" rel="external">网官文档</a></p><h3 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h3><p>在文章中插入引言，可以包含作者来源和标题。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</div><div class="line">content</div><div class="line">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure><p>样例</p><blockquote><p>原谅我这一生不羁放纵爱自由</p><footer><strong>beyond, 海阔天空</strong><cite><a href="http://www.kugou.com/song/7dxb79.html?frombaidu#hash=71BEAE9F719F55CD9AB6BC56F6594732&album_id=0" target="_blank" rel="external">酷狗音乐</a></cite></footer></blockquote><h3 id="Bootstrap-Callout"><a href="#Bootstrap-Callout" class="headerlink" title="Bootstrap Callout"></a>Bootstrap Callout</h3><p>该插件包含了Bootstrap中一些引用样式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% note class_name %&#125; Content (md partial supported) &#123;% endnote %&#125;</div></pre></td></tr></table></figure><p>class_name 包含</p><ul><li><code>default</code></li><li><code>primary</code></li><li><code>success</code></li><li><code>info</code></li><li><code>warning</code></li><li><code>danger</code></li></ul><p>样例</p><div class="note default"><p>default  </p></div><div class="note primary"><p>primary</p></div><div class="note success"><p>success</p></div><div class="note info"><p>info</p></div><div class="note warning"><p>warning </p></div><div class="note danger"><p>danger</p></div><h2 id="样式再美化"><a href="#样式再美化" class="headerlink" title="样式再美化"></a>样式再美化</h2><h3 id="Fork-me-on-GitHub"><a href="#Fork-me-on-GitHub" class="headerlink" title="Fork me on GitHub"></a>Fork me on GitHub</h3><p>虽然作者的github上没有什么自己的开源项目，但是谁知道以后会不会有呢。先加上看上去不是也高大上些。</p><p>先去选个样式<a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="external">传送门</a></p><p>复制代码到主题文件F:\Tools\qzdotnet\themes\next\layout的_layout.swig文件中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"headband"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://github.com/qzdotnet"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">"position: absolute; top: 0; left: 0; border: 0;"</span> <span class="attr">src</span>=<span class="string">"https://camo.githubusercontent.com/567c3a48d796e2fc06ea80409cc9dd82bf714434/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f6461726b626c75655f3132313632312e706e67"</span> <span class="attr">alt</span>=<span class="string">"Fork me on GitHub"</span> <span class="attr">data-canonical-src</span>=<span class="string">"https://s3.amazonaws.com/github/ribbons/forkme_left_darkblue_121621.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h3><p>想要实现RSS需求安装插件<code>hexo-generator-feed</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-feed</div></pre></td></tr></table></figure><p>然后配置<em>站点配置文件</em> 添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#RSS订阅</span></div><div class="line"><span class="attr">plugin:</span></div><div class="line"><span class="bullet">-</span> <span class="string">hexo-generator-feed</span></div><div class="line"><span class="comment">#Feed Atom</span></div><div class="line"><span class="attr">feed:</span></div><div class="line"><span class="attr">type:</span> <span class="string">atom</span></div><div class="line"><span class="attr">path:</span> <span class="string">atom.xml</span></div><div class="line"><span class="attr">limit:</span> <span class="number">30</span></div></pre></td></tr></table></figure><p>最后配置<code>主题配置文件</code>的<code>rss</code>结点</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Set rss to false to disable feed link.</span></div><div class="line"><span class="comment"># Leave rss as empty to use site's feed link.</span></div><div class="line"><span class="comment"># Set rss to specific value if you have burned your feed already.</span></div><div class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></div></pre></td></tr></table></figure><h3 id="阅读量"><a href="#阅读量" class="headerlink" title="阅读量"></a>阅读量</h3><p>阅读量分两部分，每一篇文章的阅读量和网站总体的阅读量。</p><p>文章阅读量请参考：<a href="https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud" target="_blank" rel="external">为NexT主题添加文章阅读量统计功能</a> ，基本的步骤呢是先到LeanCloud注册，然后配置<em>主题配置文件</em></p><p>网站总体的阅读量使用的不蒜子统计，Next新版本已经集成了只需要修改主题配置文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">busuanzi_count:</div><div class="line">  # count values only if the other configs are false</div><div class="line">  enable: true                      </div><div class="line">  # custom uv span for the whole site</div><div class="line">  site_uv: true</div><div class="line">  site_uv_header: 本站访客数 #<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-user"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></div><div class="line">  site_uv_footer: 人次</div><div class="line">  # custom pv span for the whole site</div><div class="line">  site_pv: true</div><div class="line">  site_pv_header: 本站总访问量 # <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-eye"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></div><div class="line">  site_pv_footer: 次</div></pre></td></tr></table></figure><h3 id="本文结束"><a href="#本文结束" class="headerlink" title="本文结束"></a>本文结束</h3><p>给每一篇文章未尾增加本文结束提示语，在<code>\themes\next\layout\_macro</code>目录下新建<code>post-end-tag.swig</code>内容如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;color: #ccc;font-size:14px;margin:10px 0"</span>&gt;</span></div><div class="line">  -------------本文结束</div><div class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-space-shuttle"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></div><div class="line">   感谢您的阅读-------------</div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure><p>然后编辑同目录下的<code>post.swig</code>文件在<code>&lt;footer class=&quot;post-footer&quot;&gt;</code>之前插入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.post_end_tag.enable and not is_index %&#125;</div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>      </div><div class="line">     &#123;% include 'post-end-tag.swig' %&#125;      </div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure><p>最后在<em>主题配置文件中</em>增加配置项</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attr">post_end_tag:</span></div><div class="line"><span class="attr">  enabled:</span> <span class="literal">true</span></div></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>三天的时候终于将博客搭建起来了。虽然大部分内容都是照着网上的内容做的，自己也没有学到太多的知识。但是整体的效果我还是非常满意的。从无到有，还了解了Hexo、Next还查了一些Swig、Yaml的资料也算有收获。博客就不再花时间折腾了。下一步还是抓紧确认要学习的技术，并开始深度学习。加油！！！！！！！！！！！！！！</p><h2 id="参考连接"><a href="#参考连接" class="headerlink" title="参考连接"></a>参考连接</h2><ul><li><a href="http://www.jianshu.com/p/f054333ac9e6" target="_blank" rel="external">hexo的next主题个性化教程</a></li><li><a href="https://segmentfault.com/a/1190000009009697" target="_blank" rel="external">hexo高阶教程</a></li><li><a href="http://wangzeqi.website/2017/06/28/hexo-nexT%E9%85%8D%E7%BD%AE%E8%AF%A6%E6%83%85/" target="_blank" rel="external">Hexo之NexT主题配置</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;前二篇文章已经介绍了作者Hexo+Next搭建优化博客的全过程。本篇作为该系列的最后一篇，主要介绍Hexo的一些写作方面的设置和主题的美化。该篇结束后，作者也将停止对博客的折腾开始进行相关技术的学习整理阶段。今天和老同事聊天，他问我下一步想学什么？？？这个问题把我给难住 了好像什么都想学设计模式、ES6、ASP.NET MVC……现在也没什么方向。希望明天早上一觉醒来能有答应吧，不废话了进入正题。&lt;/p&gt;
    
    </summary>
    
      <category term="博客搭建" scheme="http://qzdotnet.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="http://qzdotnet.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="http://qzdotnet.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>Next主题配置第三方服务集成</title>
    <link href="http://qzdotnet.github.io/2017/09/05/Next%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E7%AC%AC%E4%B8%89%E6%96%B9%E6%9C%8D%E5%8A%A1%E9%9B%86%E6%88%90/"/>
    <id>http://qzdotnet.github.io/2017/09/05/Next主题配置第三方服务集成/</id>
    <published>2017-09-05T00:16:45.000Z</published>
    <updated>2017-09-05T12:16:17.172Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>上一篇文章我们已经成功的将博客搭建起来。本文将对主题的相关配置以及第三方服务的集成做进一步的介绍。其实Next的文档，已经将配置与服务集成介绍的非常明白。有兴趣的同学可以去查看<a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="external">官方文档</a>,本文将重点介绍本人BLOG使用的第三方服务 。</p><a id="more"></a><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><blockquote><p>主要的配置文件有两个</p><ul><li>站点配置文件：根目录下面的_config.yml文件</li><li>主题配置文件：主题根目录下的_config.yml文件</li></ul></blockquote><h3 id="站点信息"><a href="#站点信息" class="headerlink" title="站点信息"></a>站点信息</h3><p>站点信息存放在<em>站点配置文件</em>文件中。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="attr">title:</span> <span class="string">QuZheng</span>  <span class="comment">#主标题</span></div><div class="line"><span class="attr">subtitle:</span>         <span class="comment">#副标题</span></div><div class="line"><span class="attr">description:</span>      <span class="comment">#描述</span></div><div class="line"><span class="attr">author:</span> <span class="string">QuZheng</span>   <span class="comment">#作者</span></div><div class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span> <span class="comment">#语言</span></div><div class="line"><span class="attr">timezone:</span></div></pre></td></tr></table></figure><h4 id="Next目前支持的语言"><a href="#Next目前支持的语言" class="headerlink" title="Next目前支持的语言"></a>Next目前支持的语言</h4><table><thead><tr><th>语言</th><th>代码</th><th>示例</th></tr></thead><tbody><tr><td>English</td><td><code>en</code></td><td><code>language: en</code></td></tr><tr><td>简体中文</td><td><code>zh-Hans</code></td><td><code>language: zh-Hans</code></td></tr><tr><td>Français</td><td><code>fr-FR</code></td><td><code>language: fr-FR</code></td></tr><tr><td>Português</td><td><code>pt</code></td><td><code>language: pt</code> or <code>language: pt-BR</code></td></tr><tr><td>繁體中文</td><td><code>zh-hk</code> 或者 <code>zh-tw</code></td><td><code>language: zh-hk</code></td></tr><tr><td>Русский язык</td><td><code>ru</code></td><td><code>language: ru</code></td></tr><tr><td>Deutsch</td><td><code>de</code></td><td><code>language: de</code></td></tr><tr><td>日本語</td><td><code>ja</code></td><td><code>language: ja</code></td></tr><tr><td>Indonesian</td><td><code>id</code></td><td><code>language: id</code></td></tr><tr><td>Korean</td><td><code>ko</code></td><td><code>language: ko</code></td></tr></tbody></table><p>如果想将自己的网站设置为多语言版本可参考如下设置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">language:</span></div><div class="line"><span class="bullet">-</span> <span class="string">zh-Hans</span></div><div class="line"><span class="bullet">-</span> <span class="string">en</span></div></pre></td></tr></table></figure><h3 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h3><p>博客的菜单的功能菜单是可以自定义的。菜单的配置在<em>主题配置文件</em>件中。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="attr">menu:</span></div><div class="line"><span class="attr">  home:</span> <span class="string">/</span>                    <span class="comment">#首页</span></div><div class="line"><span class="attr">  categories:</span> <span class="string">/categories/</span>   <span class="comment">#分类</span></div><div class="line"><span class="attr">  about:</span> <span class="string">/about/</span>             <span class="comment">#关于</span></div><div class="line"><span class="attr">  archives:</span> <span class="string">/archives/</span>       <span class="comment">#归档</span></div><div class="line"><span class="attr">  tags:</span> <span class="string">/tags/</span>               <span class="comment">#标签</span></div><div class="line">  <span class="comment">#sitemap: /sitemap.xml</span></div><div class="line">  <span class="comment">#commonweal: /404/</span></div></pre></td></tr></table></figure><p>系统初始时，只有<code>home</code>、<code>archives</code>、<code>tags</code>，其它菜单需要手动将注释去掉。并增加相应的页面。</p><h4 id="tags页面添加"><a href="#tags页面添加" class="headerlink" title="tags页面添加"></a>tags页面添加</h4><p>执行下面命令</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">hexo</span> <span class="string">n</span> <span class="string">page</span> <span class="string">tags</span></div></pre></td></tr></table></figure><p>打开source\tags目录下的index.md,添加 type参数</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">---</span></div><div class="line"><span class="attr">title:</span> <span class="string">tags</span></div><div class="line"><span class="attr">date:</span> <span class="number">2017</span><span class="bullet">-09</span><span class="bullet">-04</span> <span class="number">20</span><span class="string">:14:29</span></div><div class="line"><span class="attr">type:</span> <span class="string">"tags"</span></div><div class="line"><span class="meta">---</span></div></pre></td></tr></table></figure><h4 id="categories页面添加"><a href="#categories页面添加" class="headerlink" title="categories页面添加"></a>categories页面添加</h4><p>执行命令</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">hexo</span> <span class="string">n</span> <span class="string">page</span> <span class="string">categories</span></div></pre></td></tr></table></figure><p>打开source\categories目录下的index.md,添加 type参数</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">---</span></div><div class="line"><span class="attr">title:</span> <span class="string">tags</span></div><div class="line"><span class="attr">date:</span> <span class="number">2017</span><span class="bullet">-09</span><span class="bullet">-04</span> <span class="number">20</span><span class="string">:14:29</span></div><div class="line"><span class="attr">type:</span> <span class="string">"categories"</span></div><div class="line"><span class="meta">---</span></div></pre></td></tr></table></figure><h4 id="about页面添加"><a href="#about页面添加" class="headerlink" title="about页面添加"></a>about页面添加</h4><p>执行命令</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">hexo</span> <span class="string">n</span> <span class="string">page</span> <span class="string">about</span></div></pre></td></tr></table></figure><h4 id="菜单图标"><a href="#菜单图标" class="headerlink" title="菜单图标"></a>菜单图标</h4><p>menu_icons配置结点可以设置菜单是否带图标。图标使用的<a href="http://fontawesome.io/icons/" target="_blank" rel="external">FontAwesome</a>字体</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="attr">menu_icons:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line">  <span class="comment">#KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</span></div><div class="line"><span class="attr">  home:</span> <span class="string">home</span></div><div class="line"><span class="attr">  about:</span> <span class="string">user</span></div><div class="line"><span class="attr">  categories:</span> <span class="string">th</span></div><div class="line"><span class="attr">  schedule:</span> <span class="string">calendar</span></div><div class="line"><span class="attr">  tags:</span> <span class="string">tags</span></div><div class="line"><span class="attr">  archives:</span> <span class="string">archive</span></div><div class="line"><span class="attr">  sitemap:</span> <span class="string">sitemap</span></div><div class="line"><span class="attr">  commonweal:</span> <span class="string">heartbeat</span></div></pre></td></tr></table></figure><h3 id="风格"><a href="#风格" class="headerlink" title="风格"></a>风格</h3><p>Next 提供了三种风格供选择</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">scheme:</span> <span class="string">Muse</span></div><div class="line"><span class="comment">#scheme: Mist</span></div><div class="line"><span class="comment">#scheme: Pisces</span></div></pre></td></tr></table></figure><h3 id="版权信息"><a href="#版权信息" class="headerlink" title="版权信息"></a>版权信息</h3><p>版本信息默认是关闭的，可以通过设置enable来打开版本信息。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Declare license on posts</span></div><div class="line"><span class="attr">post_copyright:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr">  license:</span> <span class="string">CC</span> <span class="string">BY-NC-SA</span> <span class="number">3.0</span></div><div class="line"><span class="attr">  license_url:</span> <span class="attr">https://creativecommons.org/licenses/by-nc-sa/3.0/</span></div></pre></td></tr></table></figure><h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><h3 id="百度统计"><a href="#百度统计" class="headerlink" title="百度统计"></a>百度统计</h3><p>注册<a href="https://tongji.baidu.com/web/welcome/login" target="_blank" rel="external">百度统计</a>账号</p><p>在网站列表中新增网站，填写信息保存后。点击获取代码。将hm.js?后面的ID复制到<em>主题配置文件</em>中</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Baidu Analytics ID</span></div><div class="line"><span class="attr">baidu_analytics:</span> <span class="number">59</span><span class="string">***************</span></div></pre></td></tr></table></figure><p>保存完毕后，可以执行命令，重新生成发布。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">hexo</span> <span class="string">g</span> <span class="bullet">-d</span></div></pre></td></tr></table></figure><p>发布成功后，可以到百度统计点击首页代码状态进行测试，测试成功会提示代码安装正确。</p><h3 id="Local-Search搜索"><a href="#Local-Search搜索" class="headerlink" title="Local Search搜索"></a>Local Search搜索</h3><p>1 在根目前安装 hexo-generator-searchdb,安装时要使用管理员权限运行命令行工具，切记!!!!!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-searchdb --save</div></pre></td></tr></table></figure><p>2 编辑<em>站点配置文件</em>，添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="attr">search:</span></div><div class="line"><span class="attr">  path:</span> <span class="string">search.xml</span></div><div class="line"><span class="attr">  field:</span> <span class="string">post</span></div><div class="line"><span class="attr">  format:</span> <span class="string">html</span></div><div class="line"><span class="attr">  limit:</span> <span class="number">10000</span></div></pre></td></tr></table></figure><p>3 编辑<em>主题配置文件</em>,启用本地搜索功能：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Local search</span></div><div class="line"><span class="attr">local_search:</span></div><div class="line"><span class="attr">  enable:</span> <span class="literal">true</span></div></pre></td></tr></table></figure><h3 id="百度分享"><a href="#百度分享" class="headerlink" title="百度分享"></a>百度分享</h3><p>百度分享需要修改两个地方,这个地方不要按Next官网的教程来，官网的教程有问题。</p><p><em>网站配置文件</em>任意位置 添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">baidushare:</span> <span class="literal">true</span></div></pre></td></tr></table></figure><p><em>主题配置文件</em> </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attr">baidushare:</span></div><div class="line"><span class="attr">  type:</span> <span class="string">button</span></div></pre></td></tr></table></figure><p>配置成功后重新生成文件就可以了，但是发布到github后发现分享不显示。百度后了解是因为百度分享不支持<code>https</code>,参考这两篇文章搞定该问题</p><p><a href="https://www.hrwhisper.me/baidu-share-not-support-https-solution/" target="_blank" rel="external">百度分享不支持https的解决方案</a></p><p><a href="http://blog.csdn.net/cl534854121/article/details/76121105" target="_blank" rel="external">Hexo+Github搭建个人博客(三)</a></p><h3 id="Gitment-文章评论"><a href="#Gitment-文章评论" class="headerlink" title="Gitment 文章评论"></a>Gitment 文章评论</h3><p>添加文章的评论模块，官网提供的几个都得翻墙才能使用。国内的多说、网易云都停止服务了。最终作者选择了Gitment添加评论支持。添加的具体过程参考<br><a href="https://meesong.github.io/StaticBlog/2017/NexT+Gitment/" target="_blank" rel="external">为 hexo NexT 添加 Gitment 评论插件</a><br><a href="https://imsun.net/posts/gitment-introduction/" target="_blank" rel="external">Gitment：使用 GitHub Issues 搭建评论系统</a><br>作者花了大概二个小时才将评论模块搭建好。。多参考第一篇文章就可以了，主要是作者对Hexo还不太了解。</p><h3 id="打赏功能"><a href="#打赏功能" class="headerlink" title="打赏功能"></a>打赏功能</h3><p>1  设置<em>主题配置文件</em></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attr">reward_comment:</span> <span class="string">坚持原创技术分享，您的支持将鼓励我继续创作</span></div><div class="line"><span class="attr">wechatpay:</span> <span class="string">/images/wechatpay.jpg</span></div><div class="line"><span class="attr">alipay:</span> <span class="string">/images/alipay.png</span></div></pre></td></tr></table></figure><p>2   制作支付图片并上传到主题目录next\source\images文件夹中</p><p>3   修改打赏文字，我下载的主题默认的文字是英文的，修改主题目录中的<em>next\layout_macro\reward.swig</em> 文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"padding: 10px 0; margin: 20px auto; width: 90%; text-align: center;"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123; theme.reward_comment &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"rewardButton"</span> <span class="attr">disable</span>=<span class="string">"enable"</span> <span class="attr">onclick</span>=<span class="string">"var qr = document.getElementById('QR'); if (qr.style.display === 'none') &#123;qr.style.display='block';&#125; else &#123;qr.style.display='none'&#125;"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>赏<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"QR"</span> <span class="attr">style</span>=<span class="string">"display: none;"</span>&gt;</span></div><div class="line"></div><div class="line">    &#123;% if theme.wechatpay %&#125;</div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wechat"</span> <span class="attr">style</span>=<span class="string">"display: inline-block"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"wechat_qr"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; theme.wechatpay &#125;&#125;"</span> <span class="attr">alt</span>=<span class="string">"&#123;&#123; theme.author &#125;&#125; WeChat Pay"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>微信打赏<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    &#123;% endif %&#125;</div><div class="line"></div><div class="line">    &#123;% if theme.alipay %&#125;</div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"alipay"</span> <span class="attr">style</span>=<span class="string">"display: inline-block"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"alipay_qr"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; theme.alipay &#125;&#125;"</span> <span class="attr">alt</span>=<span class="string">"&#123;&#123; theme.author &#125;&#125; Alipay"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>支付宝打赏<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    &#123;% endif %&#125;</div><div class="line"></div><div class="line">    &#123;% if theme.bitcoin %&#125;</div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"bitcoin"</span> <span class="attr">style</span>=<span class="string">"display: inline-block"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"bitcoin_qr"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; theme.bitcoin &#125;&#125;"</span> <span class="attr">alt</span>=<span class="string">"&#123;&#123; theme.author &#125;&#125; Bitcoin"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Bitcoin<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    &#123;% endif %&#125;</div><div class="line"></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="404"><a href="#404" class="headerlink" title="404"></a>404</h3><p>在主题目录themes\next\source中创建404.html 内容如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8;"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"all"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"index,follow"</span>/&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"https://qzone.qq.com/gy/404/style/404style.css"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/plain"</span> <span class="attr">src</span>=<span class="string">"http://www.qq.com/404/search_children.js"</span></span></div><div class="line"><span class="tag">        <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">homePageUrl</span>=<span class="string">"/"</span></span></div><div class="line"><span class="tag">        <span class="attr">homePageName</span>=<span class="string">"返回博客主页"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://qzone.qq.com/gy/404/data.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://qzone.qq.com/gy/404/page.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>折腾了整整一天才将上文的内容搞定，感觉非常的满足。看了一些大神的博客，绝定在对自己的博客进行美化。美化完毕后就不在折腾了。进入技术学习阶段，具体学什么还没想好。但感觉非常好，希望可以一致持续下去。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">Next 官方文档</a></li><li><a href="http://tc9011.com/2017/02/02/hexo%E6%96%87%E7%AB%A0%E6%B7%BB%E5%8A%A0%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E%E5%8F%8A%E4%B8%80%E4%BA%9B%E7%89%B9%E6%95%88/" target="_blank" rel="external">hexo文章添加版权声明及一些特效</a></li><li><a href="http://blog.shiqichan.com/use-qiniu-store-image-for-hexo/" target="_blank" rel="external">使用七牛为Hexo存储图片</a></li><li><a href="http://blog.csdn.net/yuxuan89814/article/details/52052941" target="_blank" rel="external">npm install 安装软件，出现 operation not permitted, mkdir</a></li><li><a href="https://www.tiexo.cn/gitment/" target="_blank" rel="external">https://www.tiexo.cn/gitment/</a></li><li><a href="https://imsun.net/posts/gitment-introduction/" target="_blank" rel="external">https://imsun.net/posts/gitment-introduction/</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;上一篇文章我们已经成功的将博客搭建起来。本文将对主题的相关配置以及第三方服务的集成做进一步的介绍。其实Next的文档，已经将配置与服务集成介绍的非常明白。有兴趣的同学可以去查看&lt;a href=&quot;http://theme-next.iissnan.com/theme-settings.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;,本文将重点介绍本人BLOG使用的第三方服务 。&lt;/p&gt;
    
    </summary>
    
      <category term="博客搭建" scheme="http://qzdotnet.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Next" scheme="http://qzdotnet.github.io/tags/Next/"/>
    
  </entry>
  
  <entry>
    <title>GitHub-Hexo-NEXT-博客搭建日记</title>
    <link href="http://qzdotnet.github.io/2017/09/04/GitHub-Hexo-NEXT-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E8%AE%B0/"/>
    <id>http://qzdotnet.github.io/2017/09/04/GitHub-Hexo-NEXT-博客搭建日记/</id>
    <published>2017-09-04T06:58:31.000Z</published>
    <updated>2017-09-05T12:17:39.952Z</updated>
    
    <content type="html"><![CDATA[<h2 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h2><p>  今年已经三十了，从事程序开发工作也已经10年了。这10年在技术上可以说一直在原地踏步。主要使用的语言.NET也还维持在.NET2.0的水平。刚参加 工作时还感觉自己挺牛的，到现在感觉自己很渺小。我也一直想学习新的技术，但都从入门到放弃了。这次搭建这个博客就是希望能通过写博客的方式让自己的技术水平能有所提高，逼自己在努力一把。</p><a id="more"></a><h2 id="01-软件安装"><a href="#01-软件安装" class="headerlink" title="01 软件安装"></a>01 软件安装</h2><h3 id="GIT安装"><a href="#GIT安装" class="headerlink" title="GIT安装"></a>GIT安装</h3><p>下载 <a href="https://git-scm.com/" target="_blank" rel="external">git for Windows</a>,安装过程非常简单。</p><h3 id="NODE安装"><a href="#NODE安装" class="headerlink" title="NODE安装"></a>NODE安装</h3><p>下载<a href="https://git-scm.com/" target="_blank" rel="external">NODE</a>,我安装的是CURRENT版本,安装过程非常简单。</p><h2 id="02-创建GITHUB项目，配置GIT环境"><a href="#02-创建GITHUB项目，配置GIT环境" class="headerlink" title="02 创建GITHUB项目，配置GIT环境"></a>02 创建GITHUB项目，配置GIT环境</h2><h3 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h3><p>账号注册非常简单 <a href="https://github.com/" target="_blank" rel="external">注册地址</a></p><h3 id="创建Repository"><a href="#创建Repository" class="headerlink" title="创建Repository"></a>创建Repository</h3><p>创建与自己GITHUB账号同名的Repository比如账号是qzdotnet,新建的Repository名称应该是qzdotnet.github.io。</p><h3 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h3><h4 id="生成SSH"><a href="#生成SSH" class="headerlink" title="生成SSH"></a>生成SSH</h4><p>检查是否已经有SSH Key，打开Git Bash,输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd ~/.ssh</div></pre></td></tr></table></figure><p>如果没有找到这个目录就需要使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;e-mail&quot;</div></pre></td></tr></table></figure><p>输入该命令以后一路回车。</p><h4 id="配置Github公钥"><a href="#配置Github公钥" class="headerlink" title="配置Github公钥"></a>配置Github公钥</h4><p>本人是在Windows7环境下安装的所以成生的文件在目录C:\Users\Administrator.WIN7-1704221339.ssh 下使用文本编辑器打开id_rsa.pub文件，复制 文件里的全部内容。</p><p>登录GitHub，点击右上角的角户图标，选择settings菜单。点击左侧的SSH and GPG keys 菜单，点击New SSH key按钮。将复制的 内容粘贴到KEY输入框中。Title 可以随意设置。设置完毕 后点 Add SSH key按钮。保存设置。</p><p>这里要注意，SSH key保存不是立即生效的，可以等待3到5分钟。我测试的时候大概三分钟生效的。</p><h4 id="测试SSH是否正确配置"><a href="#测试SSH是否正确配置" class="headerlink" title="测试SSH是否正确配置"></a>测试SSH是否正确配置</h4><p>打开Git Bash 输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">ssh -t git@github.com</div><div class="line"></div></pre></td></tr></table></figure><p>如果提示,说明配置成功了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Hi username! You&apos;ve successfully authenticated, but GitHub does not</div><div class="line">provide shell access.</div></pre></td></tr></table></figure><p>如果提示IP之类的错误将下面代码复制 到HOST文件中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">192.30.255.113 github.com</div></pre></td></tr></table></figure><h4 id="配置Git全局参数"><a href="#配置Git全局参数" class="headerlink" title="配置Git全局参数"></a>配置Git全局参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &quot;username&quot;</div><div class="line">git config --global user.email &quot;email&quot;</div></pre></td></tr></table></figure><p>配置完成后可以通过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config --list</div></pre></td></tr></table></figure><br>查看配置</p><h2 id="03-安装-Hexo"><a href="#03-安装-Hexo" class="headerlink" title="03 安装 Hexo"></a>03 安装 Hexo</h2><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>打开Node.js命令行工具，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">npm install -g hexo-cli</div><div class="line"></div></pre></td></tr></table></figure><p>完成Hexo的全局安装。</p><h3 id="创建Hexo站点"><a href="#创建Hexo站点" class="headerlink" title="创建Hexo站点"></a>创建Hexo站点</h3><p>选择一个本地文件夹做为站点的根目录。如F:\qzdotnet，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">hexo init f:\qzdotnet</div><div class="line"></div><div class="line">cd f:\qzdotnet</div><div class="line"></div><div class="line">f:</div><div class="line"></div><div class="line">npm install </div><div class="line"></div><div class="line">npm install hexo-deployer-git</div></pre></td></tr></table></figure><p>完成对hexo的安装</p><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s</div></pre></td></tr></table></figure><p>如果部署没有问题，网站就已经启动了。可以使用<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000</a>进行访问</p><h3 id="配置Git账户"><a href="#配置Git账户" class="headerlink" title="配置Git账户"></a>配置Git账户</h3><p>打开 f:\qzdotnet文件夹下面的_config.yml文件配置deploy: 结点的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: git@github.com:qzdotnet/qzdotnet.github.io</div><div class="line">  branch: master</div></pre></td></tr></table></figure><blockquote><p>注意yml配置文件配置节点:后面要添加空格。</p></blockquote><h2 id="04-配置Next-主题"><a href="#04-配置Next-主题" class="headerlink" title="04 配置Next 主题"></a>04 配置Next 主题</h2><h3 id="下载Next"><a href="#下载Next" class="headerlink" title="下载Next"></a>下载Next</h3><p>本人下载的是<a href="https://github.com/iissnan/hexo-theme-next/releases/tag/v5.1.2" target="_blank" rel="external">v5.1.2</a>稳定版本的压缩包，当然也可以从GitHub克隆最新版，</p><p>下载后可以将文件解压缩并将文件名修改成Next，复制到 f:\qzdotnet的themes文件夹中。</p><h3 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h3><p>打开 f:\qzdotnet文件夹下的_config.yml文件，修改theme结点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme: next</div></pre></td></tr></table></figure><h2 id="05-发布到GitHub"><a href="#05-发布到GitHub" class="headerlink" title="05 发布到GitHub"></a>05 发布到GitHub</h2><h3 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h3><p>在Git Bash中输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new &quot;Hello World!&quot;</div></pre></td></tr></table></figure><p>添加一篇新的博文。</p><h3 id="发布到GitHub"><a href="#发布到GitHub" class="headerlink" title="发布到GitHub"></a>发布到GitHub</h3><p>输入完成发布</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g -d</div></pre></td></tr></table></figure><p>发布成功后可以打开<a href="https://qzdotnet.github.io/">https://qzdotnet.github.io/</a>查看已经的博客了。到此博客搭建就已经顺利完成了。后面的文章会对Hexo与Next的相关配置和功能使用做一些介绍</p><h2 id="99-参考链接"><a href="#99-参考链接" class="headerlink" title="99 参考链接"></a>99 参考链接</h2><p> <a href="http://barrysite.me/2017/05/07/Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/" target="_blank" rel="external">Github+Hexo+NEXT主题+域名绑定 博客搭建全记录</a></p><p> <a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo官网</a></p><p><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">NexT使用文档</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h2&gt;&lt;p&gt;  今年已经三十了，从事程序开发工作也已经10年了。这10年在技术上可以说一直在原地踏步。主要使用的语言.NET也还维持在.NET2.0的水平。刚参加 工作时还感觉自己挺牛的，到现在感觉自己很渺小。我也一直想学习新的技术，但都从入门到放弃了。这次搭建这个博客就是希望能通过写博客的方式让自己的技术水平能有所提高，逼自己在努力一把。&lt;/p&gt;
    
    </summary>
    
      <category term="博客搭建" scheme="http://qzdotnet.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="GitHub" scheme="http://qzdotnet.github.io/tags/GitHub/"/>
    
      <category term="Hexo" scheme="http://qzdotnet.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="http://qzdotnet.github.io/tags/Next/"/>
    
  </entry>
  
</feed>
