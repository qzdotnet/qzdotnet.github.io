<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>QuZheng</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://qzdotnet.github.io/"/>
  <updated>2017-10-27T09:57:44.367Z</updated>
  <id>http://qzdotnet.github.io/</id>
  
  <author>
    <name>QuZheng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搭建 LNMP 环境</title>
    <link href="http://qzdotnet.github.io/2017/10/27/%E6%90%AD%E5%BB%BA-LNMP-%E7%8E%AF%E5%A2%83/"/>
    <id>http://qzdotnet.github.io/2017/10/27/搭建-LNMP-环境/</id>
    <published>2017-10-27T09:35:50.000Z</published>
    <updated>2017-10-27T09:57:44.367Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>LNMP是建立web应用的平台，是Linux、NGINX，MySQL（有时也指MariaDB，数据库软件） 和PHP（有时也是指Perl或Python） 的简称。 </p></blockquote><h2 id="搭建-Nginx-静态服务器"><a href="#搭建-Nginx-静态服务器" class="headerlink" title="搭建 Nginx 静态服务器"></a>搭建 Nginx 静态服务器</h2><h3 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h3><p>使用 <code>yum</code> 安装 Nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install nginx</div></pre></td></tr></table></figure><p>修改  <a href="">/etc/nginx/conf.d/default.conf</a> ，去除对 IPv6 地址的监听，可以参考下面的示例代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen       80 default_server;</div><div class="line">    # listen       [::]:80 default_server;</div><div class="line">    server_name  _;</div><div class="line">    root         /usr/share/nginx/html;</div><div class="line"></div><div class="line">    # Load configuration files for the default server block.</div><div class="line">    include /etc/nginx/default.d/*.conf;</div><div class="line"></div><div class="line">    location / &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    error_page 404 /404.html;</div><div class="line">        location = /40x.html &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    error_page 500 502 503 504 /50x.html;</div><div class="line">        location = /50x.html &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>修改完成后，启动 Nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx</div></pre></td></tr></table></figure><p>此时，可以访问 http://\<ip地址\> 来确认是否安装成功</ip地址\></p><p>将 nginx 设置为开机自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig nginx</div></pre></td></tr></table></figure><h2 id="安装-MySQL-数据库服务"><a href="#安装-MySQL-数据库服务" class="headerlink" title="安装 MySQL 数据库服务"></a>安装 MySQL 数据库服务</h2><p>使用 <code>yum</code> 安装 MySQL :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install mysql-server</div></pre></td></tr></table></figure><p>安装完成后，启动 MySQL 服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysqld start</div></pre></td></tr></table></figure><p>设置 MySQL 管理员密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/mysqladmin -u root password 'QuZheng'</div></pre></td></tr></table></figure><p>将 MySQL 设置开机自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig mysql on</div></pre></td></tr></table></figure><h2 id="安装-PHP"><a href="#安装-PHP" class="headerlink" title="安装 PHP"></a>安装 PHP</h2><p>使用 <code>yum</code> 安装 PHP:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install php php-fpm php-mysql</div></pre></td></tr></table></figure><p>安装之后，启动 php-fpm 进程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service php-fpm start</div></pre></td></tr></table></figure><p>启动之后，可以使用下面的命令查看 PHP-FPM 进程监听那个端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -nplt | grep php-fpm</div></pre></td></tr></table></figure><p>将 PHP-FPM 设置开机自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig php-fpm on</div></pre></td></tr></table></figure><h2 id="配置-Nginx-并运行-PHP-程序"><a href="#配置-Nginx-并运行-PHP-程序" class="headerlink" title="配置 Nginx 并运行 PHP 程序"></a>配置 Nginx 并运行 PHP 程序</h2><h3 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h3><p>在 <a href="">/etc/nginx/conf.d</a> 目录中新建一个名为 php.conf 的文件，并配置 Nginx 端口 ，配置示例如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen 8000;</div><div class="line">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</div><div class="line">    location ~ .php$ &#123;</div><div class="line">        root           /usr/share/php;</div><div class="line">        fastcgi_pass   127.0.0.1:9000;</div><div class="line">        fastcgi_index  index.php;</div><div class="line">        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</div><div class="line">        include        fastcgi_params;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>修改配置完成后，重启 nginx 服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service nginx restart</div></pre></td></tr></table></figure><p>这时候，我们就可以在<a href="">/usr/share/php</a> 目录下新建一个 info.php 文件来检查 php 是否安装成功了，文件内容参考如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span> phpinfo(); <span class="meta">?&gt;</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;LNMP是建立web应用的平台，是Linux、NGINX，MySQL（有时也指MariaDB，数据库软件） 和PHP（有时也是指Perl或Python） 的简称。 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;搭建-Nginx-静态服务器&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>搭建 LAMP 服务</title>
    <link href="http://qzdotnet.github.io/2017/10/27/%E6%90%AD%E5%BB%BA-LAMP-%E6%9C%8D%E5%8A%A1/"/>
    <id>http://qzdotnet.github.io/2017/10/27/搭建-LAMP-服务/</id>
    <published>2017-10-27T05:49:19.000Z</published>
    <updated>2017-10-27T09:17:06.242Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搭建-MYSQL-数据库"><a href="#搭建-MYSQL-数据库" class="headerlink" title="搭建 MYSQL 数据库"></a>搭建 MYSQL 数据库</h2><p>使用 <code>yum</code> 安装 MySQL :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install mysql-server -y</div></pre></td></tr></table></figure><p>安装完成后启动 MySQL 服务 :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysqld restart</div></pre></td></tr></table></figure><p>将 MySQL 加入开机自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig mysqld on</div></pre></td></tr></table></figure><p>设置 MySQL  账户 root 密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">usr/bin/mysqladmin -u root password 'QuZheng'</div></pre></td></tr></table></figure><h2 id="安装-APACHE-服务器"><a href="#安装-APACHE-服务器" class="headerlink" title="安装 APACHE 服务器"></a>安装 APACHE 服务器</h2><p>使用 <code>yum</code> 安装 Apache</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install httpd</div></pre></td></tr></table></figure><p>启动 Apache 服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service httpd start</div></pre></td></tr></table></figure><p>将 Apache 加入开机自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig httpd on</div></pre></td></tr></table></figure><h2 id="安装-PHP"><a href="#安装-PHP" class="headerlink" title="安装 PHP"></a>安装 PHP</h2><h3 id="安装-PHP-和-PHP-MYSQL-支持工具："><a href="#安装-PHP-和-PHP-MYSQL-支持工具：" class="headerlink" title="安装 PHP 和 PHP-MYSQL 支持工具："></a>安装 PHP 和 PHP-MYSQL 支持工具：</h3><p>使用 <code>yum</code> 安装 PHP:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install php php-mysql -y</div></pre></td></tr></table></figure><h2 id="检查安装是否成功"><a href="#检查安装是否成功" class="headerlink" title="检查安装是否成功"></a>检查安装是否成功</h2><h3 id="检测-PHP-是否安装成功"><a href="#检测-PHP-是否安装成功" class="headerlink" title="检测 PHP 是否安装成功"></a>检测 PHP 是否安装成功</h3><p>我们在 /var/www/html 目录下创建一个 info.php 文件来检查 php 是否安装成功 ，示例代码参考如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">touch /var/www/html/info.php</div></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span> phpinfo(); <span class="meta">?&gt;</span></div></pre></td></tr></table></figure><p>重启 Apache 服务 ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service httpd restart</div></pre></td></tr></table></figure><p>此时，访问 <a href="http://1270.0.0.1/info.php" target="_blank" rel="external">http://1270.0.0.1/info.php</a> 可浏览到我们刚刚创建的 info.php 页面了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;搭建-MYSQL-数据库&quot;&gt;&lt;a href=&quot;#搭建-MYSQL-数据库&quot; class=&quot;headerlink&quot; title=&quot;搭建 MYSQL 数据库&quot;&gt;&lt;/a&gt;搭建 MYSQL 数据库&lt;/h2&gt;&lt;p&gt;使用 &lt;code&gt;yum&lt;/code&gt; 安装 MySQL :
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>搭建 ShowDoc 文档工具</title>
    <link href="http://qzdotnet.github.io/2017/10/26/%E6%90%AD%E5%BB%BA-ShowDoc-%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7/"/>
    <id>http://qzdotnet.github.io/2017/10/26/搭建-ShowDoc-文档工具/</id>
    <published>2017-10-26T06:34:32.000Z</published>
    <updated>2017-10-26T06:53:51.322Z</updated>
    
    <content type="html"><![CDATA[<p>程序员都很希望别人能写文档，而自己却不愿意写文档。文档的编写和管理影响了团队沟通协作的效率，ShowDoc 是一个非常适合 IT 团队的在线文档分享工具，为提升团队之间的沟通协作效率而生。本实验在 centos 系统上搭建基于 Nginx + PHP 的 ShowDoc 文档工具。</p><h2 id="准备-Nginx-PHP-环境"><a href="#准备-Nginx-PHP-环境" class="headerlink" title="准备 Nginx + PHP 环境"></a>准备 Nginx + PHP 环境</h2><h3 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h3><p>使用 <code>yum</code> 安装 Nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install nginx</div></pre></td></tr></table></figure><p>修改 /etc/nginx/nginx.conf 文件的内容如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">user nginx;</div><div class="line">worker_processes auto;</div><div class="line">error_log /var/log/nginx/error.log;</div><div class="line">pid /run/nginx.pid;</div><div class="line"></div><div class="line">include /usr/share/nginx/modules/*.conf;</div><div class="line"></div><div class="line">events &#123;</div><div class="line">    worker_connections 1024;</div><div class="line">&#125;</div><div class="line"></div><div class="line">http &#123;</div><div class="line">    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</div><div class="line">                      '$status $body_bytes_sent "$http_referer" '</div><div class="line">                      '"$http_user_agent" "$http_x_forwarded_for"';</div><div class="line"></div><div class="line">    access_log  /var/log/nginx/access.log  main;</div><div class="line"></div><div class="line">    sendfile            on;</div><div class="line">    tcp_nopush          on;</div><div class="line">    tcp_nodelay         on;</div><div class="line">    keepalive_timeout   65;</div><div class="line">    types_hash_max_size 2048;</div><div class="line"></div><div class="line">    include             /etc/nginx/mime.types;</div><div class="line">    default_type        application/octet-stream;</div><div class="line">    include /etc/nginx/conf.d/*.conf;</div><div class="line"></div><div class="line">    server &#123;</div><div class="line">        listen       80;</div><div class="line">        server_name  127.0.0.1;</div><div class="line">        root         /var/www/html;</div><div class="line">        index index.php index.html</div><div class="line">        error_page  404              /404.html;</div><div class="line">        location = /40x.html &#123;</div><div class="line">        &#125;</div><div class="line">        error_page   500 502 503 504  /50x.html;</div><div class="line">        location = /50x.html &#123;</div><div class="line">        &#125;</div><div class="line">        location ~ .php$ &#123;</div><div class="line">            root           /var/www/html;</div><div class="line">            fastcgi_pass   127.0.0.1:9000;</div><div class="line">            fastcgi_index  index.php;</div><div class="line">            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</div><div class="line">            include        fastcgi_params;</div><div class="line">        &#125;</div><div class="line">        location ~ /.ht &#123;</div><div class="line">            deny  all;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>启动 Nginx 并设置为开机启动：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">service nginx start</div><div class="line">chkconfig nginx on</div></pre></td></tr></table></figure><h3 id="安装-PHP"><a href="#安装-PHP" class="headerlink" title="安装 PHP"></a>安装 PHP</h3><p>使用 <code>yum</code> 安装 php-fpm:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install php php-gd php-fpm php-mcrypt php-mbstring php-mysql php-pdo</div></pre></td></tr></table></figure><p>启动 php-fpm 并设置开机启动：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">service  php-fpm start</div><div class="line">chkconfig php-fpm on</div></pre></td></tr></table></figure><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><h3 id="下载安装-Composer"><a href="#下载安装-Composer" class="headerlink" title="下载安装 Composer"></a>下载安装 Composer</h3><p>Composer 是 PHP 的一个依赖管理工具，推荐使用 Composer 创建 ShowDoc 项目。</p><p>执行如下命令安装 Composer:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">curl -sS https://getcomposer.org/installer | php</div><div class="line">mv composer.phar /usr/local/bin/composer</div></pre></td></tr></table></figure><h3 id="设置-Compooser-使用国内镜像"><a href="#设置-Compooser-使用国内镜像" class="headerlink" title="设置 Compooser 使用国内镜像"></a>设置 Compooser 使用国内镜像</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">composer config -g repo.packagist composer https://packagist.phpcomposer.com</div></pre></td></tr></table></figure><h3 id="使用-Compooser-创建项目"><a href="#使用-Compooser-创建项目" class="headerlink" title="使用 Compooser 创建项目"></a>使用 Compooser 创建项目</h3><p>执行命令创建项目：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /var/www/html/ &amp;&amp; composer create-project showdoc/showdoc</div></pre></td></tr></table></figure><h3 id="设置-showdoc-目录写权限"><a href="#设置-showdoc-目录写权限" class="headerlink" title="设置 showdoc 目录写权限"></a>设置 showdoc 目录写权限</h3><p>执行命令赋予 showdoc 下部分目录的写权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">chmod a+w showdoc/install</div><div class="line">chmod a+w showdoc/Sqlite</div><div class="line">chmod a+w showdoc/Sqlite/showdoc.db.php</div><div class="line">chmod a+w showdoc/Public/Uploads/</div><div class="line">chmod a+w showdoc/Application/Runtime</div><div class="line">chmod a+w showdoc/server/Application/Runtime</div><div class="line">chmod a+w showdoc/Application/Common/Conf/config.php</div><div class="line">chmod a+w showdoc/Application/Home/Conf/config.php</div></pre></td></tr></table></figure><p>创建完毕，您现在可以通过浏览器访问 http://&lt; IP地址&gt;/showdoc/install/ ，进行语言的选择以后即可通过 http://&lt; IP地址&gt;/showdoc 查看站点效果。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;程序员都很希望别人能写文档，而自己却不愿意写文档。文档的编写和管理影响了团队沟通协作的效率，ShowDoc 是一个非常适合 IT 团队的在线文档分享工具，为提升团队之间的沟通协作效率而生。本实验在 centos 系统上搭建基于 Nginx + PHP 的 ShowDoc 文
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>搭建 Thinkjs 开发环境</title>
    <link href="http://qzdotnet.github.io/2017/10/26/%E6%90%AD%E5%BB%BA-Thinkjs-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://qzdotnet.github.io/2017/10/26/搭建-Thinkjs-开发环境/</id>
    <published>2017-10-26T06:20:32.000Z</published>
    <updated>2017-10-26T06:28:09.092Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><p>ThinkJS 是一款 Node.js 的MVC 框架，所以安装 ThinkJS 之前需要安装 Node.js 环境。</p><h3 id="安装-Node-js-6-x0"><a href="#安装-Node-js-6-x0" class="headerlink" title="安装 Node.js 6.x0"></a>安装 Node.js 6.x0</h3><p>ThinkJS 支持 Node.js 的 0.12 以上版本，本教程以 Node.js 6.x 为例，其他版本安装过程相似</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -</div><div class="line">sudo apt-get install -y nodejs</div></pre></td></tr></table></figure><h2 id="安装-ThinkJS"><a href="#安装-ThinkJS" class="headerlink" title="安装 ThinkJS"></a>安装 ThinkJS</h2><h3 id="npm-安装-ThinkJS"><a href="#npm-安装-ThinkJS" class="headerlink" title="npm 安装 ThinkJS"></a>npm 安装 ThinkJS</h3><p>执行如下命令安装 ThinkJS</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo npm install thinkjs@2 -g --verbose</div></pre></td></tr></table></figure><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>执行如下命令创建项目：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">thinkjs new project_path;</div></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">create : project_path</div><div class="line">create : project_path/package.json</div><div class="line">create : project_path/.babelrc</div><div class="line">create : project_path/.thinkjsrc</div><div class="line">create : project_path/nginx.conf</div><div class="line">create : project_path/pm2.json</div><div class="line">create : project_path/.gitignore</div><div class="line">create : project_path/README.md</div><div class="line">create : project_path/www</div><div class="line">create : project_path/www/development.js</div><div class="line">create : project_path/www/production.js</div><div class="line">create : project_path/www/testing.js</div><div class="line">create : project_path/www/README.md</div><div class="line">create : project_path/www/static</div><div class="line">create : project_path/www/static/js</div><div class="line">create : project_path/www/static/css</div><div class="line">create : project_path/www/static/img</div><div class="line">create : project_path/src</div><div class="line">create : project_path/src/common/bootstrap</div><div class="line">create : project_path/src/common/bootstrap/middleware.js</div><div class="line">create : project_path/src/common/bootstrap/global.js</div><div class="line">create : project_path/src/common/config</div><div class="line">create : project_path/src/common/config/config.js</div><div class="line">create : project_path/src/common/config/view.js</div><div class="line">create : project_path/src/common/config/db.js</div><div class="line">create : project_path/src/common/config/hook.js</div><div class="line">create : project_path/src/common/config/session.js</div><div class="line">create : project_path/src/common/config/error.js</div><div class="line">create : project_path/src/common/config/env</div><div class="line">create : project_path/src/common/config/env/development.js</div><div class="line">create : project_path/src/common/config/env/testing.js</div><div class="line">create : project_path/src/common/config/env/production.js</div><div class="line">create : project_path/src/common/config/locale</div><div class="line">create : project_path/src/common/config/locale/en.js</div><div class="line">create : project_path/src/common/controller</div><div class="line">create : project_path/src/common/controller/error.js</div><div class="line">create : project_path/view/common</div><div class="line">create : project_path/view/common/error_400.html</div><div class="line">create : project_path/view/common/error_403.html</div><div class="line">create : project_path/view/common/error_404.html</div><div class="line">create : project_path/view/common/error_500.html</div><div class="line">create : project_path/view/common/error_503.html</div><div class="line">create : project_path/src/home/config</div><div class="line">create : project_path/src/home/config/config.js</div><div class="line">create : project_path/src/home/controller</div><div class="line">create : project_path/src/home/controller/base.js</div><div class="line">create : project_path/src/home/controller/index.js</div><div class="line">create : project_path/src/home/logic</div><div class="line">create : project_path/src/home/logic/index.js</div><div class="line">create : project_path/src/home/model</div><div class="line">create : project_path/src/home/model/index.js</div><div class="line">create : project_path/view/home</div><div class="line">create : project_path/view/home/index_index.html</div><div class="line"></div><div class="line">enter path:</div><div class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> project_path</span></div><div class="line"></div><div class="line">install dependencies:</div><div class="line"><span class="meta">$</span><span class="bash"> npm install</span></div><div class="line"></div><div class="line">run the app:</div><div class="line"><span class="meta">$</span><span class="bash"> npm start</span></div></pre></td></tr></table></figure><h3 id="安装项目依赖"><a href="#安装项目依赖" class="headerlink" title="安装项目依赖"></a>安装项目依赖</h3><p>执行如下命令安装依赖：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd project_path</div><div class="line">npm install --verbose</div></pre></td></tr></table></figure><h3 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h3><p>执行如下命令启动项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm start</div></pre></td></tr></table></figure><p>启动成功将看到提示如截图所示：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">[2017-10-26 14:27:34] [Babel] Compile file common/bootstrap/global.js 512ms</div><div class="line">[2017-10-26 14:27:34] [Babel] Compile file common/bootstrap/middleware.js 21ms</div><div class="line">[2017-10-26 14:27:34] [Babel] Compile file common/config/config.js 33ms</div><div class="line">[2017-10-26 14:27:34] [Babel] Compile file common/config/db.js 49ms</div><div class="line">[2017-10-26 14:27:34] [Babel] Compile file common/config/env/development.js 6ms</div><div class="line">[2017-10-26 14:27:34] [Babel] Compile file common/config/env/production.js 17ms</div><div class="line">[2017-10-26 14:27:34] [Babel] Compile file common/config/env/testing.js 5ms</div><div class="line">[2017-10-26 14:27:34] [Babel] Compile file common/config/error.js 18ms</div><div class="line">[2017-10-26 14:27:34] [Babel] Compile file common/config/hook.js 8ms</div><div class="line">[2017-10-26 14:27:34] [Babel] Compile file common/config/locale/en.js 11ms</div><div class="line">[2017-10-26 14:27:34] [Babel] Compile file common/config/session.js 20ms</div><div class="line">[2017-10-26 14:27:34] [Babel] Compile file common/config/view.js 26ms</div><div class="line">[2017-10-26 14:27:35] [Babel] Compile file common/controller/error.js 167ms</div><div class="line">[2017-10-26 14:27:35] [Babel] Compile file home/config/config.js 7ms</div><div class="line">[2017-10-26 14:27:35] [Babel] Compile file home/controller/base.js 18ms</div><div class="line">[2017-10-26 14:27:35] [Babel] Compile file home/controller/index.js 21ms</div><div class="line">[2017-10-26 14:27:35] [Babel] Compile file home/logic/index.js 34ms</div><div class="line">[2017-10-26 14:27:35] [Babel] Compile file home/model/index.js 27ms</div><div class="line">[2017-10-26 14:27:35] [THINK] Server running at http://127.0.0.1:8360/</div><div class="line">[2017-10-26 14:27:35] [THINK] ThinkJS Version: 2.2.24</div><div class="line">[2017-10-26 14:27:35] [THINK] Cluster Status: closed</div><div class="line">[2017-10-26 14:27:35] [THINK] WebSocket Status: closed</div><div class="line">[2017-10-26 14:27:35] [THINK] File Auto Compile: true</div><div class="line">[2017-10-26 14:27:35] [THINK] File Auto Reload: true</div><div class="line">[2017-10-26 14:27:35] [THINK] App Enviroment: development</div><div class="line"></div><div class="line">[2017-10-26 14:27:36] [HTTP] HEAD / 200 60ms</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装-Node-js&quot;&gt;&lt;a href=&quot;#安装-Node-js&quot; class=&quot;headerlink&quot; title=&quot;安装 Node.js&quot;&gt;&lt;/a&gt;安装 Node.js&lt;/h2&gt;&lt;p&gt;ThinkJS 是一款 Node.js 的MVC 框架，所以安装 Think
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>搭建 Node.js 环境</title>
    <link href="http://qzdotnet.github.io/2017/10/25/%E6%90%AD%E5%BB%BA-Node-js-%E7%8E%AF%E5%A2%83/"/>
    <id>http://qzdotnet.github.io/2017/10/25/搭建-Node-js-环境/</id>
    <published>2017-10-25T08:53:02.000Z</published>
    <updated>2017-10-26T02:10:13.447Z</updated>
    
    <content type="html"><![CDATA[<h2 id="yum-简介"><a href="#yum-简介" class="headerlink" title="yum 简介"></a>yum 简介</h2><p>Node.js 是运行在服务端的 JavaScript, 是基于 Chrome JavaScript V8 引擎建立的平台。</p><h2 id="yum-安装-Node-js-环境"><a href="#yum-安装-Node-js-环境" class="headerlink" title="yum 安装 Node.js 环境"></a>yum 安装 Node.js 环境</h2><h3 id="安装相关的依赖包"><a href="#安装相关的依赖包" class="headerlink" title="安装相关的依赖包"></a>安装相关的依赖包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install openssl</div></pre></td></tr></table></figure><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install nodejs</div></pre></td></tr></table></figure><a id="more"></a><h2 id="源码包安装配置"><a href="#源码包安装配置" class="headerlink" title="源码包安装配置"></a>源码包安装配置</h2><h3 id="下载并安装-Node-js"><a href="#下载并安装-Node-js" class="headerlink" title="下载并安装 Node.js"></a>下载并安装 Node.js</h3><p>下载最新的稳定版 v6.10.3 到本地</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://nodejs.org/dist/v6.10.3/node-v6.10.3-linux-x64.tar.xz</div></pre></td></tr></table></figure><p>下载完成后，将其解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar xvJf node-v6.10.3-linux-x64.tar.xz</div></pre></td></tr></table></figure><p>将解压的 <code>Node.js</code> 目录移动到 /usr/local 兖下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mv node-v6.10.3-linux-x64 /usr/local/node-v6</div></pre></td></tr></table></figure><p>配置 <code>node</code> 软连接 到 /bin 目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ln -s /usr/local/node-v6/bin/node /bin/node</div></pre></td></tr></table></figure><h3 id="配置和使用-npm"><a href="#配置和使用-npm" class="headerlink" title="配置和使用 npm"></a>配置和使用 npm</h3><h4 id="配置-npm"><a href="#配置-npm" class="headerlink" title="配置 npm"></a>配置 npm</h4><p><code>npm</code> 是 <code>Node.js</code> 的包管理和分发工具。它可以让 <code>Node.js</code> 开发者能够更加轻松的共享代码和共用代码片段</p><p>下载 <code>node</code> 的压缩包中已经包含了 <code>npm</code> , 我们只需要将其软链接到 <code>bin</code> 目录下即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ln -s /usr/local/node-v6/bin/npm /bin/npm</div></pre></td></tr></table></figure><h4 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><p>将 <em>/usr/local/node-v6/bin</em> 目录添加到 $PATH 环境变量中可以方便地使用通过 npm 全局安装的第三方工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo 'export PATH=/usr/local/node-v6/bin:$PATH' &gt;&gt; /etc/profile</div></pre></td></tr></table></figure><h4 id="生效环境变量"><a href="#生效环境变量" class="headerlink" title="生效环境变量"></a>生效环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /etc/profile</div></pre></td></tr></table></figure><h4 id="使用-npm"><a href="#使用-npm" class="headerlink" title="使用 npm"></a>使用 npm</h4><p>通过 <code>npm</code> 安装进程管理模块 <code>forever</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install forever -g</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;yum-简介&quot;&gt;&lt;a href=&quot;#yum-简介&quot; class=&quot;headerlink&quot; title=&quot;yum 简介&quot;&gt;&lt;/a&gt;yum 简介&lt;/h2&gt;&lt;p&gt;Node.js 是运行在服务端的 JavaScript, 是基于 Chrome JavaScript V8 引擎建立的平台。&lt;/p&gt;
&lt;h2 id=&quot;yum-安装-Node-js-环境&quot;&gt;&lt;a href=&quot;#yum-安装-Node-js-环境&quot; class=&quot;headerlink&quot; title=&quot;yum 安装 Node.js 环境&quot;&gt;&lt;/a&gt;yum 安装 Node.js 环境&lt;/h2&gt;&lt;h3 id=&quot;安装相关的依赖包&quot;&gt;&lt;a href=&quot;#安装相关的依赖包&quot; class=&quot;headerlink&quot; title=&quot;安装相关的依赖包&quot;&gt;&lt;/a&gt;安装相关的依赖包&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yum -y install openssl&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;安装-Node-js&quot;&gt;&lt;a href=&quot;#安装-Node-js&quot; class=&quot;headerlink&quot; title=&quot;安装 Node.js&quot;&gt;&lt;/a&gt;安装 Node.js&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yum -y install nodejs&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
      <category term="node" scheme="http://qzdotnet.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>搭建 SVN 服务器</title>
    <link href="http://qzdotnet.github.io/2017/10/25/%E6%90%AD%E5%BB%BA-SVN-%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://qzdotnet.github.io/2017/10/25/搭建-SVN-服务器/</id>
    <published>2017-10-25T08:09:55.000Z</published>
    <updated>2017-10-25T09:54:59.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SVN-简介"><a href="#SVN-简介" class="headerlink" title="SVN 简介"></a>SVN 简介</h2><p>SVN 是 Subversion 的简称，是一个开放源代码的版本控制系统，相较于 RCS、CVS，它采用了分支管理系统，它的设计目标就是取代CVS。本实验带您一步步搭建属于自己的 SVN 服务器</p><h2 id="安装-SVN-服务器"><a href="#安装-SVN-服务器" class="headerlink" title="安装 SVN 服务器"></a>安装 SVN 服务器</h2><h3 id="安装-Subversion"><a href="#安装-Subversion" class="headerlink" title="安装 Subversion"></a>安装 Subversion</h3><p>Subversion 是一个版本控制系统个 ，相对于的 RCS、CVS ，采用了分支管理系统，他的设计目标就是取代 CVS</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install -y subversion</div></pre></td></tr></table></figure><h3 id="创建-SVN-版本库"><a href="#创建-SVN-版本库" class="headerlink" title="创建 SVN 版本库"></a>创建 SVN 版本库</h3><p>创建项目版本库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir -p /data/svn/myproject</div><div class="line">svnadmin create /data/svn/myproject</div></pre></td></tr></table></figure><a id="more"></a><h2 id="配置-SVN-信息"><a href="#配置-SVN-信息" class="headerlink" title="配置 SVN 信息"></a>配置 SVN 信息</h2><h3 id="配置文件简介"><a href="#配置文件简介" class="headerlink" title="配置文件简介"></a>配置文件简介</h3><p>版本库中的配置目录 <a href="">conf</a> 有三个文件:</p><ul><li>authz 是权限控制文件</li><li>passwd 是帐号密码文件</li><li>svnserve.conf 是SVN服务综合配置文件</li></ul><h3 id="配置权限配置文件-authz"><a href="#配置权限配置文件-authz" class="headerlink" title="配置权限配置文件 authz"></a>配置权限配置文件 authz</h3><p>现在编辑 authz ，内容参考如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[groups]            </div><div class="line">#用户组</div><div class="line">admin = admin,root,test  </div><div class="line">#用户组所对应的用户</div><div class="line">[/]                 </div><div class="line">#库目录权限</div><div class="line">@admin = rw         </div><div class="line">#用户组权限</div><div class="line">*=r               </div><div class="line">#非用户组权限</div></pre></td></tr></table></figure><h3 id="而配置账号密码文件-passwd"><a href="#而配置账号密码文件-passwd" class="headerlink" title="而配置账号密码文件 passwd"></a>而配置账号密码文件 passwd</h3><p>内容参考如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[users]</div><div class="line"><span class="meta">#</span><span class="bash"> harry = harryssecret</span></div><div class="line"><span class="meta">#</span><span class="bash"> sally = sallyssecret</span></div><div class="line">admin = 123456</div><div class="line">root = 123456</div><div class="line">test = 123456</div></pre></td></tr></table></figure><h3 id="配置-SVN-服务综合配置文件-svnserve-conf"><a href="#配置-SVN-服务综合配置文件-svnserve-conf" class="headerlink" title="配置 SVN 服务综合配置文件 svnserve.conf"></a>配置 SVN 服务综合配置文件 svnserve.conf</h3><p>编辑 编辑 svnserve.conf ，内容参考如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[general]</div><div class="line"><span class="meta">#</span><span class="bash"> force-username-case = none</span></div><div class="line"><span class="meta">#</span><span class="bash"> 匿名访问的权限 可以是<span class="built_in">read</span>、write，none，默认为<span class="built_in">read</span></span></div><div class="line">anon-access = none</div><div class="line"><span class="meta">#</span><span class="bash">使授权用户有写权限</span></div><div class="line">auth-access = write</div><div class="line"><span class="meta">#</span><span class="bash">密码数据库的路径</span></div><div class="line">password-db = passwd</div><div class="line"><span class="meta">#</span><span class="bash">访问控制文件</span></div><div class="line">authz-db = authz</div><div class="line"><span class="meta">#</span><span class="bash">认证命名空间，SVN会在认证提示里显示，并且作为凭证缓存的关键字</span></div><div class="line">realm = /data/svn/myproject</div><div class="line"></div><div class="line">[sasl]</div></pre></td></tr></table></figure><h2 id="启动-SVN-服务"><a href="#启动-SVN-服务" class="headerlink" title="启动 SVN 服务"></a>启动 SVN 服务</h2><h3 id="启动-SVN"><a href="#启动-SVN" class="headerlink" title="启动 SVN"></a>启动 SVN</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">svnserve -d -r /data/svn</div></pre></td></tr></table></figure><h3 id="checkout-SVN-项目"><a href="#checkout-SVN-项目" class="headerlink" title="checkout SVN 项目"></a>checkout SVN 项目</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir -p /data/workspace/myproject</div><div class="line">svn co svn://127.0.0.1/myproject /data/workspace/myproject --username root --password 123456 --force --no-auth-cache</div></pre></td></tr></table></figure><h3 id="提交文件到-SVN-服务器"><a href="#提交文件到-SVN-服务器" class="headerlink" title="提交文件到 SVN 服务器"></a>提交文件到 SVN 服务器</h3><p>从本地提交文件到 SVN 服务器 ，其中 <code>root</code> 密码为 <code>/data/svn/myrpoject/conf/passwd</code> 文件存储的密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">cd /data/workspace/myproject</div><div class="line">echo test &gt;&gt;test.txt</div><div class="line">svn add test.txt</div><div class="line">svn commit test.txt -, 'test'</div></pre></td></tr></table></figure><p>提交成功后可以通过如下命令从本地项目删除文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /data/workspace/myproject</div><div class="line">rm -rf test.txt</div></pre></td></tr></table></figure><p>删除后可以通过 SVN 服务器恢复</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /data/workspace/myproject</div><div class="line">svn update</div></pre></td></tr></table></figure><h2 id="部署完成"><a href="#部署完成" class="headerlink" title="部署完成"></a>部署完成</h2><p>至此 SVN 环境的搭建就已经完成了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;SVN-简介&quot;&gt;&lt;a href=&quot;#SVN-简介&quot; class=&quot;headerlink&quot; title=&quot;SVN 简介&quot;&gt;&lt;/a&gt;SVN 简介&lt;/h2&gt;&lt;p&gt;SVN 是 Subversion 的简称，是一个开放源代码的版本控制系统，相较于 RCS、CVS，它采用了分支管理系统，它的设计目标就是取代CVS。本实验带您一步步搭建属于自己的 SVN 服务器&lt;/p&gt;
&lt;h2 id=&quot;安装-SVN-服务器&quot;&gt;&lt;a href=&quot;#安装-SVN-服务器&quot; class=&quot;headerlink&quot; title=&quot;安装 SVN 服务器&quot;&gt;&lt;/a&gt;安装 SVN 服务器&lt;/h2&gt;&lt;h3 id=&quot;安装-Subversion&quot;&gt;&lt;a href=&quot;#安装-Subversion&quot; class=&quot;headerlink&quot; title=&quot;安装 Subversion&quot;&gt;&lt;/a&gt;安装 Subversion&lt;/h3&gt;&lt;p&gt;Subversion 是一个版本控制系统个 ，相对于的 RCS、CVS ，采用了分支管理系统，他的设计目标就是取代 CVS&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yum install -y subversion&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;创建-SVN-版本库&quot;&gt;&lt;a href=&quot;#创建-SVN-版本库&quot; class=&quot;headerlink&quot; title=&quot;创建 SVN 版本库&quot;&gt;&lt;/a&gt;创建 SVN 版本库&lt;/h3&gt;&lt;p&gt;创建项目版本库&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mkdir -p /data/svn/myproject&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;svnadmin create /data/svn/myproject&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
      <category term="SVN" scheme="http://qzdotnet.github.io/tags/SVN/"/>
    
  </entry>
  
  <entry>
    <title>搭建个人 Leanote 云笔记本</title>
    <link href="http://qzdotnet.github.io/2017/10/25/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA-Leanote-%E4%BA%91%E7%AC%94%E8%AE%B0%E6%9C%AC/"/>
    <id>http://qzdotnet.github.io/2017/10/25/搭建个人-Leanote-云笔记本/</id>
    <published>2017-10-25T06:03:32.000Z</published>
    <updated>2017-10-25T09:54:11.559Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Leanote-简介"><a href="#Leanote-简介" class="headerlink" title="Leanote 简介"></a>Leanote 简介</h2><p>Leanote 是目前为止发现的最有 bigger 的云笔记，具备 markdown 输入，代码高亮，多人协作，笔记历史记录，笔记内导航，直接发布为博客等等能力。本实验将带您一步步搭建属于自己的云笔记本，您将可以通过云笔记记录生活工作的点滴。</p><h2 id="下载启动-MongoDB"><a href="#下载启动-MongoDB" class="headerlink" title="下载启动 MongoDB"></a>下载启动 MongoDB</h2><p>leanote 依赖 MongoDB 作为数据存储 ，下面开始安装 MongoDB:</p><h3 id="下载-MongoDB"><a href="#下载-MongoDB" class="headerlink" title="下载 MongoDB"></a>下载 MongoDB</h3><p>进入 /home 目录，并下载 MongoDB:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /home</div></pre></td></tr></table></figure><p>下载源码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.0.1.tgz</div></pre></td></tr></table></figure><p>解压缩源码包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -xzvf mongodb-linux-x86_64-3.0.1.tgz</div></pre></td></tr></table></figure><a id="more"></a><h3 id="创建用于存储的文件夹目录"><a href="#创建用于存储的文件夹目录" class="headerlink" title="创建用于存储的文件夹目录"></a>创建用于存储的文件夹目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir -p /data/db</div></pre></td></tr></table></figure><p>配置 MongoDB 的环境变量：</p><p>编辑 /etc/profile, 在文件夹末尾追加以下配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export PATH=$PATH:/home/mongodb-linux-x86_64-3.0.1/bin</div></pre></td></tr></table></figure><p>并执行以下命令，是环境变量生效。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /etc/profile</div></pre></td></tr></table></figure><h3 id="启动-MongoDB"><a href="#启动-MongoDB" class="headerlink" title="启动 MongoDB"></a>启动 MongoDB</h3><p>执行下面的命令启动 MongoDB 需要 3 ~ 5 分钟，耐心等待 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mongod --bind_ip localhost --port 27017 --dbpath /data/db/ --logpath=/var/log/mongod.log --fork</div></pre></td></tr></table></figure><h2 id="安装-leanote"><a href="#安装-leanote" class="headerlink" title="安装 leanote"></a>安装 leanote</h2><p>Leanote 是一款 Linux 下开源的软件，下面开始安装 Leanote：</p><p>###下载 leanote</p><p>进入 /home 目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /home</div></pre></td></tr></table></figure><p>下载 Leanote 源码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://iweb.dl.sourceforge.net/project/leanote-bin/2.4/leanote-linux-amd64-v2.4.bin.tar.gz</div></pre></td></tr></table></figure><h3 id="解开压缩包"><a href="#解开压缩包" class="headerlink" title="解开压缩包"></a>解开压缩包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zxvf leanote-linux-amd64-v2.4.bin.tar.gz</div></pre></td></tr></table></figure><h3 id="编辑-Leanote-配置文件"><a href="#编辑-Leanote-配置文件" class="headerlink" title="编辑 Leanote 配置文件"></a>编辑 Leanote 配置文件</h3><p>编辑文件 <em>app.conf</em>，在文件中找到 <code>app.secret=</code> 项，并修改为如下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">app.secret=qcloud666</div></pre></td></tr></table></figure><h3 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h3><p>导入初始化数据：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mongorestore -h localhost -d leanote --dir /home/leanote/mongodb_backup/leanote_install_data/</div></pre></td></tr></table></figure><p>启动 Leanote 服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nohup /bin/bash /home/leanote/bin/run.sh &gt;&gt; /var/log/leanote.log 2&gt;&amp;1 &amp;</div></pre></td></tr></table></figure><h2 id="访问-Leanote-云笔记本"><a href="#访问-Leanote-云笔记本" class="headerlink" title="访问 Leanote 云笔记本"></a>访问 Leanote 云笔记本</h2><p>通过 ip 访问笔记本</p><p>通过访问 http://&lt;您的 IP 地址&gt;:9000 就可以了使用自己的笔记本。</p><ul><li>初始化账户： <code>admin</code></li><li>初始化密码： <code>abc123</code></li></ul><p>请修改密码已确保使用安全！</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Leanote-简介&quot;&gt;&lt;a href=&quot;#Leanote-简介&quot; class=&quot;headerlink&quot; title=&quot;Leanote 简介&quot;&gt;&lt;/a&gt;Leanote 简介&lt;/h2&gt;&lt;p&gt;Leanote 是目前为止发现的最有 bigger 的云笔记，具备 markdown 输入，代码高亮，多人协作，笔记历史记录，笔记内导航，直接发布为博客等等能力。本实验将带您一步步搭建属于自己的云笔记本，您将可以通过云笔记记录生活工作的点滴。&lt;/p&gt;
&lt;h2 id=&quot;下载启动-MongoDB&quot;&gt;&lt;a href=&quot;#下载启动-MongoDB&quot; class=&quot;headerlink&quot; title=&quot;下载启动 MongoDB&quot;&gt;&lt;/a&gt;下载启动 MongoDB&lt;/h2&gt;&lt;p&gt;leanote 依赖 MongoDB 作为数据存储 ，下面开始安装 MongoDB:&lt;/p&gt;
&lt;h3 id=&quot;下载-MongoDB&quot;&gt;&lt;a href=&quot;#下载-MongoDB&quot; class=&quot;headerlink&quot; title=&quot;下载 MongoDB&quot;&gt;&lt;/a&gt;下载 MongoDB&lt;/h3&gt;&lt;p&gt;进入 /home 目录，并下载 MongoDB:&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cd /home&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下载源码&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.0.1.tgz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解压缩源码包&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;tar -xzvf mongodb-linux-x86_64-3.0.1.tgz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
      <category term="leanote" scheme="http://qzdotnet.github.io/categories/Linux/leanote/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>玩转 Jupyter Notebook</title>
    <link href="http://qzdotnet.github.io/2017/10/24/%E7%8E%A9%E8%BD%AC-Jupyter-Notebook/"/>
    <id>http://qzdotnet.github.io/2017/10/24/玩转-Jupyter-Notebook/</id>
    <published>2017-10-24T09:12:22.000Z</published>
    <updated>2017-10-25T01:28:44.530Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装-Juptyer-Notebook"><a href="#安装-Juptyer-Notebook" class="headerlink" title="安装 Juptyer Notebook"></a>安装 Juptyer Notebook</h2><h3 id="Jupyter-Notebook-简介"><a href="#Jupyter-Notebook-简介" class="headerlink" title="Jupyter Notebook 简介"></a>Jupyter Notebook 简介</h3><p><strong>jupter Notebook</strong> 是一个开源的 Web 应用程序，可以用来创建和共享包含动态代码、方程式、可视化及解释性文本的文档。</p><p>其应用包括：数据整理与转换、数值模拟、统计建模、机器学习等等。</p><p>更多信息请见 <a href="http://jupyter.org/" target="_blank" rel="external">官网</a></p><a id="more"></a><h3 id="检查-Python-环境"><a href="#检查-Python-环境" class="headerlink" title="检查 Python 环境"></a>检查 Python 环境</h3><p>CentOS 7.2 中默认集成了 Python 2.7 ,可以通过下面命令检查 Python 版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python --version</div></pre></td></tr></table></figure><p>安装 pip</p><p>pip 是一个 Python 包管理工具，我们使用 yum 命令来安装该工具：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install python-pip</div></pre></td></tr></table></figure><blockquote><p>笔者在自己的机器测试的时候遇到了问题 需要安装 epel-release，解决办法参考<a href="http://blog.csdn.net/yulei_qq/article/details/52984334" target="_blank" rel="external">传送门</a></p></blockquote><p>使用下面命令升级 pip 到最新版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install --upgrade pip</div></pre></td></tr></table></figure><blockquote><p>非常扯淡，不知道为什么下载的不是最新版本，还得升级。这个要是不熟悉就完蛋了。。。</p></blockquote><h3 id="安装相关依赖"><a href="#安装相关依赖" class="headerlink" title="安装相关依赖"></a>安装相关依赖</h3><p>安装 Jupyter 过工程中还需要一些依赖，我们使用一下命令安装他们：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum -y groupinstall "Development Tools"</div><div class="line">yum -y install python-devel</div></pre></td></tr></table></figure><h3 id="配置虚拟环境"><a href="#配置虚拟环境" class="headerlink" title="配置虚拟环境"></a>配置虚拟环境</h3><h4 id="安装-virtualenv"><a href="#安装-virtualenv" class="headerlink" title="安装 virtualenv"></a>安装 virtualenv</h4><p>我们将为 Jupyter 创建一个独立的虚拟环境，与系统自带的 Python 隔离开来，为此，先安装 virtualenv 库:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install virtualenv</div></pre></td></tr></table></figure><h4 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h4><p>创建一个专门的虚拟环境 ，并直接激活进入该环境：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">virtualenv venv</div><div class="line">source venv/bin/activate</div></pre></td></tr></table></figure><h3 id="使用-pip-安装-Jupyter"><a href="#使用-pip-安装-Jupyter" class="headerlink" title="使用 pip 安装 Jupyter"></a>使用 pip 安装 Jupyter</h3><p>我们使用 pip 命令安装 jupyter</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install jupyter</div></pre></td></tr></table></figure><h2 id="配置-Jupyter-Notebook"><a href="#配置-Jupyter-Notebook" class="headerlink" title="配置 Jupyter Notebook"></a>配置 Jupyter Notebook</h2><h3 id="建立项目目录"><a href="#建立项目目录" class="headerlink" title="建立项目目录"></a>建立项目目录</h3><p>我们先为 Jupyter 相关文件准备一个目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir /data/jupyter</div><div class="line">cd /data/jupyterpy</div></pre></td></tr></table></figure><p>在建立一个目录作为 /jupyter 运行的根目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir /data/jupyter/root</div></pre></td></tr></table></figure><h3 id="准备密码密文"><a href="#准备密码密文" class="headerlink" title="准备密码密文"></a>准备密码密文</h3><p>由于我们将以需要密码验证的模式启动 Jupyter ,所以我们要预先生成所需的秘药对应的密文。</p><p><strong>生成密文 </strong></p><p>使用下面的命令，创建一个密文的密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python -c "import IPython;print IPython.lib.passwd()"</div></pre></td></tr></table></figure><p>执行后需要输入并确认密码，然后程序会返回一个 <code>&#39;sha1:...&#39;</code> 的密文，我们接下来将会用到它。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sha1:6889357b4a1f:1dc884a41c8c3db35f01dcdc0817c64fdc845c69</div></pre></td></tr></table></figure><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="### 修改配置文件"></a>### 修改配置文件</h4><h4 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h4><p>我们使用 –generate-config 参数生成默认配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jupyter notebook --generate-config --allow-root</div></pre></td></tr></table></figure><p>生成的配置文件在 <code>/root/.jupyter/</code> 目录下。</p><h4 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h4><p>然后在配置文件最下方加入以下配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">c.NotebookApp.ip = '*'</div><div class="line">c.NotebookApp.allow_root = True</div><div class="line">c.NotebookApp.open_browser = False</div><div class="line">c.NotebookApp.port = 8888</div><div class="line">c.NotebookApp.password = u'sha:6889357b4a1f:1dc884a41c8c3db35f01dcdc0817c64fdc845c69e'</div><div class="line">c.ContentsManager.root_dir = '/data/jupyter/root'</div></pre></td></tr></table></figure><p>其中：</p><ul><li><code>c.NotebookApp.password</code> 请将上一步中密文填入此项，包括 sha: 部分。</li></ul><p>你也可以直接配置或使用 <code>Nginx</code> 将服务代理到 80 或 443 端口。</p><h2 id="启动-Jupyter-Notebook"><a href="#启动-Jupyter-Notebook" class="headerlink" title="启动 Jupyter Notebook"></a>启动 Jupyter Notebook</h2><h3 id="直接启动"><a href="#直接启动" class="headerlink" title="直接启动"></a>直接启动</h3><p>使用一下指令启动  Jupyter Notebook：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jupyter notebook</div></pre></td></tr></table></figure><h3 id="创建-Notebook"><a href="#创建-Notebook" class="headerlink" title="创建 Notebook"></a>创建 Notebook</h3><ul><li>进入<code>【首页】</code> 首先需要输入前面不走中设置的密码。</li><li>然后点击右侧的<code>【new】</code> ，选择 Python2 新建一个 notebook ,这时跳转到编辑界面。</li><li>现在我们可以看到 <em>/data/jupyter/root/</em> 目录中出现了一个 <code>Untitled.ipynb</code> 文件，这就是我们刚刚新建的 Notebook 文件。我们建立的所有 Notebook 都将默认以该类型的文件格式保存。</li></ul><h3 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h3><p>直接以 <code>jupyter notebook</code> 命令启动 Jupyter 的方式在连接断开时将会中断，所以我们需要让 Jupyter 服务在后台常驻。</p><p>先按 <code>Ctrl + C</code> 并输入 <code>y</code> 停止 Jupyter 服务，然后执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nohup jupyter notebook &gt; /data/jupyter/jupyter.log 2&gt;&amp;1 &amp;</div></pre></td></tr></table></figure><p>该命令将使得 Jupyter 在后台运行，并将日志写在 <em>/data/jupyter/jupyter.log</em> 文件中。</p><h3 id="准备后续步骤的-Notebook"><a href="#准备后续步骤的-Notebook" class="headerlink" title="准备后续步骤的 Notebook"></a>准备后续步骤的 Notebook</h3><p>为了后面实验中实验室的步骤检查器能够更好的工作，此时我们使用以下命令预先创建几份 ipynb 文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cd /data/jupyter/root</div><div class="line">cp Untitled.ipynb first.ipynb</div><div class="line">cp Untitled.ipynb matplotlib.ipynb</div><div class="line">cp Untitled.ipynb tensorflow.ipynb</div><div class="line">rm -f Untitled.ipynb</div></pre></td></tr></table></figure><h2 id="使用-Jupyter-Notebook"><a href="#使用-Jupyter-Notebook" class="headerlink" title="使用 Jupyter Notebook"></a>使用 Jupyter Notebook</h2><blockquote><p>接下来的步骤中如遇到步骤检查未通过，请按下 Ctrl + S 保存，等待步骤检查器确认。</p></blockquote><h3 id="编辑界面"><a href="#编辑界面" class="headerlink" title="编辑界面"></a>编辑界面</h3><p>打开  <strong>first.ipynb 编辑界面。</strong></p><p><strong>Jupyter Notebook</strong> 的编辑界面主要由 <strong>工具栏</strong> 和 <strong>内容编辑区</strong> 构成。</p><p>下方编辑区，由 <strong>Cell</strong> 组成。每个 notebook 由多个 <strong>Cell</strong> 构成，每个 <strong>Cell</strong> 都可以有不同的用途。</p><h3 id="Code-Cell"><a href="#Code-Cell" class="headerlink" title="Code Cell"></a>Code Cell</h3><p>新建的 notebook 中包含一个代码 <strong>Cell</strong>（Code Cell），以 <code>[ ]</code> 开头，在该类型的 <strong>Cell</strong> 中，可以输入任意代码并执行。如输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">1+1</div></pre></td></tr></table></figure><p>然后按下 <code>Shift + Enter</code> 键， <strong>Cell</strong> 中代码就会被执行，光标也会移动至下个新 <strong>Cell</strong> 中。我们接着输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">print("Hello Jupyter")</div></pre></td></tr></table></figure><p>再次按下 <code>Shift + Enter</code> ，可以看到这次没有出现 <code>Out[..]</code> 这样的文字。这是因为我们只打印出来了某些值，而没有返回任何的值。</p><ul><li><strong>按下 Ctrl + S 保存，等待步骤检查器确认。</strong></li></ul><h3 id="Heading-Cell"><a href="#Heading-Cell" class="headerlink" title="Heading Cell"></a>Heading Cell</h3><p>新版本中已经没有独立的 <code>Heading Cell</code>，现在标题被整合在 <code>Markdown Cell</code> 之中。</p><p>如果我们想在顶部添加一个的标题。选中第一个 <strong>Cell</strong>，然后点击 <code>Insert -&gt; Insert Cell Above</code>。</p><p>你会发现，文档顶部马上就出现了一个新的 <strong>Cell</strong>。点击在工具栏中 <strong>Cell</strong> 类型（默认为 Code），将其变成 Markdown。接着在 <strong>Cell</strong> 中写下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># My First Notebook</div></pre></td></tr></table></figure><p>然后按下 <code>Shift + Enter</code> 键，便可以看到生成了一行一级标题。</p><ul><li><strong>与 Markdown 语法相同，使用多个#将改变标题级别。</strong></li></ul><h3 id="Markdown-Cell"><a href="#Markdown-Cell" class="headerlink" title="Markdown Cell"></a>Markdown Cell</h3><p>上一步中我们尝试了使用 <code>Markdown Cell</code> 。 在该 Cell 中，除标题外其他语法同样支持。比如，我们在一个新的 Cell 中插入以下文本：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">This is a <span class="strong">**table**</span>:</div><div class="line"></div><div class="line">| Name | Value |</div><div class="line">|:----:|:-----:|</div><div class="line">|    A |     1 |</div><div class="line">|    B |     2 |</div><div class="line">|    C |     3 |</div></pre></td></tr></table></figure><p>然后按下 <code>Shift + Enter</code>，即可渲染出相应内容。</p><h4 id="高级用法-HTML"><a href="#高级用法-HTML" class="headerlink" title="高级用法 - HTML"></a>高级用法 - HTML</h4><p><code>MarkDown Cell</code> 中同样接受 HTML 代码。 这样，你就可以实现更加丰富的样式及结构、添加图片等等。</p><p>例如，如果想在 notebook 中添加 Jupyter 的 logo，并且添加 2px 的黑色边框，放置在单元格左侧，可以这样编写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://jupyter.org/assets/nav_logo.svg"</span> <span class="attr">style</span>=<span class="string">"border: 2px solid black; float:left"</span> /&gt;</span></div></pre></td></tr></table></figure><p>然后按下 <code>Shift + Enter</code>，即可渲染出图片。</p><h4 id="高级用法-LaTex"><a href="#高级用法-LaTex" class="headerlink" title="高级用法 - LaTex"></a>高级用法 - LaTex</h4><p>Markdown Cell 还支持 LaTex 语法。 在 Cell 中插入以下本文：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash"><span class="variable">$int_0</span>^&#123;+infty&#125; x^2 dx$$</span></div></pre></td></tr></table></figure><p>同样按下 <code>Shift + Enter</code>，即可渲染出公式。</p><h4 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h4><p>notebook 支持导出导出为 HTML、Markdown、PDF 等多种格式。</p><p>如点击 <code>File -&gt; Download as -&gt; HTML(.html)</code>，即可下载到 HTML 版本的 notebook。</p><h4 id="导出-PDF"><a href="#导出-PDF" class="headerlink" title="导出 PDF"></a>导出 PDF</h4><p>其中，导出 PDF 需要其他包的支持，我们需要使用一下命令安装这些依赖：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install pandoc texlive-*</div></pre></td></tr></table></figure><blockquote><p><strong>注：直接导出 PDF 时 Jupyter 可能会忽略一些 Cell，建议先导出为 HTML，然后使用浏览器将其转为 PDF。</strong></p></blockquote><h2 id="安装-Matplotlib"><a href="#安装-Matplotlib" class="headerlink" title="安装 Matplotlib"></a>安装 Matplotlib</h2><p>我们使用 pip 来安装 Matplotlib ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install matplotlib</div></pre></td></tr></table></figure><p>测试 Matplotlib</p><p>我们使用另一个 notebook （matplotlib.ipynb）来测试 Matplotlib。</p><p><strong>打开 matplotlib.ipynb 编辑界面。</strong></p><h4 id="魔法命令"><a href="#魔法命令" class="headerlink" title="魔法命令"></a>魔法命令</h4><p>在第一个 <strong>Cell</strong> 中，我们插入并执行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">%matplotlib inline</div></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>关于 matplotlib 的使用请移步其<a href="http://matplotlib.org/" target="_blank" rel="external">官网</a>。</p><p>在接下来 <strong>Cell</strong> 中，我们插入几个官方示例测试：</p><ol><li><p><a href="http://matplotlib.org/examples/style_sheets/plot_bmh.html" target="_blank" rel="external">plot_bmh</a></p><p>示例代码：/plot_bmh.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> numpy.random <span class="keyword">import</span> beta</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div></pre></td></tr></table></figure><p>plt.style.use(‘bmh’)</p></li></ol><p>   def plot_beta_hist(ax, a, b):<br>       ax.hist(beta(a, b, size=10000), histtype=”stepfilled”,<br>               bins=25, alpha=0.8, normed=True)</p><p>   fig, ax = plt.subplots()<br>   plot_beta_hist(ax, 10, 10)<br>   plot_beta_hist(ax, 4, 12)<br>   plot_beta_hist(ax, 50, 12)<br>   plot_beta_hist(ax, 6, 55)<br>   ax.set_title(“‘bmh’ style sheet”)</p><p>   plt.show()<br>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">   `Shift + Enter` 执行 **Cell**，即可看到绘制出的图像。</div><div class="line"></div><div class="line">2. [whats_new_99_mplot3d](http://matplotlib.org/examples/pyplots/whats_new_99_mplot3d.html)：</div><div class="line"></div><div class="line">   示例代码：/whats_new_99_mplot3d.py</div><div class="line"></div><div class="line">   ```python</div><div class="line">   import random</div><div class="line"></div><div class="line">   import numpy as np</div><div class="line">   import matplotlib.pyplot as plt</div><div class="line">   from matplotlib import cm</div><div class="line">   from mpl_toolkits.mplot3d import Axes3D</div><div class="line"></div><div class="line">   X = np.arange(-5, 5, 0.25)</div><div class="line">   Y = np.arange(-5, 5, 0.25)</div><div class="line">   X, Y = np.meshgrid(X, Y)</div><div class="line">   R = np.sqrt(X**2 + Y**2)</div><div class="line">   Z = np.sin(R)</div><div class="line"></div><div class="line">   fig = plt.figure()</div><div class="line">   ax = Axes3D(fig)</div><div class="line">   ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap=cm.viridis)</div><div class="line"></div><div class="line">   plt.show()</div></pre></td></tr></table></figure></p><h3 id="动手试试"><a href="#动手试试" class="headerlink" title="动手试试"></a>动手试试</h3><p>最后，我们来尝试回执一个<strong>二次函数</strong>图像，可以参考下面代码：</p><p><strong>示例代码</strong>：/my.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line">x = np.arange(<span class="number">-10</span>,<span class="number">11</span>)</div><div class="line">y = x**<span class="number">2</span></div><div class="line">plt.plot(x,y)</div><div class="line">plt.show();</div></pre></td></tr></table></figure><h2 id="搭配-TensorFlow-可选"><a href="#搭配-TensorFlow-可选" class="headerlink" title="搭配 TensorFlow (可选)"></a>搭配 TensorFlow (可选)</h2><p><strong>TensorFlow</strong>是一个采用数据流图，用于数值计算的开源软件库。他灵活的架构让你可以在多平台上展开计算，例如台式计算机中一个或多个CPU(或GPU),服务器，移动设备等等。</p><p><strong>TensorFlow</strong> 最初由 Google 大脑小组的研究员和工程师们开发出来，用于机器学习和深度神经网络方面的研究，但这个系统的通用性使其也可广泛用于其他计算领域。</p><h3 id="安装-TensorFlow"><a href="#安装-TensorFlow" class="headerlink" title="安装 TensorFlow"></a>安装 TensorFlow</h3><p>我们使用 pip 安装相关依赖及 Tensorflow</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pip install protobuf</div><div class="line">pip install tensorflow</div></pre></td></tr></table></figure><h3 id="测试-TensorFlow"><a href="#测试-TensorFlow" class="headerlink" title="测试 TensorFlow"></a>测试 TensorFlow</h3><p>关于 TensorFlow 的使用请移步其<a href="https://cloud.tencent.com/" target="_blank" rel="external">官网</a>，这里只是测试其在 Jupiter 中是否可用。</p><p><strong>打开 tensorflow.ipynb 编辑界面。</strong></p><p>在 <strong>Cell</strong> 中加入以下代码（整理自<a href="https://www.tensorflow.org/get_started/mnist/beginners" target="_blank" rel="external">官网 MNIST 教程</a>）：</p><h5 id="示例代码：-tensorflow-py"><a href="#示例代码：-tensorflow-py" class="headerlink" title="示例代码：/tensorflow.py"></a>示例代码：/tensorflow.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> tensorflow.examples.tutorials.mnist <span class="keyword">import</span> input_data</div><div class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</div><div class="line"></div><div class="line"><span class="comment"># The MNIST Data</span></div><div class="line">mnist = input_data.read_data_sets(<span class="string">"MNIST_data/"</span>, one_hot=<span class="keyword">True</span>)</div><div class="line"></div><div class="line"><span class="comment"># Regression</span></div><div class="line">x = tf.placeholder(tf.float32, [<span class="keyword">None</span>, <span class="number">784</span>])</div><div class="line">W = tf.Variable(tf.zeros([<span class="number">784</span>, <span class="number">10</span>]))</div><div class="line">b = tf.Variable(tf.zeros([<span class="number">10</span>]))</div><div class="line">y = tf.nn.softmax(tf.matmul(x, W) + b)</div><div class="line"></div><div class="line"><span class="comment"># Training</span></div><div class="line">y_ = tf.placeholder(tf.float32, [<span class="keyword">None</span>, <span class="number">10</span>])</div><div class="line">cross_entropy = tf.reduce_mean(-tf.reduce_sum(y_ * tf.log(y), reduction_indices=[<span class="number">1</span>]))</div><div class="line">train_step = tf.train.GradientDescentOptimizer(<span class="number">0.05</span>).minimize(cross_entropy)</div><div class="line"></div><div class="line">sess = tf.InteractiveSession()</div><div class="line"></div><div class="line">tf.global_variables_initializer().run()</div><div class="line"></div><div class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">1000</span>):</div><div class="line">    batch_xs, batch_ys = mnist.train.next_batch(<span class="number">100</span>)</div><div class="line">    sess.run(train_step, feed_dict=&#123;x: batch_xs, y_: batch_ys&#125;)</div><div class="line"></div><div class="line"><span class="comment"># Evaluating</span></div><div class="line">correct_prediction = tf.equal(tf.argmax(y,<span class="number">1</span>), tf.argmax(y_,<span class="number">1</span>))</div><div class="line">accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))</div><div class="line"></div><div class="line">print(sess.run(accuracy, feed_dict=&#123;x: mnist.test.images, y_: mnist.test.labels&#125;))</div></pre></td></tr></table></figure><p>按下 <code>Shift + Enter</code>，学习过程结束后可以看到输出了准确率（92% 左右）。</p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>我们已经成功搭建起了一个 Jupyter Notebook 环境。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="http://www.cnblogs.com/moxiaoan/p/5683743.html" target="_blank" rel="external">CentOS7使用firewalld打开关闭防火墙与端口</a></p><p><a href="http://matplotlib.org/" target="_blank" rel="external">http://matplotlib.org/</a></p><p><a href="https://www.liaoxuefeng.com/" target="_blank" rel="external">https://www.liaoxuefeng.com/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装-Juptyer-Notebook&quot;&gt;&lt;a href=&quot;#安装-Juptyer-Notebook&quot; class=&quot;headerlink&quot; title=&quot;安装 Juptyer Notebook&quot;&gt;&lt;/a&gt;安装 Juptyer Notebook&lt;/h2&gt;&lt;h3 id=&quot;Jupyter-Notebook-简介&quot;&gt;&lt;a href=&quot;#Jupyter-Notebook-简介&quot; class=&quot;headerlink&quot; title=&quot;Jupyter Notebook 简介&quot;&gt;&lt;/a&gt;Jupyter Notebook 简介&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;jupter Notebook&lt;/strong&gt; 是一个开源的 Web 应用程序，可以用来创建和共享包含动态代码、方程式、可视化及解释性文本的文档。&lt;/p&gt;
&lt;p&gt;其应用包括：数据整理与转换、数值模拟、统计建模、机器学习等等。&lt;/p&gt;
&lt;p&gt;更多信息请见 &lt;a href=&quot;http://jupyter.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
      <category term="Jupyter" scheme="http://qzdotnet.github.io/tags/Jupyter/"/>
    
  </entry>
  
  <entry>
    <title>搭建  Nginx 静态网站</title>
    <link href="http://qzdotnet.github.io/2017/10/23/%E6%90%AD%E5%BB%BA-Nginx-%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/"/>
    <id>http://qzdotnet.github.io/2017/10/23/搭建-Nginx-静态网站/</id>
    <published>2017-10-23T06:12:16.000Z</published>
    <updated>2017-10-23T06:29:56.196Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h2><p>搭建静态网站，首先需要部署环境。下面的步骤，江告诉大家如何在服务器上通过 Nginx 部署 HTTP 静态服务。</p><p>在 CentOS 上，可直接使用 <code>yum</code> 来安装 Nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install nginx -y</div></pre></td></tr></table></figure><a id="more"></a><p>安装完成后，使用 <code>nginx</code> 命令启动 Nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx</div></pre></td></tr></table></figure><p> 此时，访问 <a href="http://127.0.0.1" target="_blank" rel="external">http://127.0.0.1</a> 可以看到 Nginx 的测试页面</p><h2 id="配置静态服务器访问路径"><a href="#配置静态服务器访问路径" class="headerlink" title="配置静态服务器访问路径"></a>配置静态服务器访问路径</h2><p>外网用户访问服务器的 Web 服务由 Nginx 提供， Nginx 需要配置静态资源的路径才能通过 url 正确访问到服务器上的静态资源。</p><p>打开 Nginx 默认配置文件 /etc/nginx/nginx.conf，修改 Nginx 配置，将默认的 <code>root /usr/share/nginx/html;</code> 修改为: <code>root /data/www;</code>，如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">user nginx;</div><div class="line">worker_processes auto;</div><div class="line">error_log /var/log/nginx/error.log;</div><div class="line">pid /run/nginx.pid;</div><div class="line"></div><div class="line">include /usr/share/nginx/modules/*.conf;</div><div class="line"></div><div class="line">events &#123;</div><div class="line">    worker_connections 1024;</div><div class="line">&#125;</div><div class="line"></div><div class="line">http &#123;</div><div class="line">    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</div><div class="line">                      '$status $body_bytes_sent "$http_referer" '</div><div class="line">                      '"$http_user_agent" "$http_x_forwarded_for"';</div><div class="line"></div><div class="line">    access_log  /var/log/nginx/access.log  main;</div><div class="line"></div><div class="line">    sendfile            on;</div><div class="line">    tcp_nopush          on;</div><div class="line">    tcp_nodelay         on;</div><div class="line">    keepalive_timeout   65;</div><div class="line">    types_hash_max_size 2048;</div><div class="line"></div><div class="line">    include             /etc/nginx/mime.types;</div><div class="line">    default_type        application/octet-stream;</div><div class="line"></div><div class="line">    include /etc/nginx/conf.d/*.conf;</div><div class="line"></div><div class="line">    server &#123;</div><div class="line">        listen       80 default_server;</div><div class="line">        listen       [::]:80 default_server;</div><div class="line">        server_name  _;</div><div class="line">        root         /data/www;</div><div class="line"></div><div class="line">        include /etc/nginx/default.d/*.conf;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        error_page 404 /404.html;</div><div class="line">            location = /40x.html &#123;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        error_page 500 502 503 504 /50x.html;</div><div class="line">            location = /50x.html &#123;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>配置文件将 <a href="">/data/www/static</a> 作为所有静态资源请求的根路径，如访问: <code>http://127.0.0.1/index.js</code>，将会去 <a href="">/data/www/static/</a> 目录下去查找 <code>index.js</code>。现在我们需要重启 Nginx 让新的配置生效：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx -s reload</div></pre></td></tr></table></figure><p>创建第一个静态文件</p><p>在  /data/www 目录下创建我们第一个静态文件 index.html</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">touch /data/www/index.html</div></pre></td></tr></table></figure><p>内容如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>第一个静态文件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">Hello world！</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><p>现在访问 <a href="http://127.0.0.1/index.html" target="_blank" rel="external">http://127.0.0.1/index.html</a> 应该可以看到页面输出 Hello world!</p><p>到此，一个基于 Nginx 的静态服务器就搭建完成了，现在所有放在 <a href="">/data/www</a> 目录下的的静态资源都可以直接通过域名访问。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装-Nginx&quot;&gt;&lt;a href=&quot;#安装-Nginx&quot; class=&quot;headerlink&quot; title=&quot;安装 Nginx&quot;&gt;&lt;/a&gt;安装 Nginx&lt;/h2&gt;&lt;p&gt;搭建静态网站，首先需要部署环境。下面的步骤，江告诉大家如何在服务器上通过 Nginx 部署 HTTP 静态服务。&lt;/p&gt;
&lt;p&gt;在 CentOS 上，可直接使用 &lt;code&gt;yum&lt;/code&gt; 来安装 Nginx&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yum install nginx -y&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
      <category term="Nginx" scheme="http://qzdotnet.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Linux 系统常用命令</title>
    <link href="http://qzdotnet.github.io/2017/10/20/Linux-%E7%B3%BB%E7%BB%9F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://qzdotnet.github.io/2017/10/20/Linux-系统常用命令/</id>
    <published>2017-10-20T00:39:22.000Z</published>
    <updated>2017-10-28T07:37:47.384Z</updated>
    
    <content type="html"><![CDATA[<h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h2><p>命令格式： 命令 [-选项] [参数]<br>例： ls -la /etc<br>说明</p><ul><li>个别命令使用不遵循此格式</li><li>当有多个选项时，可以写在一起</li><li>简化选项与完整选项 -a  等于  –all<a id="more"></a></li></ul><h2 id="文件处理命令"><a href="#文件处理命令" class="headerlink" title="文件处理命令"></a>文件处理命令</h2><h3 id="目录处理命令"><a href="#目录处理命令" class="headerlink" title="目录处理命令"></a>目录处理命令</h3><h4 id="ls-查看目录"><a href="#ls-查看目录" class="headerlink" title="ls 查看目录"></a><strong>ls</strong> 查看目录</h4><p>英文原意：list<br>命令所在路径：/bin/ls<br>执行权限： 所有用户<br>功能描述：显示目录文件<br>语法： ls [-ald] [文件或目录]</p><ul><li>-a 显示所有的文件，包括隐藏文件，隐藏文件以.开头</li><li>-l 详细信息显示</li><li>-d 查看目录属性</li><li>-h 人性化选项，可以显示</li><li>-i 查询文件的 i 节点，可以理解为文件的ID或者索引号码<br>文件属性主要包含7个方面的内容：[权限][索引[ 所有者][用户组][\文件大小][最后修改时间][名称],权限描述Linux 将文件的访问属性分为三类，所有者(u)、所属组(g)、其他人(o)。<br>-rw-r–r–</li><li>第一个字符 -  代表文件类型 （- 二进制文件 d 目录 l 软连接文件）</li><li>rw- r– r–<ul><li>rw- 代表 u 所有者的权限</li><li>r– 代表 g 用户组的权限</li><li>r– 代表 o 其他用户的权限<br>r 代表具有读权限 w 代表具有写权限 x代表具有执行的权限（命令和脚本有意义）</li></ul></li></ul><h4 id="mkdir-目录创建命令"><a href="#mkdir-目录创建命令" class="headerlink" title="mkdir 目录创建命令"></a>mkdir 目录创建命令</h4><p>英文原意： <em>m</em>a<em>k</em>e <em>dir</em>ectories<br>所在路径：/bin/mkdir<br>执行权限：所有用户<br>语法 ： mkdir [-p] [目录名称]</p><ul><li>-p 递归创建</li><li>-m 或 –mode 建立目录同时设置目录权限<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mkdir -p /tmp/china/quzheng</div><div class="line"><span class="meta">#</span><span class="bash"> 可以使用 mkdir 一次创建多个文件</span></div><div class="line">mkdir /tmp/china/quzheng / /tmp/china/quzheng2 </div><div class="line"><span class="meta">#</span><span class="bash"> 创建目录，所有者有读、写和执行权限，其他人无权访问</span></div><div class="line">mkdir -p-m 700 /tmp/quzheng</div></pre></td></tr></table></figure></li></ul><h4 id="cd-移动目录"><a href="#cd-移动目录" class="headerlink" title="cd 移动目录"></a>cd 移动目录</h4><p>英文原意： <em>c</em>hange <em>d</em>irectory<br>执行权限：所有用户<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">进入用户主目录；</span></div><div class="line">cd </div><div class="line"><span class="meta">#</span><span class="bash">进入用户主目录；</span></div><div class="line">cd ~  </div><div class="line"><span class="meta">#</span><span class="bash">返回进入此目录之前所在的目录； </span></div><div class="line">cd - </div><div class="line"><span class="meta">#</span><span class="bash">返回上级目录（若当前目录为“/“，则执行完后还在“/<span class="string">"；"</span>..<span class="string">"为上级目录的意思）；</span></span></div><div class="line">cd ..  </div><div class="line"><span class="meta">#</span><span class="bash">返回上两级目录；</span></div><div class="line">cd ../..  </div><div class="line"><span class="meta">#</span><span class="bash"> 把上个命令的参数作为<span class="built_in">cd</span>参数使用。</span></div><div class="line">cd !$</div></pre></td></tr></table></figure></p><h4 id="pwd-显示当前目录"><a href="#pwd-显示当前目录" class="headerlink" title="pwd 显示当前目录"></a>pwd 显示当前目录</h4><p>英文原意： <em>p</em>rint <em>w</em>orking <em>d</em>irectory<br>命令所在路径：/bin/<br>执行权限：所有用户<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pwd</div></pre></td></tr></table></figure></p><h4 id="rmdir-删除空目录"><a href="#rmdir-删除空目录" class="headerlink" title="rmdir 删除空目录"></a>rmdir 删除空目录</h4><p>英文原意： <em>r</em>e<em>m</em>ove empty <em>dir</em>ectory<br>命令所在路径：/bin/<br>执行权限：所有用户<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rmdir /tmp/quzheng</div></pre></td></tr></table></figure></p><h4 id="cp-复制文件或目录"><a href="#cp-复制文件或目录" class="headerlink" title="cp 复制文件或目录"></a>cp 复制文件或目录</h4><p>英文原意： <em>c</em>o<em>p</em>y<br>命令所在路径：/bin/<br>语法：cp -rp [原文件或目录] [目标目录]</p><ul><li>-r 复制目录</li><li>-p 保留文件属性<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">复制目录</span></div><div class="line">cp -r /tmp/quzheng /bin/</div><div class="line"><span class="meta">#</span><span class="bash">复制文件</span></div><div class="line">cp /etc/grub.conf /tmp</div><div class="line"><span class="meta">#</span><span class="bash">同时复制多个文件</span></div><div class="line">cp /root/install.log /root/install.log.syslog /tmp</div><div class="line"><span class="meta">#</span><span class="bash">复制同时修改名称</span></div><div class="line">cp /tmp/quzheng</div></pre></td></tr></table></figure></li></ul><h4 id="mv-剪切文件改名"><a href="#mv-剪切文件改名" class="headerlink" title="mv 剪切文件改名"></a>mv 剪切文件改名</h4><p>英文原意： <em>m</em>o<em>v</em>e<br>命令所在路径：/bin/<br>语法： mv [源文件或目录] [目标目录]<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mv /tmp/quzheng /root</div><div class="line"><span class="meta">#</span><span class="bash"> 剪切改名</span></div><div class="line">mv /tmp/quzheng /root/quzheng2</div><div class="line"><span class="meta">#</span><span class="bash"> 当前目录改名</span></div><div class="line">mv /tmp/quzheng /tmp/quzheng3</div></pre></td></tr></table></figure></p><h4 id="rm-删除文件和目录"><a href="#rm-删除文件和目录" class="headerlink" title="rm 删除文件和目录"></a>rm 删除文件和目录</h4><p>英文原意： <em>r</em>e<em>m</em>ove<br>命令所在路径：/bin/<br>语法： rm -rf  [文件或目录]</p><ul><li>-r 删除目录</li><li>-f 强制删除<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> 删除文件</span></div><div class="line">rm /tmp/confg.conf</div><div class="line"><span class="meta">#</span><span class="bash"> 删除目录</span></div><div class="line">rm -rf /tmp/quzheng2</div></pre></td></tr></table></figure></li></ul><h3 id="文件处理命令-1"><a href="#文件处理命令-1" class="headerlink" title="文件处理命令"></a>文件处理命令</h3><h4 id="touch-创建文件命令"><a href="#touch-创建文件命令" class="headerlink" title="touch 创建文件命令"></a>touch 创建文件命令</h4><p>命令所在路径：/bin/</p><p>语法： touch [文件名]</p><p>功能：有两个功能：一是用于把已存在文件的时间标签更新为系统当前的时间（默认方式），它们的数据将原封不动地保留下来；二是用来创建新的空文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">在当前目录下面创建一个quzheng的文件名</span></div><div class="line">touch quzheng</div></pre></td></tr></table></figure><blockquote><p>如果想创建文件需要有空格的时候，必须使用双引号将文件引起来，在 Linux 里面除了代表根分区的 / 其他的符号都可以作为文件名</p></blockquote><h4 id="cat-查看文件内容"><a href="#cat-查看文件内容" class="headerlink" title="cat 查看文件内容"></a>cat 查看文件内容</h4><p>命令所在路径：/bin/</p><p>语法：cat [文件名][-nbs]</p><ul><li>-n或-number：有1开始对所有输出的行数编号</li><li>-b或–number-nonblank：和-n相似，只不过对于空白行不编号；</li><li>-s或–squeeze-blank：当遇到有连续两行以上的空白行，就代换为一行的空白行；</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat quzheng</div></pre></td></tr></table></figure><h4 id="tac-倒序显示文件内容"><a href="#tac-倒序显示文件内容" class="headerlink" title="tac 倒序显示文件内容"></a>tac 倒序显示文件内容</h4><p>命令所在路径：/bin/</p><p>语法：cat [文件名][-nbs]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tac quzheng</div></pre></td></tr></table></figure><h4 id="more-分页显示文件内容"><a href="#more-分页显示文件内容" class="headerlink" title="more  分页显示文件内容"></a>more  分页显示文件内容</h4><p>命令所在路径: /bin</p><p>语法：more [文件名]</p><ul><li>f 或(空格) 翻页</li><li>Enter 换行</li><li>q 或者 exit 退出</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">more /etc/services</div></pre></td></tr></table></figure><h4 id="less-分页显示文件内容（可向上翻页）"><a href="#less-分页显示文件内容（可向上翻页）" class="headerlink" title="less 分页显示文件内容（可向上翻页）"></a>less 分页显示文件内容（可向上翻页）</h4><p>命令所在路径： /usr/bin</p><p>语法： less [文件名]</p><ul><li>f 或(空格) 翻页</li><li>Enter 换行</li><li>q 或者 exit 退出</li><li>PgUp 上翻页</li><li>上箭头 向上一行</li><li>/关键字 查找 如果当前内容没有刻意点击 n</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">less /etc/services</div></pre></td></tr></table></figure><h4 id="head-显示文件前几行"><a href="#head-显示文件前几行" class="headerlink" title="head 显示文件前几行"></a>head 显示文件前几行</h4><p>命令所在路径：/usr/</p><p>语法： head   [-n] [文件名]</p><ul><li>-n 制定前多少行，默认前10行</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">head -n 20 /etc/servies</div></pre></td></tr></table></figure><h4 id="tail-显示文件末尾的几行"><a href="#tail-显示文件末尾的几行" class="headerlink" title="tail 显示文件末尾的几行"></a>tail 显示文件末尾的几行</h4><p>命令所在路径：/usr/</p><p> 语法： tail [-nf] [文件名]</p><ul><li>-n 显示最后多少行，默认后10行</li><li>f 动态显示新增加的内容</li></ul><h3 id="链接命令"><a href="#链接命令" class="headerlink" title="链接命令"></a>链接命令</h3><h4 id="ln-生成连接文件"><a href="#ln-生成连接文件" class="headerlink" title="ln 生成连接文件"></a>ln 生成连接文件</h4><p>英文原意： link</p><p>命令所在路径：/bin/</p><p>语法： ln -s\ [源文件][目标文件]</p><ul><li>-s 创建软链接</li></ul><p>软连接的特征：类似Windows 的快捷方式</p><ol><li>权限：lrwxrwxrwx   l 代表软链接</li><li>文件比较小</li><li>/tmp/issu.soft-&gt;/etc/issue</li></ol><p>硬链接的特征：</p><ol><li>复制cp - p + 同步更新</li><li>源文件删除，硬链接还可以访问</li><li>通过 i 节点识别</li><li>不能跨分区</li><li>不能针对目录使用</li></ol><h2 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h2><h3 id="chmod-权限管理命令"><a href="#chmod-权限管理命令" class="headerlink" title="chmod 权限管理命令"></a>chmod 权限管理命令</h3><p>英文原意： change the permissions mode of a file</p><p>命令所在路名: /bin</p><p>语法：</p><p>chmod [{ugoa} {+-=} {rwx},] [文件或目录] [mode=421] [文件或目录] </p><ul><li>-R 地递归修改</li></ul><p>权限的数字表示</p><ul><li>-r —-4</li><li>-w —2</li><li>-x  —1</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">chmod u+x,g+w /tmp/issue.bak</div><div class="line">chmod 572 /tmp/issue.bak</div></pre></td></tr></table></figure><table><thead><tr><th>权限</th><th>含义</th><th>文件</th><th>目录</th></tr></thead><tbody><tr><td>r</td><td>读权限</td><td>可以查看文件内容</td><td>可以列出目录中的内容</td></tr><tr><td>w</td><td>写权限</td><td>可以修改文件</td><td>可以在目录中创建、删除文件</td></tr><tr><td>x</td><td>执行权限</td><td>可以执行文件</td><td>目录执行</td></tr></tbody></table><blockquote><p>只有文件的创建者和管理员可以改变文件的权限</p></blockquote><h3 id="chown-改变文件或目录的所有者"><a href="#chown-改变文件或目录的所有者" class="headerlink" title="chown 改变文件或目录的所有者"></a>chown 改变文件或目录的所有者</h3><p>命令所在路径： /bin</p><p>英文原意： change file ownership</p><p>语法： chown [用户][文件或目录] </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chown quzheng /tmp/issue.bak</div></pre></td></tr></table></figure><blockquote><p>只有管理员 root 可以操作该命令</p></blockquote><p> ###chgrp 改变文件或目录的所属组</p><p>英文原意：</p><p>命令所在路径：/bin</p><p>语法： charp [用户组] [文件或目录] </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chgrp dotnet /tmp/issue.bak</div></pre></td></tr></table></figure><blockquote><p>一个用户可以属于多个组，缺省组是他自己的名字</p></blockquote><h3 id="umask-显示、设置文件的缺省权限"><a href="#umask-显示、设置文件的缺省权限" class="headerlink" title="umask 显示、设置文件的缺省权限"></a>umask 显示、设置文件的缺省权限</h3><p>umask [-S][权限值]</p><ul><li>-S 以rwx 形式显示新建文件缺省权限</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> 已 </span></div><div class="line">umask -S</div><div class="line"><span class="meta">#</span><span class="bash"> 已掩码的形式显示权限，022,777-022 = 755</span></div><div class="line">umask</div><div class="line"><span class="meta">#</span><span class="bash"> 设置文件或文件夹的默认权限</span></div><div class="line">umask 023</div></pre></td></tr></table></figure><blockquote><p>缺省创建文件是不具有可执行权限的</p></blockquote><h2 id="文件搜索命令"><a href="#文件搜索命令" class="headerlink" title="文件搜索命令"></a>文件搜索命令</h2><h3 id="find-文件搜索命令"><a href="#find-文件搜索命令" class="headerlink" title="find 文件搜索命令"></a>find 文件搜索命令</h3><p>命令所在路径 :/bin</p><p>语法 : find [搜索范围] [匹配条件]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> 在目录/etc 中查找文件 init</span></div><div class="line">find /etc -name init</div><div class="line"><span class="meta">#</span><span class="bash"> 在目录/etc 中查找 包含 init 的文件</span></div><div class="line"><span class="meta">#</span><span class="bash"> * 匹配任意字符 ？ 匹配单个字符</span></div><div class="line">find /etc -name *init*</div><div class="line"><span class="meta">#</span><span class="bash"> 不区分大小写 -iname</span></div><div class="line">find /etc -iname  init</div><div class="line"><span class="meta">#</span><span class="bash"> 根据文件大小来查找 -size [+-=] 数据块大小 </span></div><div class="line"><span class="meta">#</span><span class="bash"> linux 数据块大小是 512 字节</span></div><div class="line">find /etc -size +1024</div><div class="line">find /etc -size -1024</div><div class="line"><span class="meta">#</span><span class="bash"> -user 所有者</span></div><div class="line">find /etc -usr quzheng</div><div class="line"><span class="meta">#</span><span class="bash"> -group 所属组</span></div><div class="line">find /etc -group quzheng</div><div class="line"><span class="meta">#</span><span class="bash"> 根据时间访问</span></div><div class="line"><span class="meta">#</span><span class="bash"> -amin 访问时间 [+-=] 时间</span></div><div class="line"><span class="meta">#</span><span class="bash"> -cmin 文件属性 change [+-=] 时间</span></div><div class="line"><span class="meta">#</span><span class="bash"> -mmin 文件内容 modify [+-=] 时间</span></div><div class="line">find /etc -cmin -5</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># -a 表示 and 两个条件都满足</span></span></div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># -o 表示 or 任意满足一个</span></span></div><div class="line">find /etc -size +163840 -a -size -204800</div><div class="line">find /etc -size +163840 -0 -size -204800</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># -exec/-ok 对搜索结果执行操作</span></span></div><div class="line">find /etc -name inittab -exec ls -l &#123;&#125; \;</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># -type 根据文件类型查找 f:文件 d:目录 l：软连接</span></span></div><div class="line">find /etc -type f </div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment"># -inum 根据 i 节点查找</span></span></div></pre></td></tr></table></figure><h3 id="locate-文件搜索命令"><a href="#locate-文件搜索命令" class="headerlink" title="locate 文件搜索命令"></a>locate 文件搜索命令</h3><p>命令所在路径：/usr/bin</p><p>语法：locate 文件名 [-i]</p><ul><li>-i 搜索文件的时候不考虑大小写</li></ul><blockquote><p>在文件资料库搜索文件，优点就是快速，缺点是有可能没有收录到资料库。</p><p>tmp文件夹里面的文件是找不到的</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">locate quzheng</div><div class="line"><span class="meta">#</span><span class="bash">升级资料库</span></div><div class="line">updatedb</div></pre></td></tr></table></figure><h3 id="which-文件命令所在目录"><a href="#which-文件命令所在目录" class="headerlink" title="which 文件命令所在目录"></a>which 文件命令所在目录</h3><p>命令所在路径：/usr/bin</p><p>语法：which 命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">which ls</div></pre></td></tr></table></figure><h3 id="whereis-文件命令所在目录及帮助文档路径"><a href="#whereis-文件命令所在目录及帮助文档路径" class="headerlink" title="whereis 文件命令所在目录及帮助文档路径"></a>whereis 文件命令所在目录及帮助文档路径</h3><p>命令所在路径：/usr/bin</p><p>语法：whereis 命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">whereis ls</div></pre></td></tr></table></figure><h3 id="grep-在文件中搜索字符匹配的行并输出"><a href="#grep-在文件中搜索字符匹配的行并输出" class="headerlink" title="grep 在文件中搜索字符匹配的行并输出"></a>grep 在文件中搜索字符匹配的行并输出</h3><p>命令所在路径：/usr/bin</p><p>语法：grep [-i-v] [关键词] [文件]</p><ul><li>-i 不区分大小写</li><li>-v 排除制定字符串</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">grep multiuser /etc/inittab</div><div class="line"></div><div class="line">grep -v ^# /etc/inittab</div></pre></td></tr></table></figure><h2 id="帮助命令"><a href="#帮助命令" class="headerlink" title="帮助命令"></a>帮助命令</h2><h3 id="man-获取命令的帮助信息"><a href="#man-获取命令的帮助信息" class="headerlink" title="man 获取命令的帮助信息"></a>man 获取命令的帮助信息</h3><p>英文原意： manual</p><p>所在路径：/usr/bin/man</p><p>语法： man [命令或配置文件]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">man ls </div><div class="line">man services</div><div class="line">man passwd</div><div class="line">man 5 passwd</div></pre></td></tr></table></figure><blockquote><p>帮助文件 1 代表命令 5是配置文件</p></blockquote><h3 id="whatis-得到命令的基本信息"><a href="#whatis-得到命令的基本信息" class="headerlink" title="whatis 得到命令的基本信息"></a>whatis 得到命令的基本信息</h3><p>语法 whatis [命令]</p><h3 id="apropos-得到配置文件的简短信息"><a href="#apropos-得到配置文件的简短信息" class="headerlink" title="apropos 得到配置文件的简短信息"></a>apropos 得到配置文件的简短信息</h3><p>语法 apropos [配置文件]</p><h3 id="–help-查看命令的参数"><a href="#–help-查看命令的参数" class="headerlink" title="–help 查看命令的参数"></a>–help 查看命令的参数</h3><p>命令 –help</p><h3 id="info-获取命令的帮助"><a href="#info-获取命令的帮助" class="headerlink" title="info 获取命令的帮助"></a>info 获取命令的帮助</h3><h3 id="help-获得Shell内置命令帮助"><a href="#help-获得Shell内置命令帮助" class="headerlink" title="help 获得Shell内置命令帮助"></a>help 获得Shell内置命令帮助</h3><h2 id="用户管理命令"><a href="#用户管理命令" class="headerlink" title="用户管理命令"></a>用户管理命令</h2><h3 id="useradd-添加新用户"><a href="#useradd-添加新用户" class="headerlink" title="useradd 添加新用户"></a>useradd 添加新用户</h3><p>命令所在路径 : /usr/sbin/</p><p>语法: useradd 用户名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">useradd quzheng</div></pre></td></tr></table></figure><h3 id="passwd-设置用户密码"><a href="#passwd-设置用户密码" class="headerlink" title="passwd 设置用户密码"></a>passwd 设置用户密码</h3><p>命令所在路径 ：/usr/bin</p><p>语法： passwd 用户名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">passwd quzheng</div><div class="line"><span class="meta">#</span><span class="bash">输入两次密码</span></div></pre></td></tr></table></figure><blockquote><p>密码复杂度，大小写字母+数字，普通用户只能改自己的密码，管理员可以该所有人的密码</p></blockquote><h2 id="who-查看登录用户信息"><a href="#who-查看登录用户信息" class="headerlink" title="who 查看登录用户信息"></a>who 查看登录用户信息</h2><p>语法：who</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">who</div><div class="line"><span class="meta">#</span><span class="bash"><span class="comment">#结果</span></span></div><div class="line">用户名   登录终端      登录时间</div><div class="line">root     tty1         2017-10-27 19:06</div><div class="line">root     pts/1        2017-10-28 09:26 (192.168.111.1)</div><div class="line"><span class="meta">#</span><span class="bash"> tty 本地终端  pts 远程终端</span></div></pre></td></tr></table></figure><h2 id="w-查看详细的登录用户信息"><a href="#w-查看详细的登录用户信息" class="headerlink" title="w 查看详细的登录用户信息"></a>w 查看详细的登录用户信息</h2><p>语法：w</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">w</div><div class="line"><span class="meta">#</span><span class="bash"> </span></div><div class="line">系统运行时间                  用户数    负载均衡CPU     1    2    5</div><div class="line">10:23:53 up 2 days,  2:46,  2 users,  load average: 0.00, 0.01, 0.05</div><div class="line">                                           空闲时间            上一次执行的命令</div><div class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</div><div class="line">root     tty1                      五19   15:17m  0.08s  0.08s -bash</div><div class="line">root     pts/1    192.168.111.1    09:26    1.00s  1.51s  0.42s w</div><div class="line">[root@localhost ~]# uptime</div><div class="line"> 10:24:18 up 2 days,  2:47,  2 users,  load average: 0.00, 0.01, 0.05</div></pre></td></tr></table></figure><h2 id="压缩解压命令"><a href="#压缩解压命令" class="headerlink" title="压缩解压命令"></a>压缩解压命令</h2><h3 id="压缩格式"><a href="#压缩格式" class="headerlink" title="压缩格式"></a>压缩格式</h3><ul><li>​</li></ul><h3 id="gzip-gunzip-压缩解压命令"><a href="#gzip-gunzip-压缩解压命令" class="headerlink" title="gzip gunzip 压缩解压命令"></a>gzip gunzip 压缩解压命令</h3><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">gzip 文件名 # 压缩</div><div class="line"></div><div class="line">gzip -d 解压文件名 #</div><div class="line"></div><div class="line">gunzip  解压文件名</div></pre></td></tr></table></figure><blockquote><p>gzip 压缩和解压缩都不保留源文件</p></blockquote><h3 id="tar-打包压缩命令"><a href="#tar-打包压缩命令" class="headerlink" title="tar 打包压缩命令"></a>tar 打包压缩命令</h3><p>语法：tar [-cxtzjvfpPN] 压缩后的文件名 </p><ul><li>-c 打包</li><li>-v 显示详细信息</li><li>-x ：解开一个压缩文件的参数指令</li><li>-f 指定文件名</li><li>-z 打包同时gzip压缩  </li><li>-j 打包同时以 bzip2 的格式压缩</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">tar -cvf /tmp/etc.tar /etc #仅打包，不压缩！</div><div class="line">tar -zcvf /tmp/etc.tar.gz /etc #打包后，以 gzip 压缩</div><div class="line">tar -jcvf /tmp/etc.tar.bz2 /etc #打包后，以 bzip2 压缩</div><div class="line">tar -zxvf /tmp/etc.tar.gz /etc #解压缩 .tar.gz</div><div class="line">tar -jxvf /tmp/etc.tar.bz2 /etc</div></pre></td></tr></table></figure><h3 id="zip-unzip-压缩文件或目录"><a href="#zip-unzip-压缩文件或目录" class="headerlink" title="zip unzip 压缩文件或目录"></a>zip unzip 压缩文件或目录</h3><p>语法： zip 选项[-r] [压缩后的文件名] [文件或目录]</p><ul><li>-r 压缩目录</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">zip quzheng.zip quzheng # 压缩文件</div><div class="line">zip quzheng2.zip /quzheng2 # 压缩目录</div></pre></td></tr></table></figure><h3 id="bzip2-bunzip2-压缩解压缩"><a href="#bzip2-bunzip2-压缩解压缩" class="headerlink" title="bzip2 bunzip2 压缩解压缩"></a>bzip2 bunzip2 压缩解压缩</h3><p>语法: bzip2 -k [压缩后的文件名] [压缩文件名]</p><ul><li>-k 产生压缩文件后保留原文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">bzip2 -k boduo.bz2 boduo</div><div class="line">bunzip -k boduo.bz2</div></pre></td></tr></table></figure><h2 id="网络命令"><a href="#网络命令" class="headerlink" title="网络命令"></a>网络命令</h2><h3 id="write-给用户发信息，以-Ctrl-D-保存结束"><a href="#write-给用户发信息，以-Ctrl-D-保存结束" class="headerlink" title="write 给用户发信息，以 Ctrl+D 保存结束"></a>write 给用户发信息，以 <code>Ctrl+D</code> 保存结束</h3><p>语法： write [用户名]</p><blockquote><p>进入输入模式后退格 Ctrl + Backspace Ctrl+D 发送信息</p></blockquote><h3 id="Wall-给所有用户发送信息"><a href="#Wall-给所有用户发送信息" class="headerlink" title="Wall 给所有用户发送信息"></a>Wall 给所有用户发送信息</h3><p>语法： wall [信息]</p><h3 id="ping-测试网络连通性"><a href="#ping-测试网络连通性" class="headerlink" title="ping 测试网络连通性"></a>ping 测试网络连通性</h3><p>语法: ping 选项 IP地址</p><h3 id="ifconfig-查看本机网络"><a href="#ifconfig-查看本机网络" class="headerlink" title="ifconfig 查看本机网络"></a>ifconfig 查看本机网络</h3><h3 id="mail-查看发送电子邮件"><a href="#mail-查看发送电子邮件" class="headerlink" title="mail 查看发送电子邮件"></a>mail 查看发送电子邮件</h3><p>语法： mail [用户名] </p><h3 id="Last-查看用户登录重启的日志"><a href="#Last-查看用户登录重启的日志" class="headerlink" title="Last  查看用户登录重启的日志"></a>Last  查看用户登录重启的日志</h3><h3 id="LastLog-查看用户最后一次登录信息"><a href="#LastLog-查看用户最后一次登录信息" class="headerlink" title="LastLog 查看用户最后一次登录信息"></a>LastLog 查看用户最后一次登录信息</h3><p>语法 : lastlog -u </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">lastlog -u uid</div><div class="line">lastlog</div></pre></td></tr></table></figure><h3 id="traceroute-显示数据包到主机的路径"><a href="#traceroute-显示数据包到主机的路径" class="headerlink" title="traceroute 显示数据包到主机的路径"></a>traceroute 显示数据包到主机的路径</h3><p>语法：traceroute 域名</p><h3 id="netstat-显示网络相关信息"><a href="#netstat-显示网络相关信息" class="headerlink" title="netstat 显示网络相关信息"></a>netstat 显示网络相关信息</h3><p>语法 netstat 选项</p><ul><li>-t : tcp 协议</li><li>-u: upd协议</li><li>-l：监听</li><li>-r: 路由</li><li>-n: 显示IP地址和端口号</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">netstat -tuln # 查看本机监听的端口</div><div class="line">netstat -an   # 查看本机所有的网络连接</div><div class="line">netstat-rn    # 查看本机路由表</div></pre></td></tr></table></figure><h3 id="setup-工具包"><a href="#setup-工具包" class="headerlink" title="setup 工具包"></a>setup 工具包</h3><blockquote><p>该命令在其他版本的Linux 系统不存在，只有 ReaHat 系列的系统有</p><p>CentOS 7 已经没有了对网络的配置功能了</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;命令格式&quot;&gt;&lt;a href=&quot;#命令格式&quot; class=&quot;headerlink&quot; title=&quot;命令格式&quot;&gt;&lt;/a&gt;命令格式&lt;/h2&gt;&lt;p&gt;命令格式： 命令 [-选项] [参数]&lt;br&gt;例： ls -la /etc&lt;br&gt;说明&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;个别命令使用不遵循此格式&lt;/li&gt;
&lt;li&gt;当有多个选项时，可以写在一起&lt;/li&gt;
&lt;li&gt;简化选项与完整选项 -a  等于  –all
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统注意事项</title>
    <link href="http://qzdotnet.github.io/2017/10/20/Linux-%E7%B3%BB%E7%BB%9F%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>http://qzdotnet.github.io/2017/10/20/Linux-系统注意事项/</id>
    <published>2017-10-20T00:39:04.000Z</published>
    <updated>2017-10-26T00:38:33.901Z</updated>
    
    <content type="html"><![CDATA[<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><h3 id="Linux-严格区分大小写"><a href="#Linux-严格区分大小写" class="headerlink" title="Linux 严格区分大小写"></a>Linux 严格区分大小写</h3><p>Linux 系统严格区分大小写，文件名称 、目录名称、Shell 命令的参数 都是严格区分大小写的。Linux 的 Shell 命令都是小写的。</p><a id="more"></a><h3 id="Linux-系统中所有的内容都是已文件的形式保存的，包括硬件保存硬件的文件夹-dev"><a href="#Linux-系统中所有的内容都是已文件的形式保存的，包括硬件保存硬件的文件夹-dev" class="headerlink" title="Linux 系统中所有的内容都是已文件的形式保存的，包括硬件保存硬件的文件夹/dev/"></a>Linux 系统中所有的内容都是已文件的形式保存的，包括硬件保存硬件的文件夹/dev/</h3><ul><li>硬盘文件是 /dev/sd[a-p]</li><li>光盘文件是 /dev/sr0 等</li></ul><h3 id="Linux-不靠扩展名区分文件类型"><a href="#Linux-不靠扩展名区分文件类型" class="headerlink" title="Linux 不靠扩展名区分文件类型"></a>Linux 不靠扩展名区分文件类型</h3><p>Linux 系统本身不依靠扩展名来区分文件，但是最好还是讲需要的文件进行扩展名命名。</p><ul><li>压缩包：“*.gz”、”*.bz2”、”*.tar.bz2”、”*.tgz”</li><li>二进制软件包：”*.rpm”</li><li>网页文件：”*.html”、”*.php”</li><li>脚本文件：”*.sh”</li><li>配置文件：”*.conf”</li></ul><h3 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h3><p>Linux 所有的存储设备都必须挂载之后用户才能使用，包括硬盘、U盘和光盘</p><h3 id="Windows程序"><a href="#Windows程序" class="headerlink" title="Windows程序"></a>Windows程序</h3><p>Windows 的程序不能直接在 Linux 中的安装和运行, 但是可以在 Linux 系统上安装 Windows 模拟器进行安装使用。但是模拟器不是所有的程序都能运行，也不稳定。</p><h2 id="服务器的管理和维护建议"><a href="#服务器的管理和维护建议" class="headerlink" title="服务器的管理和维护建议"></a>服务器的管理和维护建议</h2><h3 id="Linux-各目录的作用"><a href="#Linux-各目录的作用" class="headerlink" title="Linux 各目录的作用"></a>Linux 各目录的作用</h3><table><thead><tr><th>目录名</th><th>目录作用</th></tr></thead><tbody><tr><td>/bin/</td><td>存放系统命令的目录，普通用户和超级用户都可以执行。不过放在/bin下的命令在单用户模式下也可以执行</td></tr><tr><td>/sbin/</td><td>保存和系统环境设置相关的命令，只有超级用户可以使用这些命令进行系统环境设置，但是有些命令可以允许普通用户查看</td></tr><tr><td>/usr/bin/</td><td>存放系统命令的目录，普通用户和超级用户都可以执行，这些命令和系统启动无关。在单用户模式下不能执行。</td></tr><tr><td>/usr/sbin/</td><td>存放根文件系统不必要的系统命令，例如多数的服务器程序。只有超级用户可以使用。大家其实可以注意到 Linux 的系统，在所有 sbin 目录中保存的命令只有超级用户可以使用， bin 目录中保存的命令所有用户都可以使用。</td></tr><tr><td>/boot/</td><td>系统启动目录，保存系统启动相关的目录，如内核文件和启动引导程序(grup)</td></tr><tr><td>/dev/</td><td>设备文件保存位置。这个目录用来存放所有硬件设备文件</td></tr><tr><td>/etc/</td><td>配置文件保存位置。系统内所有采用默认安装方式(rpm 安装) 的服务的配置文件全部都保存在这个目录中，如用户账户和密码，服务的启动脚本，常用服务的配置文件等。</td></tr><tr><td>/home/</td><td>普通用户的家目录。建立每个用户时，每个用户要有一个默认登录位置，这个位置就是这个用户的家（宿主）目录，所有的普通用户的家目录就是在 /home 下建立一个和用户名相同的目录。如用户 user1 的家目录就是 /home/user1 ，只有管理员的目录是一级目录 /root/</td></tr><tr><td>/lib/</td><td>系统调用的函数库保存位置。</td></tr><tr><td>/lost+found/</td><td>当系统意外崩溃或机器意外关机，而产生一些文件碎片放在这里。当系统启动的过程中 fsck 工具会检查这里，并修复已经损坏的文件系统。这个目录只在每个分区中出现，例如/lost+found 就是根分区的备份恢复目录， /boot/lost+found 就是 /boot 分区的备份恢复目录。</td></tr><tr><td>/media/</td><td>挂载目录。系统建议是用来挂载媒体设备的。例如软盘和光盘</td></tr><tr><td>/mnt/</td><td>ls挂载目录，早期 Linux 中只有这一个挂载目录，并没有细分。现在这个目录系统建议挂载额外设备，如U盘，移动硬盘和其他操作系统的分区。</td></tr><tr><td>/misc/</td><td>挂载目录。系统建议用来挂载 NFS 服务的共享目录。只要是一个已经建立的空目录就可以作为挂载点。那么系统虽然准备了桑格挂载目录，但是到底在哪个目录中挂载什么设备可以又管理员自己决定。</td></tr><tr><td>/opt/</td><td>第三方安装软件保存位置。这个目录就是防止和安装其他软件的位置，手工安装的源码包软件都可以安装到这个目录中。还有一个常用的软件安装目录 /usr/local/</td></tr><tr><td>/proc/</td><td>虚拟文件系统，该目录中的数据不保存在硬盘当中，而是保存在内存当中。主要保存系统的内核，进程，外部设备状态和网络状态灯。如 /proc/cpuinfo 是保存 CPU 信息的，proc/devices 是保存设备驱动的列表， /proc/filesystems 是保存文件系统列表的，/proc/net 是保存网络协议信息的。</td></tr><tr><td>/sys/</td><td>虚拟文件系统。和/proc目录相似，都是保存在内存当中的，主要保存内核相关信息。</td></tr><tr><td>/root/</td><td>超级用户的家目录/src</td></tr><tr><td>/srv/</td><td>服务数据目录。一些系统服务启动之后，可以在这个目录中保存所需要的数据。</td></tr><tr><td>/tmp/</td><td>临时目录。系统存放临时目录的，该目录下所有的用户都可以访问和写入。建议在此目录中不要保存重要数据，最好每次开机都把该目录清空</td></tr><tr><td>/usr/</td><td>系统软件资源目录。usr 不是 user 的缩写，而是 Unix Software Resource 的缩写，所以不是存放用户数据，而是存放系统软件资源的目录。系统中安装软件大多保存在这里。</td></tr><tr><td>/var</td><td>动态数据目录，主要保存缓存、日志以及软件运行所产生的文件。</td></tr></tbody></table><h3 id="服务器的注意事项"><a href="#服务器的注意事项" class="headerlink" title="服务器的注意事项"></a>服务器的注意事项</h3><ul><li>远程服务器不允许关机，只能重启</li><li>重启时应该关闭服务</li><li>不要再服务器访问高峰运行高负载命令</li><li>远程配置防火墙时，不要把自己踢出服务器</li><li>制定合理的密码规范并定期更新</li><li>合理分配权限</li><li>定期备份重要数据和日志，备份的原则不要把鸡蛋放在同一个篮子里</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h2&gt;&lt;h3 id=&quot;Linux-严格区分大小写&quot;&gt;&lt;a href=&quot;#Linux-严格区分大小写&quot; class=&quot;headerlink&quot; title=&quot;Linux 严格区分大小写&quot;&gt;&lt;/a&gt;Linux 严格区分大小写&lt;/h3&gt;&lt;p&gt;Linux 系统严格区分大小写，文件名称 、目录名称、Shell 命令的参数 都是严格区分大小写的。Linux 的 Shell 命令都是小写的。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>搭建 Docker 环境</title>
    <link href="http://qzdotnet.github.io/2017/10/19/%E6%90%AD%E5%BB%BA-Docker-%E7%8E%AF%E5%A2%83/"/>
    <id>http://qzdotnet.github.io/2017/10/19/搭建-Docker-环境/</id>
    <published>2017-10-19T02:37:53.000Z</published>
    <updated>2017-10-26T02:12:53.944Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装配置Docker"><a href="#安装配置Docker" class="headerlink" title="安装配置Docker"></a>安装配置Docker</h2><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><p>Docker 软件包已经包括在默认的 CentOS-Extras 软件源里。因此想要安装 docker，只需要运行下面的 yum 命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install docker-io -y</div></pre></td></tr></table></figure><p>使用 yum 命令安装完成后可以查看版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker -v</div></pre></td></tr></table></figure><p>设置开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig docker on</div></pre></td></tr></table></figure><a id="more"></a><h3 id="配置-Docker"><a href="#配置-Docker" class="headerlink" title="配置 Docker"></a>配置 Docker</h3><p>因为国内访问 Docker Hub 较慢，可以使用腾讯云提供的国内镜像源，加速访问 Docker Hub</p><p>依次执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo "OPTIONS='--registry-mirror=https://mirror.ccs.tencentyun.com'" &gt;&gt; /etc/sysconfig/docker</div></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl daemon-reload</div></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service docker restart</div></pre></td></tr></table></figure><h2 id="Docker-简单操作"><a href="#Docker-简单操作" class="headerlink" title="Docker 简单操作"></a>Docker 简单操作</h2><h3 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h3><p>下载一个官方的 CentOS 镜像到本地</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker pull centos</div></pre></td></tr></table></figure><p> 下载好的镜像就会出现在镜像列表里</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker images</div></pre></td></tr></table></figure><h3 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h3><p>知识我们可以在刚才下载的 CentOS 镜像生成的容器内操作了。</p><p>生成一个 centos 进项为模板的内容并使用 bashshell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run -it centos /bin/bash</div></pre></td></tr></table></figure><p>这个时候可以看到命令行的前端已经变成了 [root@(一串 hash Id)] 的形式, 这说明我们已经成功进入了 CentOS 容器。</p><p>在容器内执行任意命令, 不会影响到宿主机, 如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir -p /data/simple_docker</div></pre></td></tr></table></figure><p> 可以看到 /data 目录下已经创建成功了 simple_docker  文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls /data</div></pre></td></tr></table></figure><p>退出容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">exit</div></pre></td></tr></table></figure><p>查看宿主机的 /data 目录, 并没有 simple_docker 文件夹, 说明容器内的操作不会影响到宿主机</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls /data</div></pre></td></tr></table></figure><h3 id="保存容器"><a href="#保存容器" class="headerlink" title="保存容器"></a>保存容器</h3><p>查看所有容器信息，能狗获取容器的 id</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker ps =a</div></pre></td></tr></table></figure><p>然后执行如下命令，保存镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker commit -m="备注" 你的CONTAINER_ID 你的IMAGE</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装配置Docker&quot;&gt;&lt;a href=&quot;#安装配置Docker&quot; class=&quot;headerlink&quot; title=&quot;安装配置Docker&quot;&gt;&lt;/a&gt;安装配置Docker&lt;/h2&gt;&lt;h3 id=&quot;安装Docker&quot;&gt;&lt;a href=&quot;#安装Docker&quot; class=&quot;headerlink&quot; title=&quot;安装Docker&quot;&gt;&lt;/a&gt;安装Docker&lt;/h3&gt;&lt;p&gt;Docker 软件包已经包括在默认的 CentOS-Extras 软件源里。因此想要安装 docker，只需要运行下面的 yum 命令：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yum install docker-io -y&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用 yum 命令安装完成后可以查看版本&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;docker -v&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;设置开机启动&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;chkconfig docker on&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
      <category term="Docker" scheme="http://qzdotnet.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Linux 操作系统安装</title>
    <link href="http://qzdotnet.github.io/2017/10/17/Linux-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/"/>
    <id>http://qzdotnet.github.io/2017/10/17/Linux-操作系统安装/</id>
    <published>2017-10-17T12:31:37.000Z</published>
    <updated>2017-10-24T09:14:06.796Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p> 本文主要介绍基于 VMware Workstations Pro  安装 CentOS 7 系统的介绍，并简单介绍 Linux 文件格式和远程连接</p></blockquote><h2 id="VMware-虚拟机的安装与使用"><a href="#VMware-虚拟机的安装与使用" class="headerlink" title="VMware 虚拟机的安装与使用"></a>VMware 虚拟机的安装与使用</h2><h3 id="下载VMware"><a href="#下载VMware" class="headerlink" title="下载VMware"></a>下载VMware</h3><p>下载<a href="https://my.vmware.com/en/web/vmware/info/slug/desktop_end_user_computing/vmware_workstation_pro/14_0?wd=&amp;eqid=b304d84f000280ff0000000259e5a313" target="_blank" rel="external">传送门</a></p><p>下载完毕后就可以对软件进行安装了，安装过程比较简单就不介绍了。</p><a id="more"></a><h3 id="虚拟机快照"><a href="#虚拟机快照" class="headerlink" title="虚拟机快照"></a>虚拟机快照</h3><p>VMware 可以给虚拟机创建快照，恢复快照将系统恢复到快照时的状态</p><h3 id="虚拟机克隆"><a href="#虚拟机克隆" class="headerlink" title="虚拟机克隆"></a>虚拟机克隆</h3><p>如果需要多个操作系统，可以使用克隆命令。</p><p>克隆有两种：链接克隆和完全克隆。</p><p>链接克隆创建被克隆机器的镜像。如果原始机删除克隆机无法使用。但是占用资源较少。</p><p><a href="https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/" target="_blank" rel="external">VMware文档</a></p><h2 id="CentOS安装"><a href="#CentOS安装" class="headerlink" title="CentOS安装"></a>CentOS安装</h2><h3 id="下载CentOS"><a href="#下载CentOS" class="headerlink" title="下载CentOS"></a>下载CentOS</h3><p>从CentOs的官方网站下载<a href="http://isoredirect.centos.org/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-1708.iso" target="_blank" rel="external">CentOS</a></p><h3 id="使用VMware将ISO挂在到虚拟光驱"><a href="#使用VMware将ISO挂在到虚拟光驱" class="headerlink" title="使用VMware将ISO挂在到虚拟光驱"></a>使用VMware将ISO挂在到虚拟光驱</h3><p>打开VMware Workstation 的虚拟机设置对话框，选择CD/DVD,使用 ISO 映像文件(M): 点击浏览按钮，选中刚才下载的 ISO 文件</p><h3 id="打开电源开始安装"><a href="#打开电源开始安装" class="headerlink" title="打开电源开始安装"></a>打开电源开始安装</h3><p>安装过程比较简单，注意选择安装内容的时候不要使用最小安装，使用基本安装。</p><h3 id="设置密码，安装系统密码原则"><a href="#设置密码，安装系统密码原则" class="headerlink" title="设置密码，安装系统密码原则"></a>设置密码，安装系统密码原则</h3><p>复杂性</p><ul><li>八位字符以上，大小写字符、数字、符号</li><li>不能是英文单词</li><li>不能是和用户相关的内容</li></ul><p>易记忆性</p><p>时效性</p><h3 id="设置网络"><a href="#设置网络" class="headerlink" title="设置网络"></a>设置网络</h3><p>默认安装完毕后，登录系统是不能上网的，CentOS默认不启动网卡，需要手动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">　　cd /etc/sysconfig/network-scripts/</div><div class="line">　　ls 查看一下ifcfg-eno后面对应的数字是什么，以ens33为例</div><div class="line"><span class="meta">　　#</span><span class="bash">切换到root用户下，</span></div><div class="line">　　vi ifcfg-ens33</div><div class="line"><span class="meta">　　#</span><span class="bash">编辑该文件</span></div><div class="line">　　IPADDR=192.168.x.xx（添加ip地址）</div><div class="line">NETWORK=255.255.255.0（添加默认网关）</div><div class="line">GETWAY=192.168.x.x（添加网关地址）</div><div class="line">UUID=04c1f501-d0af-41c4-b1b0-fc0f56c5edc7</div><div class="line">ONBOOT=yes  （由not改成yes）</div><div class="line"><span class="meta">　　#</span><span class="bash">即开启自动启用网络连接</span></div><div class="line">　　:wq 保存退出</div></pre></td></tr></table></figure><h2 id="系统分区"><a href="#系统分区" class="headerlink" title="系统分区"></a>系统分区</h2><h3 id="分区类型"><a href="#分区类型" class="headerlink" title="分区类型"></a>分区类型</h3><ul><li>主分区：最多只能有4个</li><li>扩展分区：扩展分区只能有一个，主分区加扩展分区最多有4个，用途就是存放逻辑分区定义，扩展分区不能存放数据。</li><li>逻辑分区：存放文件</li></ul><h3 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h3><p>格式化（高级格式化）又称逻辑格式化，它是指根据用户选定的文件系统（如FAT16、FAT32、NTFS、EXT2、EXT3、EXT4等），在磁盘的特定区域存放特定的数据，在分区中划出一片用于存放文件分配表、目录表等用于文件管理的磁盘空间</p><h3 id="硬件设备文件名"><a href="#硬件设备文件名" class="headerlink" title="硬件设备文件名"></a>硬件设备文件名</h3><table><thead><tr><th>硬件</th><th>设备文件名</th></tr></thead><tbody><tr><td>IDE硬盘</td><td>/dev/hd[a-d]</td></tr><tr><td>SCSI/SATA/USB硬盘</td><td>/dev/sd[a-p]</td></tr><tr><td>光驱</td><td>/dev/cdrom或者/dev/sr0</td></tr><tr><td>软驱</td><td>dev/fd[0-1]</td></tr><tr><td>打印机(25针)</td><td>/dev/lp[0-2]</td></tr><tr><td>打印机（ＵＳＢ）</td><td>dev/usb/lp[0-15]</td></tr><tr><td>鼠标</td><td>/dev/mouse</td></tr></tbody></table><h3 id="分区设备文件名"><a href="#分区设备文件名" class="headerlink" title="分区设备文件名"></a>分区设备文件名</h3><p>IDE:133MB/s</p><p>SCSI:200MB/s</p><p>SATA:500MB/s</p><p>设备文件名</p><p>/dev/had1(IDE)</p><p>/dev/dev/sda1(SCSI\STAT)</p><h3 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h3><p>给每一个分区分配挂载点，分区的设备必须挂载了以后才能使用。</p><p>/ (根分区)</p><p>swap 分区 （交换分区，内存2倍，不超过2GB）</p><p>推荐分区</p><p>/boot  (启动分区，200MB)</p><h3 id="文件系统结构"><a href="#文件系统结构" class="headerlink" title="文件系统结构"></a>文件系统结构</h3><ul><li>/分区<ul><li>​/boot</li><li>/etc<ul><li>passwd</li><li>shadow</li><li>group</li></ul></li><li>/home</li></ul></li></ul><p>Linux 系统每一个文件夹都可以制定一个硬盘分区</p><h2 id="远程登录管理"><a href="#远程登录管理" class="headerlink" title="远程登录管理"></a>远程登录管理</h2><h3 id="管理工具"><a href="#管理工具" class="headerlink" title="管理工具"></a>管理工具</h3><p>SecureCRT  Linux的常用远程管理工具</p><p>Winscp 文件拷贝工具</p><p>VNC 图形界面远程管理Linux</p><h3 id="SecureCRT-远程登录"><a href="#SecureCRT-远程登录" class="headerlink" title="SecureCRT  远程登录"></a>SecureCRT  远程登录</h3><p>打开 SecureCRT 点击快速连接 输入主机名和用户名点击链接，在弹出的密码窗口中输入用户密码</p><p><img src="http://ovs80if20.bkt.clouddn.com/linuxyc2.png" alt=""></p><h3 id="乱码问题解决"><a href="#乱码问题解决" class="headerlink" title="乱码问题解决"></a>乱码问题解决</h3><p>由于我们安装的 Linux 是中文语言的，所以远程的时候可能会出现乱码的情况</p><p>使用查看分区的命令来测试是否能显示中文</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df</div></pre></td></tr></table></figure><p>如果显示乱码就需要对 SecureCRT  进行配置 <code>选项</code> -&gt; <code>会话选项</code> ，调整外观中的字符编码和字体。</p><p>字体需要设置成支持中文的字体，字符编码需要设置成 GB2312，字符编码需要设置成 UFT-8</p><p><img src="http://ovs80if20.bkt.clouddn.com/linuxyc.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt; 本文主要介绍基于 VMware Workstations Pro  安装 CentOS 7 系统的介绍，并简单介绍 Linux 文件格式和远程连接&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;VMware-虚拟机的安装与使用&quot;&gt;&lt;a href=&quot;#VMware-虚拟机的安装与使用&quot; class=&quot;headerlink&quot; title=&quot;VMware 虚拟机的安装与使用&quot;&gt;&lt;/a&gt;VMware 虚拟机的安装与使用&lt;/h2&gt;&lt;h3 id=&quot;下载VMware&quot;&gt;&lt;a href=&quot;#下载VMware&quot; class=&quot;headerlink&quot; title=&quot;下载VMware&quot;&gt;&lt;/a&gt;下载VMware&lt;/h3&gt;&lt;p&gt;下载&lt;a href=&quot;https://my.vmware.com/en/web/vmware/info/slug/desktop_end_user_computing/vmware_workstation_pro/14_0?wd=&amp;amp;eqid=b304d84f000280ff0000000259e5a313&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;传送门&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载完毕后就可以对软件进行安装了，安装过程比较简单就不介绍了。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 系统简介</title>
    <link href="http://qzdotnet.github.io/2017/10/17/Linux-%E7%B3%BB%E7%BB%9F%E7%AE%80%E4%BB%8B/"/>
    <id>http://qzdotnet.github.io/2017/10/17/Linux-系统简介/</id>
    <published>2017-10-17T12:20:03.000Z</published>
    <updated>2017-10-27T02:17:02.150Z</updated>
    
    <content type="html"><![CDATA[<h2 id="UNIX-和-LINUX的发展历史"><a href="#UNIX-和-LINUX的发展历史" class="headerlink" title="UNIX 和 LINUX的发展历史"></a>UNIX 和 LINUX的发展历史</h2><h3 id="UNIX-发展历史"><a href="#UNIX-发展历史" class="headerlink" title="UNIX 发展历史"></a>UNIX 发展历史</h3><ol><li><p>1965 MIT、GE、AT&amp;T联合开发 Multics 工程计划，其目标是开发一种交互式的具有多道程序处理能力的分时操作系统，但因 Multics 追求的目标过于庞大复杂，项目进度远远落后与计划，最后贝尔实验室退出。</p></li><li><p>1969年，美国贝尔实验室的肯·汤普森在DEC PDP-7机器上开发出了UNIX系统。</p></li><li><p>1971年，肯·汤普森的同事丹尼斯·里奇发明了C语言，1973年，UNIX系统的绝大部分源代码用C语言重写，这为提高UNIX系统的可移植性打下基础。</p><a id="more"></a></li></ol><h3 id="UNIX-发型版本"><a href="#UNIX-发型版本" class="headerlink" title="UNIX 发型版本"></a>UNIX 发型版本</h3><table><thead><tr><th>操作系统</th><th>公司</th><th>硬件平台</th></tr></thead><tbody><tr><td>AIX</td><td>IBM</td><td>PowerPC</td></tr><tr><td>HP-UX</td><td>HP</td><td>PA-RISC</td></tr><tr><td>Solaris</td><td>Sun</td><td>SPARC</td></tr><tr><td>Linux</td><td>Red Hat Linux、Ubuntu Linux……</td><td>IA(Intel、ADM、Cyrix、RISE)</td></tr><tr><td>BSD</td><td>伯克利大学</td></tr></tbody></table><h3 id="LINUX-发展史"><a href="#LINUX-发展史" class="headerlink" title="LINUX 发展史"></a>LINUX 发展史</h3><p>Linux系统诞生与1991年，由芬兰大学生李纳斯(Linus Torvalds)和后来陆续加入的众多爱好者共同开发完成。</p><p>Linux是开源软件，源代码开放的UNIX。</p><h3 id="LINUX-内核版本"><a href="#LINUX-内核版本" class="headerlink" title="LINUX 内核版本"></a>LINUX 内核版本</h3><p>Linux 内核官网： <a href="http://www.kernel.org" target="_blank" rel="external">www.kernel.org</a></p><p>内核版本说明：[主版本].[此版本].[末版本] 2.6.18</p><p>kernel源代码标记：mainline 、longterm、stable、linux-next、snapsho</p><ul><li>mainline：指由Linus Torvalds亲自制作的内核发布版，是官方当前最新版本的kernel source。在Torvalds对所有其他程序员所做出的重大变化进行整合，并且对先前版本的bug进行几轮修复之后，大约每十周正式发布一个新版本。mainline事实上代表着一个linux kernel分支，这个分支有另一个名称，叫做vanilla。</li><li>longterm：Long Term Support的缩写，长期维护的意思</li><li>stable ： 稳定版</li><li>linux-next、snapshot ：linux-next和snapshot，都是代码提交周期结束之前生成的快照 用于给Linux代码贡献者们做测试。</li></ul><h3 id="LINUX-发行版"><a href="#LINUX-发行版" class="headerlink" title="LINUX 发行版"></a>LINUX 发行版</h3><p>Linux 主要的发行版主要有两个系列 redhat 系列和 debian 系列,这两个操作系统使用的命令都差不多，但是安装软件的命令不太一样。</p><ul><li>redhat<ul><li>readhat</li><li>CentOS</li><li>SuSE</li><li>fedora</li><li>红旗Linux</li><li>turbolinux</li><li>gentoo linux</li><li>Mandriva</li></ul></li><li><p>debian</p><ul><li>debian</li><li>ubuntu</li><li>KNOPPIX</li></ul><blockquote><p>详细的发行版信息参考<a href="http://futurist.se/gldt/" target="_blank" rel="external">http://futurist.se/gldt/)</a></p></blockquote></li></ul><h2 id="开源软件简介"><a href="#开源软件简介" class="headerlink" title="开源软件简介"></a>开源软件简介</h2><p>###Linux上的开软软件列表</p><p>Linux上的服务器开源软件比WINODWS丰富，Windows服务器的个人软件更加丰富。</p><ul><li><p>Apache</p></li><li><p>Nginx</p></li><li><p>MySQL</p></li><li><p>php</p></li><li><p>samba</p></li><li><p>mongoDB</p></li><li><p>python</p></li><li><p>Ruby</p></li><li><p>Sphinx</p></li></ul><h3 id="开源软件"><a href="#开源软件" class="headerlink" title="开源软件"></a>开源软件</h3><p>开源软件是指在软件发行的时候，附上软件的源代码，并授权允许用户更改/自由再散布/衍生著作，开源并不抵制商业收费。 主要的特点</p><ul><li>使用的自由：绝大多数的开源软件免费</li><li>研究的自由：可以获得软件源代码</li><li>散布及改良的自由：可以自由传播、改良甚至销售</li></ul><h3 id="自由软件"><a href="#自由软件" class="headerlink" title="自由软件"></a>自由软件</h3><p>自由软件是一项思想运动，强调用户拥有如何使用软件的自由</p><ol><li>可以自由地运行；</li><li>可以自由地拷贝；</li><li>可以自由地修改；</li><li>可以自由地再发行。</li></ol><p>这里指的自由，并不是价格免费，这和价格无关而是使用软件对所有的用户来说是自由的。（英语中FREE有自由和免费的意思，比如自由的话语权，免费的夜宵）。</p><h3 id="免费软件"><a href="#免费软件" class="headerlink" title="免费软件"></a>免费软件</h3><p>免费软件就是免费提供给用户使用的软件，但是其免费的时候，通常都会有其他的限制，比如其源码不一定会公开，而且使用者也并没有使用、复制、研究、修改和再散布的权利。</p><h3 id="支撑互联网的开源技术"><a href="#支撑互联网的开源技术" class="headerlink" title="支撑互联网的开源技术"></a>支撑互联网的开源技术</h3><p>LAMP :  Linux 、Apache、MySQL、PHP</p><p>LNMP :  Linux、Nginx、MySQL、PHP</p><h2 id="Linux-应用领域"><a href="#Linux-应用领域" class="headerlink" title="Linux 应用领域"></a>Linux 应用领域</h2><h3 id="基于Linux的企业服务器和网站服务器"><a href="#基于Linux的企业服务器和网站服务器" class="headerlink" title="基于Linux的企业服务器和网站服务器"></a>基于Linux的企业服务器和网站服务器</h3><p>通过扫描网站：<a href="http://www.netcraft.com" target="_blank" rel="external">netcraft.com</a>，可以扫描网站使用的服务器类型。国内大型的网站都使用Linux</p><p>全球前500的计算服务器基本上也都使用的Linux服务器：<a href="http://www.top500.org" target="_blank" rel="external">www.top500.org</a></p><h3 id="嵌入式应用"><a href="#嵌入式应用" class="headerlink" title="嵌入式应用"></a>嵌入式应用</h3><ol><li>手机 、平板电脑（Android）</li><li>智能电视（Android）</li><li>小米盒子、乐视盒子（Android）</li><li>航空系统、银行系统、卡拉OK点歌系统</li><li>智能汽车</li></ol><h2 id="Linux-学习方法"><a href="#Linux-学习方法" class="headerlink" title="Linux 学习方法"></a>Linux 学习方法</h2><h3 id="为什么使用命令行"><a href="#为什么使用命令行" class="headerlink" title="为什么使用命令行"></a>为什么使用命令行</h3><p>WINDOWS主要是图形界面，Linux早期都是用于服务器操作系统的。所以基本上都是使用命令控制的，图形界面是占用资源的。</p><h3 id="解决问题的智慧"><a href="#解决问题的智慧" class="headerlink" title="解决问题的智慧"></a>解决问题的智慧</h3><ol><li><p>帮助</p></li><li><p>文档</p></li><li><p>示例</p></li><li><p>查找</p></li></ol><h3 id="英文提示的困惑"><a href="#英文提示的困惑" class="headerlink" title="英文提示的困惑"></a>英文提示的困惑</h3><p>Command not found</p><p>No Such file or directory</p><h3 id="Linux-学习方法-1"><a href="#Linux-学习方法-1" class="headerlink" title="Linux 学习方法"></a>Linux 学习方法</h3><ol><li>计划</li><li>专注</li><li>坚持</li><li>练习</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;UNIX-和-LINUX的发展历史&quot;&gt;&lt;a href=&quot;#UNIX-和-LINUX的发展历史&quot; class=&quot;headerlink&quot; title=&quot;UNIX 和 LINUX的发展历史&quot;&gt;&lt;/a&gt;UNIX 和 LINUX的发展历史&lt;/h2&gt;&lt;h3 id=&quot;UNIX-发展历史&quot;&gt;&lt;a href=&quot;#UNIX-发展历史&quot; class=&quot;headerlink&quot; title=&quot;UNIX 发展历史&quot;&gt;&lt;/a&gt;UNIX 发展历史&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;1965 MIT、GE、AT&amp;amp;T联合开发 Multics 工程计划，其目标是开发一种交互式的具有多道程序处理能力的分时操作系统，但因 Multics 追求的目标过于庞大复杂，项目进度远远落后与计划，最后贝尔实验室退出。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1969年，美国贝尔实验室的肯·汤普森在DEC PDP-7机器上开发出了UNIX系统。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1971年，肯·汤普森的同事丹尼斯·里奇发明了C语言，1973年，UNIX系统的绝大部分源代码用C语言重写，这为提高UNIX系统的可移植性打下基础。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>基于 CentOS 搭建个人网盘</title>
    <link href="http://qzdotnet.github.io/2017/10/17/%E5%9F%BA%E4%BA%8E-CentOS-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/"/>
    <id>http://qzdotnet.github.io/2017/10/17/基于-CentOS-搭建个人网盘/</id>
    <published>2017-10-17T01:36:26.000Z</published>
    <updated>2017-10-26T02:09:16.406Z</updated>
    
    <content type="html"><![CDATA[<p>转载自：<a href="https://cloud.tencent.com/developer/labs/lab/10093" target="_blank" rel="external">腾讯云实验室</a></p><h2 id="准备域名"><a href="#准备域名" class="headerlink" title="准备域名"></a>准备域名</h2><h3 id="域名注册"><a href="#域名注册" class="headerlink" title="域名注册"></a>域名注册</h3><h2 id="安装-Seafile"><a href="#安装-Seafile" class="headerlink" title="安装 Seafile"></a>安装 Seafile</h2><h3 id="安装依赖环境"><a href="#安装依赖环境" class="headerlink" title="安装依赖环境"></a>安装依赖环境</h3><p>使用 <code>yum</code> 安装 Python 及 MySQL :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install python python-setuptools python-imaging python-ldap python-memcached MySQL-python mariadb mariadb-server</div></pre></td></tr></table></figure><p>启动 MariaDB 服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo systemctl start mariadb.service</div><div class="line">sudo systemctl enable mariadb.service</div></pre></td></tr></table></figure><p>配置 MySQL:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/mysql_secure_installation</div></pre></td></tr></table></figure><p>配置过程输入参数如截图所示，其中 <code>New password</code> 和 <code>Re-enter new password</code> 字段都设置为 <code>Zk7Ggm9g</code>，其他字段一路回车使用默认值：</p><a id="more"></a><h3 id="安装-Seafile-1"><a href="#安装-Seafile-1" class="headerlink" title="安装 Seafile"></a>安装 Seafile</h3><p>下载 Seafile 安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://mc.qcloudimg.com/static/archive/3d8addbe52be88df4f6139ec7e35b453/seafile-server_5.1.4_x86-64.tar.gz</div></pre></td></tr></table></figure><p>解压 Seafile 安装包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zxvf seafile-server_5.1.4_x86-64.tar.gz</div></pre></td></tr></table></figure><p>安装 Seafile 安装包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo mkdir -p /opt/seafile/installed</div><div class="line">sudo mv seafile-server_5.1.4_x86-64.tar.gz /opt/seafile/installed</div><div class="line">sudo mv seafile-server-5.1.4/ /opt/seafile</div><div class="line">cd /opt/seafile/seafile-server-5.1.4</div><div class="line">sudo ./setup-seafile-mysql.sh</div></pre></td></tr></table></figure><p>执行过程输入参数如截图所示，<code>[server name]</code>字段输入 <code>Seafile</code>，<code>[ This server&#39;s ip or domain ]</code> 字段输入教程第一步申请的域名，<code>[ 1 or 2 ]</code> 字段选择 <code>1</code>，mysql 的 <code>[ root password ]</code> 字段输入 <code>Zk7Ggm9g</code>，其他字段一路回车使用默认值：</p><p><img src="http://ovs80if20.bkt.clouddn.com/ftp1.png" alt="截图"></p><h2 id="启动-Seafile-及修改防火墙规则"><a href="#启动-Seafile-及修改防火墙规则" class="headerlink" title="启动 Seafile 及修改防火墙规则"></a>启动 Seafile 及修改防火墙规则</h2><h3 id="启动-seafile"><a href="#启动-seafile" class="headerlink" title="启动 seafile"></a>启动 seafile</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo ./seafile.sh start</div><div class="line">sudo ./seahub.sh start</div></pre></td></tr></table></figure><p>执行过程输入参数如截图所示，其中 <code>[ admin email ]</code> 设置为您登录网盘的帐号，如 <code>admin@qcloudlab.wang</code>，<code>[ admin password ]</code>和 <code>[ admin password again ]</code> 设置为登录网盘的密码，如 <code>admin_Zk7Ggm9g</code>：</p><p><img src="http://ovs80if20.bkt.clouddn.com/ftp2.png" alt="截图"></p><h3 id="修改防火墙规则"><a href="#修改防火墙规则" class="headerlink" title="修改防火墙规则"></a>修改防火墙规则</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo firewall-cmd --zone=public --permanent --add-port=8082/tcp</div><div class="line">sudo firewall-cmd --zone=public --permanent --add-port=8000/tcp</div><div class="line">sudo firewall-cmd --reload</div></pre></td></tr></table></figure><h2 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h2><p>恭喜，您的 Seafile 已经部署完成，您现在拥有专属的网盘了，登录的帐号密码为您启动 Seafile 步骤中设置的邮箱和密码。</p><ul><li>可以通过 Ip 访问网盘：<a href="">http://119.29.148.246:8000</a></li><li>可以通过域名访问网盘：如 <a href="http://www.yourdomain.com:8000/" target="_blank" rel="external">http://www.yourdomain.com:8000</a> ，其中 <code>www.yourdomain.com</code> 替换为您注册的域名</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转载自：&lt;a href=&quot;https://cloud.tencent.com/developer/labs/lab/10093&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;腾讯云实验室&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;准备域名&quot;&gt;&lt;a href=&quot;#准备域名&quot; class=&quot;headerlink&quot; title=&quot;准备域名&quot;&gt;&lt;/a&gt;准备域名&lt;/h2&gt;&lt;h3 id=&quot;域名注册&quot;&gt;&lt;a href=&quot;#域名注册&quot; class=&quot;headerlink&quot; title=&quot;域名注册&quot;&gt;&lt;/a&gt;域名注册&lt;/h3&gt;&lt;h2 id=&quot;安装-Seafile&quot;&gt;&lt;a href=&quot;#安装-Seafile&quot; class=&quot;headerlink&quot; title=&quot;安装 Seafile&quot;&gt;&lt;/a&gt;安装 Seafile&lt;/h2&gt;&lt;h3 id=&quot;安装依赖环境&quot;&gt;&lt;a href=&quot;#安装依赖环境&quot; class=&quot;headerlink&quot; title=&quot;安装依赖环境&quot;&gt;&lt;/a&gt;安装依赖环境&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;yum&lt;/code&gt; 安装 Python 及 MySQL :&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yum install python python-setuptools python-imaging python-ldap python-memcached MySQL-python mariadb mariadb-server&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;启动 MariaDB 服务：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo systemctl start mariadb.service&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sudo systemctl enable mariadb.service&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置 MySQL:&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/usr/bin/mysql_secure_installation&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置过程输入参数如截图所示，其中 &lt;code&gt;New password&lt;/code&gt; 和 &lt;code&gt;Re-enter new password&lt;/code&gt; 字段都设置为 &lt;code&gt;Zk7Ggm9g&lt;/code&gt;，其他字段一路回车使用默认值：&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
      <category term="Seafile" scheme="http://qzdotnet.github.io/tags/Seafile/"/>
    
  </entry>
  
  <entry>
    <title>基于 CentOS 搭建 FTP 文件服务</title>
    <link href="http://qzdotnet.github.io/2017/10/17/%E5%9F%BA%E4%BA%8E-CentOS-%E6%90%AD%E5%BB%BA-FTP-%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1/"/>
    <id>http://qzdotnet.github.io/2017/10/17/基于-CentOS-搭建-FTP-文件服务/</id>
    <published>2017-10-17T01:30:58.000Z</published>
    <updated>2017-10-26T02:08:41.524Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装并启动-FTP-服务"><a href="#安装并启动-FTP-服务" class="headerlink" title="安装并启动 FTP 服务"></a>安装并启动 FTP 服务</h2><h3 id="安装-VSFTPD"><a href="#安装-VSFTPD" class="headerlink" title="安装 VSFTPD"></a>安装 VSFTPD</h3><p>使用 <code>yum</code> 安装 vsftpd ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install vsftpd -y</div></pre></td></tr></table></figure><h3 id="启动-VSFTPD"><a href="#启动-VSFTPD" class="headerlink" title="启动 VSFTPD"></a>启动 VSFTPD</h3><p>安装完成后，启动 FTP 服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service vsftpd start</div></pre></td></tr></table></figure><p>启动后，可以看到系统已经监听了 21 端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -nltp | grep 21</div></pre></td></tr></table></figure><a id="more"></a><h2 id="配置-FTP-权限"><a href="#配置-FTP-权限" class="headerlink" title="配置 FTP 权限"></a>配置 FTP 权限</h2><p>目前 FTP 服务器允许匿名登录，也无法区分用户访问，我们需要配置 FTP 的访问权限</p><h3 id="了解-VSFTP-配置"><a href="#了解-VSFTP-配置" class="headerlink" title="了解 VSFTP 配置"></a>了解 VSFTP 配置</h3><p>vsftpd 的配置目录为 <a href="">/etc/vsftpd</a>，包含下列的配置文件：</p><ul><li><a href="">vsftpd.conf</a> 为主要配置文件</li><li><a href="">ftpusers</a> 配置禁止访问 FTP 服务器的用户列表</li><li><a href="">user_list</a> 配置用户访问控制</li></ul><h3 id="阻止匿名访问和切换根目录"><a href="#阻止匿名访问和切换根目录" class="headerlink" title="阻止匿名访问和切换根目录"></a>阻止匿名访问和切换根目录</h3><p>匿名访问和切换根目录都会给服务器带来安全风险我们把这两个功能关闭。</p><p>编辑 /etc/vsftpd/vsftpd.conf ，找到下面两处配置 并修改：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> 禁用匿名用户</span></div><div class="line">anonymous_enable=NO</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash"> 禁止切换根目录</span></div><div class="line">chroot_local_user=YES</div></pre></td></tr></table></figure><p>编辑完成后，按 <code>Ctrl + S</code> 保存配置，重新启动 FTP 服务，如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service vsftpd restart</div></pre></td></tr></table></figure><h3 id="创建-FTP-用户"><a href="#创建-FTP-用户" class="headerlink" title="创建 FTP 用户"></a>创建 FTP 用户</h3><p>创建一个用户 <code>ftpuser</code> :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">useradd ftpuser</div></pre></td></tr></table></figure><p>为用户 ftpuser 设置密码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo "TestFtp1" | passwd ftpuser --stdin</div></pre></td></tr></table></figure><h3 id="限制该用户仅能通过-FTP-访问"><a href="#限制该用户仅能通过-FTP-访问" class="headerlink" title="限制该用户仅能通过 FTP 访问"></a>限制该用户仅能通过 FTP 访问</h3><p>限制用户 <code>ftpuser</code> 只能通过 FTP 访问服务器，而不能直接登录服务器：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">usermod -s /sbin/nologin ftpuser</div></pre></td></tr></table></figure><h3 id="为用户分配主目录"><a href="#为用户分配主目录" class="headerlink" title="为用户分配主目录"></a>为用户分配主目录</h3><p>为用户 <code>ftpuser</code> 创建主目录并约定： </p><p><code>/data/ftp</code> 为主目录，该目录不可上传文件</p><p><code>/data/ftp/pub</code> 文件只能上传到该目录下 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir -p /data/ftp/pub</div></pre></td></tr></table></figure><p>创建登录欢迎文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo "Welcome to use FTP service." &gt; data/ftp/welcome.txt</div></pre></td></tr></table></figure><p>设置文件访问权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod a-w /data/ftp &amp;&amp; chmod 777 -R /data/ftp/pub</div></pre></td></tr></table></figure><p>设置用户的主目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">usermod -d /data/ftp ftpuser</div></pre></td></tr></table></figure><h2 id="准备域名和证书"><a href="#准备域名和证书" class="headerlink" title="准备域名和证书"></a>准备域名和证书</h2><h3 id="域名注册"><a href="#域名注册" class="headerlink" title="域名注册"></a>域名注册</h3><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><h2 id="访问-FTP-服务"><a href="#访问-FTP-服务" class="headerlink" title="访问 FTP 服务"></a>访问 FTP 服务</h2><p>根据个人的工作环境，选择一种方式来访问已经搭建的 FTP 服务</p><h3 id="通过-Windows-资源管理器访问"><a href="#通过-Windows-资源管理器访问" class="headerlink" title="通过 Windows 资源管理器访问"></a>通过 Windows 资源管理器访问</h3><p>Windows 用户可以复制下面的内容 到资源管理器的地址栏访问：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ftp://ftpuser:Password@&lt;您的FTPIP 地址&gt;</div></pre></td></tr></table></figure><h3 id="通过-FTP-客户端工具访问"><a href="#通过-FTP-客户端工具访问" class="headerlink" title="通过 FTP 客户端工具访问"></a>通过 FTP 客户端工具访问</h3><p>FTP 客户端工具众多，下面推荐两个常用的：</p><ul><li><em>WinSCP</em> - Windows 下的 FTP 和 SFTP 连接客户端</li><li><em>FileZilla</em> - 跨平台的 FTP 客户端，支持 Windows 和 Mac</li></ul><p>下载和安装 FTP 客户端后，使用下面的凭据进行连接即可：</p><p>[主机]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FTP服务器IP地址</div></pre></td></tr></table></figure><p>[用户名]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ftpuser</div></pre></td></tr></table></figure><p>[密码]</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Password</div></pre></td></tr></table></figure><p>如果能够正常连接，那么大功告成，您可以开始使用属于您自己的 FTP 服务器了！</p><p>接下来，请上传任意一张图片到您的 FTP 服务器上的pub目录下，然后，就可以在 <a href="">/data/ftp/pub</a> 中看到了。</p><p>注意: <code>请不要直接上传文件到根目录下</code>，您应该选择上传到 <code>pub</code> 目录下</p><blockquote><p>如果您申请了域名，可以将链接中的 Ip 地址替换为对应的域名访问 FTP 服务</p><p>如果您申请了域名，可以将Ip 地址替换为对应的域名作为访问凭据</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装并启动-FTP-服务&quot;&gt;&lt;a href=&quot;#安装并启动-FTP-服务&quot; class=&quot;headerlink&quot; title=&quot;安装并启动 FTP 服务&quot;&gt;&lt;/a&gt;安装并启动 FTP 服务&lt;/h2&gt;&lt;h3 id=&quot;安装-VSFTPD&quot;&gt;&lt;a href=&quot;#安装-VSFTPD&quot; class=&quot;headerlink&quot; title=&quot;安装 VSFTPD&quot;&gt;&lt;/a&gt;安装 VSFTPD&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;yum&lt;/code&gt; 安装 vsftpd ：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yum install vsftpd -y&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;启动-VSFTPD&quot;&gt;&lt;a href=&quot;#启动-VSFTPD&quot; class=&quot;headerlink&quot; title=&quot;启动 VSFTPD&quot;&gt;&lt;/a&gt;启动 VSFTPD&lt;/h3&gt;&lt;p&gt;安装完成后，启动 FTP 服务&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;service vsftpd start&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;启动后，可以看到系统已经监听了 21 端口&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;netstat -nltp | grep 21&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="FTP" scheme="http://qzdotnet.github.io/tags/FTP/"/>
    
      <category term="CentOS" scheme="http://qzdotnet.github.io/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>基于 CentOS 搭建 WorkPress 个人博客</title>
    <link href="http://qzdotnet.github.io/2017/10/12/%E5%9F%BA%E4%BA%8E-CentOS-%E6%90%AD%E5%BB%BA-WorkPress-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://qzdotnet.github.io/2017/10/12/基于-CentOS-搭建-WorkPress-个人博客/</id>
    <published>2017-10-12T12:11:20.000Z</published>
    <updated>2017-10-20T00:33:55.956Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备-LNMP-环境"><a href="#准备-LNMP-环境" class="headerlink" title="准备 LNMP 环境"></a>准备 LNMP 环境</h2><h3 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h3><p>使用 <code>yum</code> 安装 Nginx :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install nginx -y</div></pre></td></tr></table></figure><p>修改 /etc/nginx/conf.d/default.conf ，去除对 IPv6地址的监听，可参考下面的示例：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen       80 default_server;</div><div class="line">    # listen       [::]:80 default_server;</div><div class="line">    server_name  _;</div><div class="line">    root         /usr/share/nginx/html;</div><div class="line"></div><div class="line">    # Load configuration files for the default server block.</div><div class="line">    include /etc/nginx/default.d/*.conf;</div><div class="line"></div><div class="line">    location / &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    error_page 404 /404.html;</div><div class="line">        location = /40x.html &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    error_page 500 502 503 504 /50x.html;</div><div class="line">        location = /50x.html &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>修改完成后，启动 Nginx :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx</div></pre></td></tr></table></figure><p>此时，可访问外网 HTTP (<a href="http://127.0.0.1" target="_blank" rel="external">http://127.0.0.1</a>) 来确认是否已经安装成功</p><p>将 Nginx 加入开机自动启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig nginx on</div></pre></td></tr></table></figure><h3 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h3><p>使用 <code>yum</code> 安装 MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install mysql-server -y</div></pre></td></tr></table></figure><p>启动 MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysqld restart</div></pre></td></tr></table></figure><p>设置 MySQL 账户的密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/mysqladmin -u root password &apos;MyPas$word4Word_Press&apos;</div></pre></td></tr></table></figure><p>将 MySQL 加入开机自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig mysqld on</div></pre></td></tr></table></figure><h3 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h3><p>使用 <code>yum</code> 安装 PHP</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install php-fpm php-mysql -y</div></pre></td></tr></table></figure><p>安装之后，启动 PHP-FPM 进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service php-fpm start</div></pre></td></tr></table></figure><p>把 PHP-FPM 加入开机自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig php-fpm on</div></pre></td></tr></table></figure><h2 id="安装并配置-WordPress"><a href="#安装并配置-WordPress" class="headerlink" title="安装并配置 WordPress"></a>安装并配置 WordPress</h2><h3 id="安装-WordPress"><a href="#安装-WordPress" class="headerlink" title="安装 WordPress"></a>安装 WordPress</h3><p>配置好 LNMP 环境以后我们，继续使用 <code>yum</code> 来安装 WordPress:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install wordpress-y</div></pre></td></tr></table></figure><p>安装完成后，就可以在 /usr/share/wordpress 看到 WordPress 的源代码了</p><h3 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h3><p>进入 MySQL :</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -uroot --password='MyPas$word4Word_Press'</div></pre></td></tr></table></figure><p>为 WordPress 创建一个数据库:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CREATE DATABASE WORDPRESS;</div></pre></td></tr></table></figure><p>MySQL 部分设置完了，我们退出 MySQL 环境：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">exit</div></pre></td></tr></table></figure><p>把上述的 DB 配置<a href="">同步到 WordPress 的配置</a>文件中，可参考下面的配置：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * The base configuration for WordPress</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * The wp-config.php creation script uses this file during the</span></div><div class="line"><span class="comment"> * installation. You don't have to use the web site, you can</span></div><div class="line"><span class="comment"> * copy this file to "wp-config.php" and fill in the values.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * This file contains the following configurations:</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * * MySQL settings</span></div><div class="line"><span class="comment"> * * Secret keys</span></div><div class="line"><span class="comment"> * * Database table prefix</span></div><div class="line"><span class="comment"> * * ABSPATH</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * <span class="doctag">@link</span> https://codex.wordpress.org/Editing_wp-config.php</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * <span class="doctag">@package</span> WordPress</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="comment">// ** MySQL settings - You can get this info from your web host ** //</span></div><div class="line"><span class="comment">/** The name of the database for WordPress */</span></div><div class="line">define(<span class="string">'DB_NAME'</span>, <span class="string">'wordpress'</span>);</div><div class="line"></div><div class="line"><span class="comment">/** MySQL database username */</span></div><div class="line">define(<span class="string">'DB_USER'</span>, <span class="string">'root'</span>);</div><div class="line"></div><div class="line"><span class="comment">/** MySQL database password */</span></div><div class="line">define(<span class="string">'DB_PASSWORD'</span>, <span class="string">'MyPas$word4Word_Press'</span>);</div><div class="line"></div><div class="line"><span class="comment">/** MySQL hostname */</span></div><div class="line">define(<span class="string">'DB_HOST'</span>, <span class="string">'localhost'</span>);</div><div class="line"></div><div class="line"><span class="comment">/** Database Charset to use in creating database tables. */</span></div><div class="line">define(<span class="string">'DB_CHARSET'</span>, <span class="string">'utf8'</span>);</div><div class="line"></div><div class="line"><span class="comment">/** The Database Collate type. Don't change this if in doubt. */</span></div><div class="line">define(<span class="string">'DB_COLLATE'</span>, <span class="string">''</span>);</div><div class="line"></div><div class="line"><span class="comment">/**#@+</span></div><div class="line"><span class="comment"> * Authentication Unique Keys and Salts.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * Change these to different unique phrases!</span></div><div class="line"><span class="comment"> * You can generate these using the &#123;<span class="doctag">@link</span> https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service&#125;</span></div><div class="line"><span class="comment"> * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * <span class="doctag">@since</span> 2.6.0</span></div><div class="line"><span class="comment"> */</span></div><div class="line">define(<span class="string">'AUTH_KEY'</span>,         <span class="string">'put your unique phrase here'</span>);</div><div class="line">define(<span class="string">'SECURE_AUTH_KEY'</span>,  <span class="string">'put your unique phrase here'</span>);</div><div class="line">define(<span class="string">'LOGGED_IN_KEY'</span>,    <span class="string">'put your unique phrase here'</span>);</div><div class="line">define(<span class="string">'NONCE_KEY'</span>,        <span class="string">'put your unique phrase here'</span>);</div><div class="line">define(<span class="string">'AUTH_SALT'</span>,        <span class="string">'put your unique phrase here'</span>);</div><div class="line">define(<span class="string">'SECURE_AUTH_SALT'</span>, <span class="string">'put your unique phrase here'</span>);</div><div class="line">define(<span class="string">'LOGGED_IN_SALT'</span>,   <span class="string">'put your unique phrase here'</span>);</div><div class="line">define(<span class="string">'NONCE_SALT'</span>,       <span class="string">'put your unique phrase here'</span>);</div><div class="line"></div><div class="line"><span class="comment">/**#@-*/</span></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * WordPress Database Table prefix.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * You can have multiple installations in one database if you give each</span></div><div class="line"><span class="comment"> * a unique prefix. Only numbers, letters, and underscores please!</span></div><div class="line"><span class="comment"> */</span></div><div class="line">$table_prefix  = <span class="string">'wp_'</span>;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * See http://make.wordpress.org/core/2013/10/25/the-definitive-guide-to-disabling-auto-updates-in-wordpress-3-7</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="comment">/* Disable all file change, as RPM base installation are read-only */</span></div><div class="line">define(<span class="string">'DISALLOW_FILE_MODS'</span>, <span class="keyword">true</span>);</div><div class="line"></div><div class="line"><span class="comment">/* Disable automatic updater, in case you want to allow</span></div><div class="line"><span class="comment">   above FILE_MODS for plugins, themes, ... */</span></div><div class="line">define(<span class="string">'AUTOMATIC_UPDATER_DISABLED'</span>, <span class="keyword">true</span>);</div><div class="line"></div><div class="line"><span class="comment">/* Core update is always disabled, WP_AUTO_UPDATE_CORE value is ignore */</span></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * For developers: WordPress debugging mode.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * Change this to true to enable the display of notices during development.</span></div><div class="line"><span class="comment"> * It is strongly recommended that plugin and theme developers use WP_DEBUG</span></div><div class="line"><span class="comment"> * in their development environments.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * For information on other constants that can be used for debugging,</span></div><div class="line"><span class="comment"> * visit the Codex.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * <span class="doctag">@link</span> https://codex.wordpress.org/Debugging_in_WordPress</span></div><div class="line"><span class="comment"> */</span></div><div class="line">define(<span class="string">'WP_DEBUG'</span>, <span class="keyword">false</span>);</div><div class="line"></div><div class="line"><span class="comment">/* That's all, stop editing! Happy blogging. */</span></div><div class="line"></div><div class="line"><span class="comment">/** Absolute path to the WordPress directory. */</span></div><div class="line"><span class="keyword">if</span> ( !defined(<span class="string">'ABSPATH'</span>) )</div><div class="line">    define(<span class="string">'ABSPATH'</span>, <span class="string">'/usr/share/wordpress'</span>);</div><div class="line"></div><div class="line"><span class="comment">/** Sets up WordPress vars and included files. */</span></div><div class="line"><span class="keyword">require_once</span>(ABSPATH . <span class="string">'wp-settings.php'</span>);</div></pre></td></tr></table></figure><h3 id="配置-Nginx"><a href="#配置-Nginx" class="headerlink" title="配置 Nginx"></a>配置 Nginx</h3><p>WordPress 已经安装完毕，我们配置 Nginx  把请求转发给 PHP-FPM 来处理：</p><p>首先，重命名默认的配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /etc/nginx/conf.d/</div><div class="line">mv default.conf defaut.conf.bak</div></pre></td></tr></table></figure><p>在 <code>/etc/nginx/conf.d</code> <a href="">创建 wordpress.conf 配置</a>，参考下面的内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen 80;</div><div class="line">    root /usr/share/wordpress;</div><div class="line">    location / &#123;</div><div class="line">        index index.php index.html index.htm;</div><div class="line">        try_files $uri $uri/ /index.php index.php;</div><div class="line">    &#125;</div><div class="line">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</div><div class="line">    location ~ .php$ &#123;</div><div class="line">        fastcgi_pass   127.0.0.1:9000;</div><div class="line">        fastcgi_index  index.php;</div><div class="line">        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</div><div class="line">        include        fastcgi_params;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>配置后，通知 Nginx 进程重新加载：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx -s reload</div></pre></td></tr></table></figure><h2 id="准备域名和解析"><a href="#准备域名和解析" class="headerlink" title="准备域名和解析"></a>准备域名和解析</h2><h3 id="域名注册"><a href="#域名注册" class="headerlink" title="域名注册"></a>域名注册</h3><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><h3 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;准备-LNMP-环境&quot;&gt;&lt;a href=&quot;#准备-LNMP-环境&quot; class=&quot;headerlink&quot; title=&quot;准备 LNMP 环境&quot;&gt;&lt;/a&gt;准备 LNMP 环境&lt;/h2&gt;&lt;h3 id=&quot;安装-Nginx&quot;&gt;&lt;a href=&quot;#安装-Nginx&quot; class=&quot;headerlink&quot; title=&quot;安装 Nginx&quot;&gt;&lt;/a&gt;安装 Nginx&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;yum&lt;/code&gt; 安装 Nginx :&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yum install nginx -y&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改 /etc/nginx/conf.d/default.conf ，去除对 IPv6地址的监听，可参考下面的示例：&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
      <category term="WorkPress" scheme="http://qzdotnet.github.io/tags/WorkPress/"/>
    
  </entry>
  
  <entry>
    <title>基于 CentOS 搭建 Discuz 论坛</title>
    <link href="http://qzdotnet.github.io/2017/10/12/%E5%9F%BA%E4%BA%8E-CentOS-%E6%90%AD%E5%BB%BA-Discuz-%E8%AE%BA%E5%9D%9B/"/>
    <id>http://qzdotnet.github.io/2017/10/12/基于-CentOS-搭建-Discuz-论坛/</id>
    <published>2017-10-12T01:00:18.000Z</published>
    <updated>2017-10-20T00:33:21.316Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备-LAMP-环境"><a href="#准备-LAMP-环境" class="headerlink" title="准备 LAMP 环境"></a>准备 LAMP 环境</h2><p>LAMP 是 Linux、Apache、MySQL 和 PHP 的缩写，是 Discuz 论坛系统以来的基础运行环境。我们先来搭建LAMP 环境</p><h3 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h3><p>使用 <code>yum</code>  安装 MySQL:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install mysql-server -y</div></pre></td></tr></table></figure><a id="more"></a><p>安装完成后，启用 MySQL 服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service mysqld restart</div></pre></td></tr></table></figure><p>可以设置自己的 MySQL 账户名和密码，参考下面的内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/mysqladmin -u root password 'Password'</div></pre></td></tr></table></figure><p>将 MySQL 设置为开机自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig mysqld on</div></pre></td></tr></table></figure><h3 id="安装-Apache-组件"><a href="#安装-Apache-组件" class="headerlink" title="安装 Apache 组件"></a>安装 Apache 组件</h3><p>使用 <code>yum</code> 安装 Apache 组件:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install httpd -y</div></pre></td></tr></table></figure><p>安装之后，启动 httpd 进程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service httpd start</div></pre></td></tr></table></figure><p>把 httpd 也设置成开机自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig httpd on</div></pre></td></tr></table></figure><h3 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h3><p>使用 <code>yum</code> 安装 PHP:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install php php-fpm php-mysql -y</div></pre></td></tr></table></figure><p>安装之后，启动 PHP-FPM 进程 ：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service php-fpm start</div></pre></td></tr></table></figure><p>启动之后，可以使用下面的命令查看 PHP-FPM 进程监听哪个端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -nlpt | grep php-fpm</div></pre></td></tr></table></figure><p>把 PHP-FPM 也设置成开机自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chkconfig php-fpm on</div></pre></td></tr></table></figure><h2 id="安装并配置Discuz"><a href="#安装并配置Discuz" class="headerlink" title="安装并配置Discuz"></a>安装并配置Discuz</h2><h3 id="安装-Discuz"><a href="#安装-Discuz" class="headerlink" title="安装 Discuz"></a>安装 Discuz</h3><p>CentOS 6 没有 Discuz 的 <code>yum</code> 源，所以我们需要下载一个 Discuz 压缩包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget http://download.comsenz.com/DiscuzX/3.2/Discuz_X3.2_SC_UTF8.zip</div></pre></td></tr></table></figure><p>下载完成后，解压这个安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uzip Discuz_X3.2_SC_UTF8.zip</div></pre></td></tr></table></figure><p>解压完后，就能再 <em>upload</em> 文件夹里看到 Discuz 的源代码了</p><h3 id="配置-Discuz"><a href="#配置-Discuz" class="headerlink" title="配置 Discuz"></a>配置 Discuz</h3><p>由于 PHP 默认访问 <code>/var/www/html/</code> 文件夹，所以我们需要把 <code>upload</code> 文件夹里的文件豆腐知道 <code>/var/www/html/</code> 文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mv -r upload/* /var/www/html/</div></pre></td></tr></table></figure><p>给 <code>/var/www/html/</code> 目录及子目录赋予权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod -R 777 /var/www/html</div></pre></td></tr></table></figure><p>重启 Apache</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service httpd restart</div></pre></td></tr></table></figure><h2 id="准备域名和证书"><a href="#准备域名和证书" class="headerlink" title="准备域名和证书"></a>准备域名和证书</h2><h3 id="域名注册"><a href="#域名注册" class="headerlink" title="域名注册"></a>域名注册</h3><p>如果你还没有域名，可以从阿里云注册域名。</p><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p>购买完成后，需要进行域名机械。域名设置解析后需要过一段时间才会生效，通过 <code>ping</code> 命令检查域名是否生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ping www.yourdomain.com</div></pre></td></tr></table></figure><p>如果 <code>ping</code> 命令返回的信息中包含你设置的 IP 地址，说明解析成功了。恭喜，您的 Discuz 论坛已经部署完成，您可以通过浏览器访问论坛查看效果。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;准备-LAMP-环境&quot;&gt;&lt;a href=&quot;#准备-LAMP-环境&quot; class=&quot;headerlink&quot; title=&quot;准备 LAMP 环境&quot;&gt;&lt;/a&gt;准备 LAMP 环境&lt;/h2&gt;&lt;p&gt;LAMP 是 Linux、Apache、MySQL 和 PHP 的缩写，是 Discuz 论坛系统以来的基础运行环境。我们先来搭建LAMP 环境&lt;/p&gt;
&lt;h3 id=&quot;安装-MySQL&quot;&gt;&lt;a href=&quot;#安装-MySQL&quot; class=&quot;headerlink&quot; title=&quot;安装 MySQL&quot;&gt;&lt;/a&gt;安装 MySQL&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;yum&lt;/code&gt;  安装 MySQL:&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yum install mysql-server -y&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
      <category term="Discuz" scheme="http://qzdotnet.github.io/tags/Discuz/"/>
    
  </entry>
  
  <entry>
    <title>Linux 基础入门</title>
    <link href="http://qzdotnet.github.io/2017/10/09/Linux-%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/"/>
    <id>http://qzdotnet.github.io/2017/10/09/Linux-基础入门/</id>
    <published>2017-10-09T11:58:15.000Z</published>
    <updated>2017-10-20T00:31:00.656Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h2><h3 id="创建目录"><a href="#创建目录" class="headerlink" title="创建目录"></a>创建目录</h3><p>使用 mkdir 命令创建目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir <span class="variable">$HOME</span>/testFolder</div></pre></td></tr></table></figure><a id="more"></a><h3 id="切换目录"><a href="#切换目录" class="headerlink" title="切换目录"></a>切换目录</h3><p>使用 cd 命令切换目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd <span class="variable">$HOME</span>/testFolder</div></pre></td></tr></table></figure><p>使用 cd../ 命令切换到上一级目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd ../</div></pre></td></tr></table></figure><h3 id="移动目录"><a href="#移动目录" class="headerlink" title="移动目录"></a>移动目录</h3><p>使用 mv 命令移动目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mv <span class="variable">$HOME</span>/testFolder /var/tmp</div></pre></td></tr></table></figure><h3 id="删除目录"><a href="#删除目录" class="headerlink" title="删除目录"></a>删除目录</h3><p>使用 rm -rf 命令删除目录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rm -rf /var/tmp/testFolder</div></pre></td></tr></table></figure><h3 id="查看目录下的文件"><a href="#查看目录下的文件" class="headerlink" title="查看目录下的文件"></a>查看目录下的文件</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls /etc</div></pre></td></tr></table></figure><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><h3 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h3><p>使用 touch 命令创建文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">touch ~/testFile</div></pre></td></tr></table></figure><h3 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h3><p>使用 cp 命令复制文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp ~/testFile ~/testNewFile</div></pre></td></tr></table></figure><h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><p>使用 rm 命令删除文件，输入 <code>y</code>后回车确认删除</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rm ~/testFile</div></pre></td></tr></table></figure><h3 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h3><p>使用 cat 命令查看 .bash_history 文件内容, bash_history 文件保存执行命令的历史记录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat ~/.bash_history</div></pre></td></tr></table></figure><h2 id="过滤，管道与重定向"><a href="#过滤，管道与重定向" class="headerlink" title="过滤，管道与重定向"></a>过滤，管道与重定向</h2><h3 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h3><p>过滤出 /etc/passwd 文件中包含 <code>root</code> 的记录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grep <span class="string">'root'</span> /etc/passwd</div></pre></td></tr></table></figure><p>递归过滤出 /var/log/ 目录中包含 <code>lindex</code>的记录</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grep -r <span class="string">'linux'</span> /var/log/</div></pre></td></tr></table></figure><h3 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h3><p>简单来说，linux中的管道的作用是将上一个命令的输出作为下一个命令的输入，像 pipe 一样将各个命令串联起来执行，管道的操作符是 |</p><p>比如，我们可以将 cat 和 grep 两个命令用管道组合在一起</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /etc/passwd | grep <span class="string">'root'</span></div></pre></td></tr></table></figure><p>过滤出/etc目录中名字包含<code>ssh</code>的目录（不包括子目录)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls /etc | grep <span class="string">'ssh'</span></div></pre></td></tr></table></figure><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><p>可以使用 &gt; 或者 &lt; 将命令的输出重定向到一个文件中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo &apos;Hello World&apos; &gt; ~/test.txt</div></pre></td></tr></table></figure><h2 id="常用的运维明令"><a href="#常用的运维明令" class="headerlink" title="常用的运维明令"></a>常用的运维明令</h2><h3 id="ping-命令"><a href="#ping-命令" class="headerlink" title="ping 命令"></a>ping 命令</h3><p>对 cloud.tencent.com 发送 4 个 ping 包，检查与其是否联通</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ping -c 4 cloud.tencent.com</div></pre></td></tr></table></figure><h3 id="netstat-命令"><a href="#netstat-命令" class="headerlink" title="netstat 命令"></a>netstat 命令</h3><p>netstat 命令用户显示各种网络相关信息，如网络连接、路由表、接口状态等等</p><p>列出所有处于监听状态的 tcp 端口</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat <span class="nomarkup">-lt</span></div></pre></td></tr></table></figure><p>查看所有的端口信息，包括 PID 和进程名称</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -tulpn</div></pre></td></tr></table></figure><h3 id="ps-命令"><a href="#ps-命令" class="headerlink" title="ps 命令"></a>ps 命令</h3><p>过滤得到当前系统中的 ssh 进程信息</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ps -aux | grep <span class="string">'ssh'</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;目录操作&quot;&gt;&lt;a href=&quot;#目录操作&quot; class=&quot;headerlink&quot; title=&quot;目录操作&quot;&gt;&lt;/a&gt;目录操作&lt;/h2&gt;&lt;h3 id=&quot;创建目录&quot;&gt;&lt;a href=&quot;#创建目录&quot; class=&quot;headerlink&quot; title=&quot;创建目录&quot;&gt;&lt;/a&gt;创建目录&lt;/h3&gt;&lt;p&gt;使用 mkdir 命令创建目录&lt;/p&gt;
&lt;figure class=&quot;highlight powershell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mkdir &lt;span class=&quot;variable&quot;&gt;$HOME&lt;/span&gt;/testFolder&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>搭建 GIT 服务器教程</title>
    <link href="http://qzdotnet.github.io/2017/10/09/%E6%90%AD%E5%BB%BA-GIT-%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://qzdotnet.github.io/2017/10/09/搭建-GIT-服务器教程/</id>
    <published>2017-10-09T05:58:37.000Z</published>
    <updated>2017-10-20T00:32:47.552Z</updated>
    
    <content type="html"><![CDATA[<p>转载自<a href="https://cloud.tencent.com/developer/labs/lab/10045" target="_blank" rel="external">腾讯云 开发者实验室</a></p><a id="more"></a><h2 id="01-下载安装git"><a href="#01-下载安装git" class="headerlink" title="01 下载安装git"></a>01 下载安装git</h2><p>Git 是一款免费、开源的分布式版本控制系统，用户敏捷高效的进行版本管理。本次安装使用的服务器是CentOS7.0 x64的服务器操作系统</p><h3 id="安装依赖库和编译工具"><a href="#安装依赖库和编译工具" class="headerlink" title="安装依赖库和编译工具"></a>安装依赖库和编译工具</h3><p>为了后续安装正常进行，需要先安装一些相关依赖库和编译工具</p><p><strong>安装依赖库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</div></pre></td></tr></table></figure><p><strong>安装编译工具</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install gcc perl_ExtUtils-MakeMaker</div></pre></td></tr></table></figure><h3 id="下载git"><a href="#下载git" class="headerlink" title="下载git"></a>下载git</h3><p>选择一个目录，用来存放下载下来的安装包，这里讲安装包放在/user/local/src目录里</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /usr/local/src</div></pre></td></tr></table></figure><p>到官网找一个新版稳定的源码包下载到/usr/local/src文件夹里</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget https://www.kernel.org/pub/software/scm/git/git-2.10.0.tar.gz</div></pre></td></tr></table></figure><h3 id="解压和编译"><a href="#解压和编译" class="headerlink" title="解压和编译"></a>解压和编译</h3><p>解压下载的源码包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zvxf git-2.10.0.tar.gz</div></pre></td></tr></table></figure><p>解压后进入git-2.10.0文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd git-2.10.0</div></pre></td></tr></table></figure><p> 执行编译</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make all prefix=/usr/local/git</div></pre></td></tr></table></figure><p>执行完成后，安装到/usr/local/git目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make install prefix=/usr/local/git</div></pre></td></tr></table></figure><h2 id="02-配置环境变量"><a href="#02-配置环境变量" class="headerlink" title="02 配置环境变量"></a>02 配置环境变量</h2><h3 id="将git目录加入PATH"><a href="#将git目录加入PATH" class="headerlink" title="将git目录加入PATH"></a>将git目录加入PATH</h3><p>将原来的PATH指向目录修改为现在的目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo 'export PATH=$PATH:/usr/local/git/bin' &gt;&gt; /etc/bashrc</div></pre></td></tr></table></figure><p>生效环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source /etc/bashrc</div></pre></td></tr></table></figure><p>此时我们能查看 git 版本号，说明我们已经安装成功了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git --version</div></pre></td></tr></table></figure><h2 id="03-创建git账号密码"><a href="#03-创建git账号密码" class="headerlink" title="03 创建git账号密码"></a>03 创建git账号密码</h2><p>为我们刚刚搭建好的 git 创建一个账号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">useradd -m gituser</div></pre></td></tr></table></figure><p>然后为这个账号设置密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">passwd gituser</div></pre></td></tr></table></figure><blockquote><p>控制台输入创建密码后，输入自定义的密码，并二次确认。</p></blockquote><h2 id="04-初始化-git-仓库并配置用户权限"><a href="#04-初始化-git-仓库并配置用户权限" class="headerlink" title="04 初始化 git 仓库并配置用户权限"></a>04 初始化 git 仓库并配置用户权限</h2><h3 id="创建-git-仓库并初始化"><a href="#创建-git-仓库并初始化" class="headerlink" title="创建 git 仓库并初始化"></a>创建 git 仓库并初始化</h3><p>我们创建 <em>data/repositories</em> 目录用户存放git仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir -p /data/repositories</div></pre></td></tr></table></figure><p> 创建好后，初始化这个仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /data/repositories/ &amp;&amp; git init --bare test.git</div></pre></td></tr></table></figure><h3 id="配置用户权限"><a href="#配置用户权限" class="headerlink" title="配置用户权限"></a>配置用户权限</h3><p>给 git 仓库目录设置用户和用户组并设置权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chown -R gituser:gituser /data/repositories</div></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod 755 /data/repositories</div></pre></td></tr></table></figure><p>[查找 git-shell 所在目录]，编辑<em>/etc/passwd</em> 文件，将最后一行关于<code>gituser</code>的登录shell配置改为git-shell的目录如下</p><p><strong>示例代码： /etc/passwd </strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gituser:x:500:500::/home/gituser:/usr/local/git/bin/git-shell</div></pre></td></tr></table></figure><blockquote><p>如果按照刚才的步骤执行，这个位置应该 /usr/local/git/bin/git-shell,否则请通 <code>wich git-shell</code> 命令查看位置</p><p>安全目的，限制 git 账号的 ssh 链接只能是登录 git-shell</p></blockquote><h2 id="使用搭建好的-Git-服务器"><a href="#使用搭建好的-Git-服务器" class="headerlink" title="使用搭建好的 Git 服务器"></a>使用搭建好的 Git 服务器</h2><p>克隆 test repo 到本地</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd ~&amp;&amp; git clone gituser@&lt;ip地址&gt;:/data/repositories/test.git</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转载自&lt;a href=&quot;https://cloud.tencent.com/developer/labs/lab/10045&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;腾讯云 开发者实验室&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://qzdotnet.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://qzdotnet.github.io/tags/Linux/"/>
    
      <category term="git" scheme="http://qzdotnet.github.io/tags/git/"/>
    
  </entry>
  
</feed>
